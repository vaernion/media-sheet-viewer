{"version":3,"sources":["classes/Film.jsx","components/FilmDetails/index.jsx","components/FilmsList/FieldHeader.jsx","components/FilmsList/FilmListItem.jsx","components/FilmsList/SearchForm.jsx","components/FilmsList/index.jsx","App.js","serviceWorker.js","index.js"],"names":["Film","film","this","id","_count","title","translatedTitle","sortTitle","director","split","push","trim","genre","year","franchise","films","i","filmsRaw","length","filmsSortedTitleAsc","sort","a","b","localeCompare","filmsSortedTitleDesc","reverse","filmsSortedYearAsc","filmsSortedYearDesc","filmsSortedDirectorAsc","pop","filmsSorted","titleAsc","titleDesc","yearAsc","yearDesc","directorAsc","directorDesc","franchiseAsc","franchiseDesc","FilmDetails","useContext","MediaContext","filmId","useParams","find","e","Number","document","map","name","key","FieldHeader","props","active","sortBy","field","arrow","sortReverse","className","onClick","onclick","label","FilmListItem","to","SearchForm","type","placeholder","onChange","currentTarget","value","FilmsList","context","React","useState","setSortBy","setSortReverse","searchField","setSearchField","sortedFilms","setSortedFilms","useEffect","handleSort","toLowerCase","startsWith","filter","findIndex","includes","replace","toString","filterFilms","mediaContext","createContext","menu","path","App","Provider","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8ipYAEaA,EAEX,WAAYC,GAAO,oBACjBC,KAAKC,GAAKH,EAAKI,QAAU,EACzBF,KAAKG,MAAQJ,EAAK,8BAClBC,KAAKI,gBAAkBL,EAAK,oCAC5BC,KAAKK,UAAYN,EAAI,KACrBC,KAAKM,SAAW,GALA,oBAMKP,EAAK,eAAeQ,MAAM,UAN/B,IAMhB,2BAAyD,CAAC,IAAjDD,EAAgD,QACvDN,KAAKM,SAASE,KAAKF,EAASG,SAPd,8BAShBT,KAAKU,MAAQ,GATG,oBAUEX,EAAI,OAAWQ,MAAM,WAVvB,IAUhB,2BAAkD,CAAC,IAA1CG,EAAyC,QAChDV,KAAKU,MAAMF,KAAKE,EAAMD,SAXR,8BAahBT,KAAKW,KAAOZ,EAAI,KAChBC,KAAKY,UAAYb,EAAK,oBAhBbD,EACJI,OAAS,EAoBlB,IADO,IAAMW,EAAQ,GACZC,EAAI,EAAGA,EAAIC,EAASC,OAAQF,IACnCD,EAAML,KAAK,IAAIV,EAAKiB,EAASD,KAG/B,IAAMG,EAAsB,UAAIJ,GAAOK,MAAK,SAACC,EAAGC,GAC9C,OAAOD,EAAEd,UAAUgB,cAAcD,EAAEf,cAE/BiB,EAAuB,YAAIL,GAAqBM,UAChDC,EAAqB,UAAIX,GAAOK,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAER,KAAOS,EAAET,QAC1Dc,EAAsB,YAAID,GAAoBD,UAC9CG,EAAyB,UAAIb,GAAOK,MAAK,SAACC,EAAGC,GAGjD,OAFAD,EAAIA,EAAEb,SAAS,GAAGC,MAAM,KAAKoB,MAC7BP,EAAIA,EAAEd,SAAS,GAAGC,MAAM,KAAKoB,MACtBR,EAAEE,cAAcD,MAuBZQ,EAAc,CACzBC,SAAUZ,EACVa,UAAWR,EACXS,QAASP,EACTQ,SAAUP,EACVQ,YAAaP,EACbQ,aA3B8B,YAAIR,GAAwBH,UA4B1DY,aA3B8B,UAAItB,GAAOK,MAAK,SAACC,EAAGC,GAClD,MAAoB,KAAhBD,EAAEP,UAAyB,EACX,KAAhBQ,EAAER,WAA0B,EACzBO,EAAEP,UAAUS,cAAcD,EAAER,cAyBnCwB,cAvB+B,UAAIvB,GAAOK,MAAK,SAACC,EAAGC,GACnD,MAAoB,KAAhBD,EAAEP,UAAyB,EACX,KAAhBQ,EAAER,WAA0B,EACzBQ,EAAER,UAAUS,cAAcF,EAAEP,eC3C9B,SAASyB,IACd,IAAMxB,EAAQyB,qBAAWC,GAAc1B,MAC/B2B,EAAWC,cAAXD,OAEFzC,EAAOc,EAAM6B,MAAK,SAACC,GAAD,OAAOA,EAAE1C,KAAO2C,OAAOJ,MAG/C,OAFAK,SAAS1C,MAAT,8BAAwCJ,EAAKI,OAG3C,oCACE,6BACE,8BACGJ,EAAKE,GADR,KACcF,EAAKI,OAEnB,8BAAOJ,EAAKY,MACZ,8BACGZ,EAAKO,SAASwC,KAAI,SAACC,GAAD,OACjB,0BAAMC,IAAKD,GAAOA,OAGtB,+BACA,iC,YCtBD,SAASE,EAAYC,GAC1B,IAAIC,EAASD,EAAMhC,KAAKkC,SAAWF,EAAMG,MAAQ,IAAM,KACnDC,EAAQH,EAAUD,EAAMhC,KAAKqC,YAAc,OAAS,MAAS,KAEjE,OACE,oCACE,0BACEC,UAAW,QAAUN,EAAMG,OAASF,EAAS,UAAY,IACzDM,QAASP,EAAMQ,QAAU,kBAAMR,EAAMQ,QAAQR,EAAMG,QAAS,MAE3DH,EAAMS,MAJT,IAIiBR,EAJjB,IAI0BG,I,MCRzB,SAASM,EAAaV,GAC3B,IAAMnD,EAAOmD,EAAMnD,KACnB,OACE,oCACE,yBAAKyD,UAAU,gBACb,0BAAMA,UAAU,aACd,kBAAC,IAAD,CAAMK,GAAE,gBAAW9D,EAAKE,KACrBF,EAAKE,GADR,KACcF,EAAKI,QAGrB,0BAAMqD,UAAU,YAAYzD,EAAKY,MACjC,0BAAM6C,UAAU,gBACbzD,EAAKO,SAASwC,KAAI,SAACC,GAAD,OACjB,0BAAMC,IAAKD,GAAOA,OAGtB,0BAAMS,UAAU,aACbzD,EAAKW,MAAMoC,KAAI,SAACC,GAAD,OACd,0BAAMC,IAAKD,GAAOA,OAGtB,0BAAMS,UAAU,iBAAiBzD,EAAKa,a,MCtBvC,SAASkD,EAAWZ,GAUzB,OACE,oCACE,2BACEa,KAAK,OACLC,YAAY,kDACZC,SAde,SAACtB,IAElBA,EAAEuB,cAAcC,MAAMnD,QAAU,GACC,IAAjC2B,EAAEuB,cAAcC,MAAMnD,SAEtBkC,EAAMe,SAAStB,EAAEuB,cAAcC,WCF9B,SAASC,IACdvB,SAAS1C,MAAQ,qBACjB,IAAMkE,EAAUC,IAAMhC,WAAWC,GAFP,EAIE+B,IAAMC,SAAS,aAJjB,mBAInBnB,EAJmB,KAIXoB,EAJW,OAKYF,IAAMC,UAAS,GAL3B,mBAKnBhB,EALmB,KAKNkB,EALM,OAMYH,IAAMC,SAAS,IAN3B,mBAMnBG,EANmB,KAMNC,EANM,OAOYL,IAAMC,SAAS,MAP3B,mBAOnBK,EAPmB,KAONC,EAPM,KAS1BP,IAAMQ,WAAU,WACdD,EACG,WACC,IAAM3D,EAAOmD,EAAQzC,YACrB,OAAQwB,GACN,IAAK,YACH,OAAOG,EAAcrC,EAAKY,UAAYZ,EAAKW,SAC7C,IAAK,OACH,OAAO0B,EAAcrC,EAAKc,SAAWd,EAAKa,QAC5C,IAAK,WACH,OAAOwB,EAAcrC,EAAKgB,aAAehB,EAAKe,YAChD,IAAK,YACH,OAAOsB,EAAcrC,EAAKkB,cAAgBlB,EAAKiB,aACjD,QACE,OAAOkC,EAAQxD,OAZpB,MAgBF,CAACuC,EAAQG,EAAac,EAAQxD,MAAOwD,EAAQzC,cAEhD,IAAMmD,EAAa,SAAC1B,GACdA,IAAUD,EAAQqB,GAAgBlB,IAEpCkB,GAAe,GACfD,EAAUnB,KA6Bd,IAAKuB,EAAa,OAAO,KAEzB,IAAM/D,EACA6D,EAAY1D,OAAS,EA5BP,SAAC4D,EAAaF,GAChC,OAAIA,EAAYM,cAAcC,WAAW,MAChCL,EAAYM,QACjB,SAACnF,GAAD,OAKS,IAJPA,EAAKW,MAAMyE,WAAU,SAACzE,GAAD,OACnBA,EACGsE,cACAI,SAASV,EAAYM,cAAcK,QAAQ,KAAM,WAGjDX,EAAYM,cAAcC,WAAW,MACvCL,EAAYM,QACjB,SAACnF,GAAD,OAAUA,EAAKY,KAAK2E,aAAeZ,EAAYW,QAAQ,KAAM,OAGxDT,EAAYM,QACjB,SAACnF,GAAD,OACEA,EAAKI,MAAM6E,cAAcI,SAASV,EAAYM,iBAGvC,IAFPjF,EAAKO,SAAS6E,WAAU,SAAC7E,GAAD,OACtBA,EAAS0E,cAAcI,SAASV,EAAYM,qBAU3CO,CAAYX,EAAaF,GAEzBE,EAIX,OACE,oCACE,kBAACd,EAAD,CAAYG,SAAUU,IACtB,yBAAKnB,UAAU,gBACb,kBAACP,EAAD,CACEI,MAAM,YACNM,MAAM,QACND,QAASqB,EACT7D,KAAM,CAAEkC,SAAQG,iBAElB,kBAACN,EAAD,CACEI,MAAM,OACNM,MAAM,OACND,QAASqB,EACT7D,KAAM,CAAEkC,SAAQG,iBAElB,kBAACN,EAAD,CACEI,MAAM,WACNM,MAAM,WACND,QAASqB,EACT7D,KAAM,CAAEkC,SAAQG,iBAElB,kBAACN,EAAD,CACEI,MAAM,QACNM,MAAM,QACND,QAASqB,EACT7D,KAAM,CAAEkC,SAAQG,iBAElB,kBAACN,EAAD,CACEI,MAAM,YACNM,MAAM,YACND,QAASqB,EACT7D,KAAM,CAAEkC,SAAQG,kBAGpB,6BACG1C,EAEEiC,KAAI,SAAC/C,GAAD,OACH,kBAAC6D,EAAD,CAAcZ,IAAKjD,EAAKE,GAAIF,KAAMA,SChH9C,IAAMyF,EAAe,CAAE3E,QAAOe,eACjBW,EAAe+B,IAAMmB,gBAE5BC,EAAO,CACX,CAAEC,KAAM,IAAK5C,KAAM,QACnB,CAAE4C,KAAM,SAAU5C,KAAM,SACxB,CAAE4C,KAAM,MAAO5C,KAAM,OA4BR6C,MAzBf,WACE,OACE,oCACE,kBAAC,IAAD,KACGF,EAAK5C,KAAI,SAACH,GAAD,OACR,kBAAC,IAAD,CAAMK,IAAKL,EAAEI,KAAMc,GAAIlB,EAAEgD,MACtBhD,EAAEI,SAGP,kBAACR,EAAasD,SAAd,CAAuB1B,MAAOqB,GAC5B,kBAAC,IAAD,CAAOG,KAAK,IAAIG,OAAK,GACnB,kBAAC1B,EAAD,OAEF,kBAAC,IAAD,CAAOuB,KAAK,SAASG,OAAK,GACxB,kBAAC1B,EAAD,OAEF,kBAAC,IAAD,CAAOuB,KAAK,kBACV,kBAACtD,EAAD,WCpBQ0D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFzD,SAAS0D,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.73068130.chunk.js","sourcesContent":["import filmsRaw from \"../data/films.json\";\n\nexport class Film {\n  static _count = 0;\n  constructor(film) {\n    this.id = Film._count += 1;\n    this.title = film[\"Original title (romanized)\"];\n    this.translatedTitle = film[\"This release's translation/title\"];\n    this.sortTitle = film[\"Sort\"];\n    this.director = [];\n    for (let director of film[\"Director(s)\"].split(/[,/]+/)) {\n      this.director.push(director.trim());\n    }\n    this.genre = [];\n    for (let genre of film[\"Genres\"].split(/[,/|]+/)) {\n      this.genre.push(genre.trim());\n    }\n    this.year = film[\"Year\"];\n    this.franchise = film[\"Series/Universe\"];\n  }\n}\n\nexport const films = [];\nfor (let i = 0; i < filmsRaw.length; i++) {\n  films.push(new Film(filmsRaw[i]));\n}\n\nconst filmsSortedTitleAsc = [...films].sort((a, b) => {\n  return a.sortTitle.localeCompare(b.sortTitle);\n});\nconst filmsSortedTitleDesc = [...filmsSortedTitleAsc].reverse();\nconst filmsSortedYearAsc = [...films].sort((a, b) => a.year - b.year);\nconst filmsSortedYearDesc = [...filmsSortedYearAsc].reverse();\nconst filmsSortedDirectorAsc = [...films].sort((a, b) => {\n  a = a.director[0].split(\" \").pop();\n  b = b.director[0].split(\" \").pop();\n  return a.localeCompare(b);\n});\nconst filmsSortedDirectorDesc = [...filmsSortedDirectorAsc].reverse();\nconst filmsSortedFranchiseAsc = [...films].sort((a, b) => {\n  if (a.franchise === \"\") return 1;\n  if (b.franchise === \"\") return -1;\n  return a.franchise.localeCompare(b.franchise);\n});\nconst filmsSortedFranchiseDesc = [...films].sort((a, b) => {\n  if (a.franchise === \"\") return 1;\n  if (b.franchise === \"\") return -1;\n  return b.franchise.localeCompare(a.franchise);\n});\n\n// console.log(\n//   filmsSortedYearAsc[0],\n//   filmsSortedYearDesc[0],\n//   filmsSortedDirectorAsc[0],\n//   filmsSortedDirectorDesc[0],\n//   filmsSortedFranchiseAsc[0],\n//   filmsSortedFranchiseDesc[0]\n// );\n\nexport const filmsSorted = {\n  titleAsc: filmsSortedTitleAsc,\n  titleDesc: filmsSortedTitleDesc,\n  yearAsc: filmsSortedYearAsc,\n  yearDesc: filmsSortedYearDesc,\n  directorAsc: filmsSortedDirectorAsc,\n  directorDesc: filmsSortedDirectorDesc,\n  franchiseAsc: filmsSortedFranchiseAsc,\n  franchiseDesc: filmsSortedFranchiseDesc,\n};\n","import React, { useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { MediaContext } from \"../../App\";\n\nexport function FilmDetails() {\n  const films = useContext(MediaContext).films;\n  const { filmId } = useParams();\n\n  const film = films.find((e) => e.id === Number(filmId));\n  document.title = `MediaSheet - Film - ${film.title}`;\n\n  return (\n    <>\n      <div>\n        <span>\n          {film.id}--{film.title}\n        </span>\n        <span>{film.year}</span>\n        <span>\n          {film.director.map((name) => (\n            <span key={name}>{name}</span>\n          ))}\n        </span>\n        <span></span>\n        <span></span>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\n\nexport function FieldHeader(props) {\n  let active = props.sort.sortBy === props.field ? \"*\" : null;\n  let arrow = active ? (props.sort.sortReverse ? \"desc\" : \"asc\") : null;\n\n  return (\n    <>\n      <span\n        className={\"film-\" + props.field + (active ? \" active\" : \"\")}\n        onClick={props.onclick ? () => props.onclick(props.field) : null}\n      >\n        {props.label} {active} {arrow}\n      </span>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./filmsList.css\";\n\nexport function FilmListItem(props) {\n  const film = props.film;\n  return (\n    <>\n      <div className=\"filmListItem\">\n        <span className=\"filmTitle\">\n          <Link to={`films/${film.id}`}>\n            {film.id}--{film.title}\n          </Link>\n        </span>\n        <span className=\"filmYear\">{film.year}</span>\n        <span className=\"filmDirector\">\n          {film.director.map((name) => (\n            <span key={name}>{name}</span>\n          ))}\n        </span>\n        <span className=\"filmGenre\">\n          {film.genre.map((name) => (\n            <span key={name}>{name}</span>\n          ))}\n        </span>\n        <span className=\"filmFranchise\">{film.franchise}</span>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport \"./searchForm.css\";\n\nexport function SearchForm(props) {\n  const handleChange = (e) => {\n    if (\n      e.currentTarget.value.length >= 2 ||\n      e.currentTarget.value.length === 0\n    ) {\n      props.onChange(e.currentTarget.value);\n    }\n  };\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        placeholder=\"search star wars | g:drama | hitchcock | y:2010\"\n        onChange={handleChange}\n      />\n    </>\n  );\n}\n","import React from \"react\";\nimport { MediaContext } from \"../../App.js\";\nimport { FieldHeader } from \"./FieldHeader.jsx\";\nimport { FilmListItem } from \"./FilmListItem\";\nimport \"./filmsList.css\";\nimport { SearchForm } from \"./SearchForm.jsx\";\n\nexport function FilmsList() {\n  document.title = \"MediaSheet - Films\";\n  const context = React.useContext(MediaContext);\n\n  const [sortBy, setSortBy] = React.useState(\"sortTitle\");\n  const [sortReverse, setSortReverse] = React.useState(false);\n  const [searchField, setSearchField] = React.useState(\"\");\n  const [sortedFilms, setSortedFilms] = React.useState(null);\n\n  React.useEffect(() => {\n    setSortedFilms(\n      (() => {\n        const sort = context.filmsSorted;\n        switch (sortBy) {\n          case \"sortTitle\":\n            return sortReverse ? sort.titleDesc : sort.titleAsc;\n          case \"year\":\n            return sortReverse ? sort.yearDesc : sort.yearAsc;\n          case \"director\":\n            return sortReverse ? sort.directorDesc : sort.directorAsc;\n          case \"franchise\":\n            return sortReverse ? sort.franchiseDesc : sort.franchiseAsc;\n          default:\n            return context.films;\n        }\n      })()\n    );\n  }, [sortBy, sortReverse, context.films, context.filmsSorted]);\n\n  const handleSort = (field) => {\n    if (field === sortBy) setSortReverse(!sortReverse);\n    else {\n      setSortReverse(false);\n      setSortBy(field);\n    }\n  };\n\n  const filterFilms = (sortedFilms, searchField) => {\n    if (searchField.toLowerCase().startsWith(\"g:\")) {\n      return sortedFilms.filter(\n        (film) =>\n          film.genre.findIndex((genre) =>\n            genre\n              .toLowerCase()\n              .includes(searchField.toLowerCase().replace(\"g:\", \"\"))\n          ) !== -1\n      );\n    } else if (searchField.toLowerCase().startsWith(\"y:\")) {\n      return sortedFilms.filter(\n        (film) => film.year.toString() === searchField.replace(\"y:\", \"\")\n      );\n    } else {\n      return sortedFilms.filter(\n        (film) =>\n          film.title.toLowerCase().includes(searchField.toLowerCase()) ||\n          film.director.findIndex((director) =>\n            director.toLowerCase().includes(searchField.toLowerCase())\n          ) !== -1\n      );\n    }\n  };\n\n  if (!sortedFilms) return null;\n\n  const films = (() => {\n    if (searchField.length > 2) {\n      return filterFilms(sortedFilms, searchField);\n    } else {\n      return sortedFilms;\n    }\n  })();\n\n  return (\n    <>\n      <SearchForm onChange={setSearchField} />\n      <div className=\"fieldHeaders\">\n        <FieldHeader\n          field=\"sortTitle\"\n          label=\"Title\"\n          onclick={handleSort}\n          sort={{ sortBy, sortReverse }}\n        />\n        <FieldHeader\n          field=\"year\"\n          label=\"Year\"\n          onclick={handleSort}\n          sort={{ sortBy, sortReverse }}\n        />\n        <FieldHeader\n          field=\"director\"\n          label=\"Director\"\n          onclick={handleSort}\n          sort={{ sortBy, sortReverse }}\n        />\n        <FieldHeader\n          field=\"genre\"\n          label=\"Genre\"\n          onclick={handleSort}\n          sort={{ sortBy, sortReverse }}\n        />\n        <FieldHeader\n          field=\"franchise\"\n          label=\"Franchise\"\n          onclick={handleSort}\n          sort={{ sortBy, sortReverse }}\n        />\n      </div>\n      <div>\n        {films\n          // .filter((e) => e.id > 0 && e.id < 200)\n          .map((film) => (\n            <FilmListItem key={film.id} film={film} />\n          ))}\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Link, Route } from \"react-router-dom\";\nimport { films, filmsSorted } from \"./classes/Film\";\nimport { FilmDetails } from \"./components/FilmDetails\";\nimport { FilmsList } from \"./components/FilmsList\";\n\nconst mediaContext = { films, filmsSorted };\nexport const MediaContext = React.createContext();\n\nconst menu = [\n  { path: \"/\", name: \"Home\" },\n  { path: \"/films\", name: \"Films\" },\n  { path: \"/tv\", name: \"TV\" },\n];\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        {menu.map((e) => (\n          <Link key={e.name} to={e.path}>\n            {e.name}\n          </Link>\n        ))}\n        <MediaContext.Provider value={mediaContext}>\n          <Route path=\"/\" exact>\n            <FilmsList />\n          </Route>\n          <Route path=\"/films\" exact>\n            <FilmsList />\n          </Route>\n          <Route path=\"/films/:filmId\">\n            <FilmDetails />\n          </Route>\n        </MediaContext.Provider>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}