{"version":3,"sources":["components/Store/index.tsx","components/Menu/menuItems.ts","components/Spinner/index.tsx","components/ErrorBoundary.jsx","components/Menu/MenuLink.tsx","components/Menu/MenuParent.tsx","components/Menu/index.tsx","components/NotFound.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["initialState","count","filterFilms","filterTv","filterGames","sortFilms","sortTv","sortGames","sortReverseFilms","sortReverseTv","sortReverseGames","countReducer","state","action","type","storeReducer","payload","DispatchContext","React","StateContext","Store","props","dispatch","Provider","value","children","menuItems","path","name","exact","Spinner","className","ErrorBoundary","hasError","error","errorInfo","this","MenuLink","image","activeClassName","to","src","alt","MenuParent","item","menuChildren","active","setActive","key","onMouseEnter","onMouseLeave","map","child","Menu","NotFound","location","useLocation","document","title","pathname","style","textAlign","marginTop","onClick","Home","FilmList","TvList","GamesList","DirectorList","MediaDetails","Stats","StatsFilms","StatsTv","StatsGames","appRoutes","component","App","basename","fallback","route","Boolean","window","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.c71b25cb.chunk.js","sourcesContent":["import * as React from \"react\";\n\nlet initialCount = 0;\nconst initialState = {\n  count: initialCount,\n  filterFilms: \"\",\n  filterTv: \"\",\n  filterGames: \"\",\n  sortFilms: \"sortTitle\",\n  sortTv: \"sortTitle\",\n  sortGames: \"sortTitle\",\n  sortReverseFilms: false,\n  sortReverseTv: false,\n  sortReverseGames: false,\n};\n\ntype Count = typeof initialCount;\ntype State = typeof initialState;\ntype Action =\n  | {\n      type:\n        | \"reset\"\n        | \"resetCount\"\n        | \"increment\"\n        | \"decrement\"\n        | \"SORT_REVERSE_FILMS\"\n        | \"SORT_REVERSE_TV\"\n        | \"SORT_REVERSE_GAMES\";\n    }\n  | {\n      type:\n        | \"FILTER_FILMS\"\n        | \"FILTER_TV\"\n        | \"FILTER_GAMES\"\n        | \"SORT_FILMS\"\n        | \"SORT_TV\"\n        | \"SORT_GAMES\";\n\n      payload: string;\n    };\n\nconst countReducer = (state: Count, action: Action): Count => {\n  switch (action.type) {\n    case \"resetCount\":\n      return initialCount;\n    case \"increment\":\n      return state + 1;\n    case \"decrement\":\n      return state - 1;\n    default:\n      return state;\n  }\n};\n\nconst storeReducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"reset\":\n      return initialState;\n    case \"resetCount\":\n    case \"increment\":\n    case \"decrement\":\n      return { ...state, count: countReducer(state.count, action) };\n    case \"FILTER_FILMS\":\n      return { ...state, filterFilms: action.payload };\n    case \"FILTER_TV\":\n      return { ...state, filterTv: action.payload };\n    case \"FILTER_GAMES\":\n      return { ...state, filterGames: action.payload };\n    case \"SORT_FILMS\":\n      return { ...state, sortFilms: action.payload };\n    case \"SORT_TV\":\n      return { ...state, sortTv: action.payload };\n    case \"SORT_GAMES\":\n      return { ...state, sortGames: action.payload };\n    case \"SORT_REVERSE_FILMS\":\n      return { ...state, sortReverseFilms: !state.sortReverseFilms };\n    case \"SORT_REVERSE_TV\":\n      return { ...state, sortReverseTv: !state.sortReverseTv };\n    case \"SORT_REVERSE_GAMES\":\n      return { ...state, sortReverseGames: !state.sortReverseGames };\n  }\n};\n\n// separate contexts so components that\n// only use dispatch won't re-render\ntype DispatchType = React.Dispatch<Action> | ((arg: any) => void);\nexport const DispatchContext = React.createContext<DispatchType>(() => {});\nexport const StateContext = React.createContext(initialState);\n\ntype Props = { children: React.ReactNode };\n\nexport default function Store(props: Props) {\n  const [state, dispatch] = React.useReducer(storeReducer, initialState);\n\n  return (\n    <>\n      <DispatchContext.Provider value={dispatch}>\n        <StateContext.Provider value={state}>\n          {props.children}\n        </StateContext.Provider>\n      </DispatchContext.Provider>\n    </>\n  );\n}\n","import { MenuItem } from \".\";\n\nexport const menuItems: MenuItem[] = [\n  {\n    path: \"/\",\n    name: \"Home\",\n    exact: true,\n    children: [\n      { path: \"/abcdef/:12345\", name: \"404\" },\n      { path: \"/\", name: \"Home\", exact: true },\n      { path: \"/films\", name: \"Films\" },\n      { path: \"/tv\", name: \"TV\" },\n      { path: \"/games\", name: \"Games\" },\n    ],\n  },\n  {\n    path: \"/films\",\n    name: \"Films\",\n    children: [{ path: \"/directors\", name: \"Directors\" }],\n  },\n  { path: \"/tv\", name: \"TV\" },\n  {\n    path: \"/games\",\n    name: \"Games\",\n  },\n  {\n    path: \"/stats\",\n    name: \"Stats\",\n    exact: true,\n    children: [\n      { path: \"/stats/films\", name: \"Films\" },\n      { path: \"/stats/tv\", name: \"TV\" },\n      { path: \"/stats/games\", name: \"Games\" },\n    ],\n  },\n];\n","import * as React from \"react\";\nimport \"./spinner.css\";\n\nexport function Spinner() {\n  return (\n    <>\n      <div className=\"spinner\"></div>\n    </>\n  );\n}\n","import * as React from \"react\";\n\nexport class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    //  logErrorToMyService(error, errorInfo);\n  }\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>;\n    }\n    return this.props.children;\n  }\n}\n","import * as React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const MenuLink = ({\n  path,\n  name,\n  exact,\n  image,\n}: {\n  path: string;\n  name: string;\n  exact?: boolean;\n  image?: string;\n}) => (\n  <NavLink\n    className=\"menu-link\"\n    activeClassName=\"menu-link-active\"\n    to={path}\n    exact={exact}\n  >\n    {image ? <img src={image} alt={name} /> : name}\n  </NavLink>\n);\n","import * as React from \"react\";\nimport { MenuItem } from \".\";\nimport { MenuLink } from \"./MenuLink\";\n\nexport function MenuParent({\n  item,\n  menuChildren,\n}: {\n  item: MenuItem;\n  menuChildren?: MenuItem[];\n}) {\n  const [active, setActive] = React.useState(false);\n  const alwaysShowChildren = false;\n\n  const handleMouseEnter = () => {\n    setActive(true);\n  };\n\n  const handleMouseLeave = () => {\n    setActive(false);\n  };\n\n  return (\n    <>\n      <span\n        key={item.name}\n        className={`menu-item menu-item-${item.name}`}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        <div className=\"menu-parent\">\n          <MenuLink\n            path={item.path}\n            name={item.name}\n            exact={item.exact}\n            image={item.image}\n          ></MenuLink>\n        </div>\n\n        {(alwaysShowChildren && menuChildren) || (active && menuChildren) ? (\n          <div className={`menu-children`}>\n            <ul>\n              {menuChildren.map((child) => {\n                return (\n                  <li\n                    key={child.path}\n                    className={`menu-child ${\n                      active ? \"menu-child-active\" : \"\"\n                    }`}\n                  >\n                    <MenuLink\n                      path={child.path}\n                      name={child.name}\n                      exact={child.exact}\n                      image={child.image}\n                    ></MenuLink>\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        ) : null}\n      </span>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport \"./menu.css\";\nimport { menuItems } from \"./menuItems\";\nimport { MenuParent } from \"./MenuParent\";\n\nexport type MenuItem = {\n  path: string;\n  name: string;\n  exact?: boolean;\n  image?: string;\n  children?: MenuItem[];\n};\n\nexport function Menu() {\n  return (\n    <>\n      <div className=\"menu\">\n        {menuItems.map((item) => {\n          return (\n            <MenuParent\n              key={item.path}\n              item={item}\n              menuChildren={item.children}\n            />\n          );\n        })}\n      </div>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { DispatchContext, StateContext } from \"./Store\";\n\nexport default function NotFound() {\n  const state = React.useContext(StateContext);\n  const dispatch = React.useContext(DispatchContext);\n\n  const location = useLocation();\n  document.title = `404 error: ${location.pathname} - MediaSheetViewer`;\n  return (\n    <>\n      <div>\n        <h1 style={{ textAlign: \"center\" }}>404</h1>\n        {location.pathname} not found\n        <div style={{ marginTop: \"5em\", textAlign: \"center\" }}>\n          count: {state.count}\n          <br />\n          <button onClick={() => dispatch({ type: \"increment\" })}>+</button>\n          <button onClick={() => dispatch({ type: \"decrement\" })}>-</button>\n        </div>\n      </div>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./app.css\";\nimport { ErrorBoundary } from \"./components/ErrorBoundary\";\nimport { Menu } from \"./components/Menu\";\nimport NotFound from \"./components/NotFound\";\nimport { Spinner } from \"./components/Spinner\";\nimport Store from \"./components/Store\";\nimport \"./styles/color.css\";\n\nconst Home = React.lazy(() => import(\"./components/Home\"));\nconst FilmList = React.lazy(() => import(\"./components/FilmList\"));\nconst TvList = React.lazy(() => import(\"./components/TvList\"));\nconst GamesList = React.lazy(() => import(\"./components/GamesList\"));\nconst DirectorList = React.lazy(() => import(\"./components/DirectorList\"));\nconst MediaDetails = React.lazy(() => import(\"./components/MediaDetails\"));\nconst Stats = React.lazy(() => import(\"./components/Stats\"));\nconst StatsFilms = React.lazy(() => import(\"./components/Stats/StatsFilms\"));\nconst StatsTv = React.lazy(() => import(\"./components/Stats/StatsTv\"));\nconst StatsGames = React.lazy(() => import(\"./components/Stats/StatsGames\"));\n\ntype AppRoutes = {\n  path: string;\n  component: JSX.Element | React.LazyExoticComponent<() => JSX.Element>;\n  exact?: boolean;\n}[];\n\nconst appRoutes: AppRoutes = [\n  { path: \"/\", component: <Home />, exact: true },\n  { path: \"/films\", component: <FilmList />, exact: true },\n  { path: \"/films/:id\", component: <MediaDetails /> },\n  { path: \"/tv\", component: <TvList />, exact: true },\n  { path: \"/tv/:id\", component: <MediaDetails /> },\n  { path: \"/games\", component: <GamesList />, exact: true },\n  { path: \"/games/:id\", component: <MediaDetails /> },\n  { path: \"/directors\", component: <DirectorList /> },\n  { path: \"/creators/:id\", component: <MediaDetails /> },\n  { path: \"/stats\", component: <Stats />, exact: true },\n  { path: \"/stats/films\", component: <StatsFilms /> },\n  { path: \"/stats/tv\", component: <StatsTv /> },\n  { path: \"/stats/games\", component: <StatsGames /> },\n  { path: \"*\", component: <NotFound /> },\n];\n\nexport default function App() {\n  return (\n    <>\n      <ErrorBoundary>\n        <Router basename={\"media-sheet-viewer\"}>\n          <div className=\"headerContainer\">\n            <Menu />\n          </div>\n          <div className=\"bodyContainer\">\n            <React.Suspense fallback={<Spinner />}>\n              <Store>\n                <Switch>\n                  {appRoutes.map((route) => (\n                    <Route\n                      key={\"route\" + route.path}\n                      path={route.path}\n                      exact={route.exact}\n                    >\n                      {route.component}\n                    </Route>\n                  ))}\n                </Switch>\n              </Store>\n            </React.Suspense>\n          </div>\n        </Router>\n      </ErrorBoundary>\n    </>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}