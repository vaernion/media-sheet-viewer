{"version":3,"sources":["components/SearchForm/index.tsx","hooks/useDebounceEffect.ts","utils/filters.ts","components/FieldHeader/index.tsx","components/FilmList/FilmListItem.tsx","components/FilmList/index.tsx"],"names":["SearchForm","value","setValue","placeholder","React","state","setState","callback","delay","dependencies","memoized","useCallback","useEffect","debounce","setTimeout","clearTimeout","useDebounceEffect","className","htmlFor","type","id","onChange","event","currentTarget","onClick","filterFilms","films","filterRaw","filter","normalize","startsWith","film","genre","findIndex","includes","replace","year","toString","name","creator","director","franchise","translatedTitle","filterTv","tvs","tv","search","Number","seasons","yearStart","length","yearEnd","filterGames","sortedGames","game","completed","developer","system","FieldHeader","props","active","sort","sortBy","field","arrow","isSortReverse","primary","style","width","tabIndex","onclick","label","FilmListItem","index","FilmListItemMemo","data","setSearchField","FilmListItemRaw","to","map","i","cellCache","CellMeasurerCache","fixedWidth","defaultHeight","FilmList","dispatch","DispatchContext","StateContext","searchField","document","title","mediaSheet","payload","handleSort","sortFilms","filmsSortedLocal","filmsSorted","sortReverseFilms","filmsFiltered","rowRenderer","parent","cache","columnIndex","rowIndex","height","scrollTop","registerChild","onChildScroll","disableHeight","ref","autoHeight","deferredMeasurementCache","onScroll","overscanRowCount","rowCount","rowHeight"],"mappings":"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","file":"static/js/7.e5f7bc3c.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { useDebounceEffect } from \"../../hooks/useDebounceEffect\";\nimport \"./searchForm.css\";\n\ntype Props = {\n  value: string;\n  setValue: (string: string) => void;\n  placeholder: string;\n};\n\n/**\n * Input with onchange and two way handlers to allow\n * parent component to update the value\n * or SearchForm to debounce a setState callback to parent\n * @link https://stackoverflow.com/a/61127960\n * @export\n * @param {*} value Initial value\n * @param {function} delay Milliseconds\n * @param {*[]} dependencies\n */\nexport function SearchForm({ value, setValue, placeholder }: Props) {\n  const [state, setState] = React.useState(value);\n\n  // new value passed by parent\n  React.useEffect(() => {\n    setState(value);\n  }, [value]);\n\n  // debounced callback to parent\n  useDebounceEffect(\n    () => {\n      setValue(state);\n    },\n    500,\n    [state]\n  );\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setState(event.currentTarget.value);\n  };\n\n  const handleClear = () => {\n    setState(\"\");\n  };\n\n  return (\n    <>\n      <div className=\"searchform\">\n        <label className=\"input-label\" htmlFor=\"searchFormInput\">\n          Filter:\n        </label>\n        <input\n          type=\"text\"\n          id=\"searchFormInput\"\n          placeholder={placeholder}\n          value={state}\n          onChange={handleChange}\n        />\n        <button onClick={handleClear}>Clear</button>\n      </div>\n    </>\n  );\n}\n","import { useCallback, useEffect } from \"react\";\n\n/**\n * Fire callback if dependencies change\n * and then stay unchanged for duration of delay.\n * @link https://stackoverflow.com/a/61127960\n * @export\n * @param {function():void} callback\n * @param {number} delay Milliseconds\n * @param {*[]} dependencies\n */\nexport function useDebounceEffect(\n  callback: () => void,\n  delay: number,\n  dependencies: any[]\n): void {\n  const memoized = useCallback(callback, [...dependencies, callback]);\n\n  useEffect(() => {\n    const debounce = setTimeout(() => memoized(), delay);\n\n    return () => clearTimeout(debounce);\n  }, [memoized, delay]);\n}\n","import { Film } from \"../classes/Film\";\nimport { Game } from \"../classes/Game\";\nimport { Television } from \"../classes/Television\";\nimport { normalize } from \"./utilities\";\n\nexport const filterFilms = (films: Film[], filterRaw: string): Film[] => {\n  const filter = normalize(filterRaw);\n\n  if (filter.startsWith(\"g:\")) {\n    return films.filter(\n      (film) =>\n        film.genre.findIndex((genre) =>\n          normalize(genre).includes(filter.replace(\"g:\", \"\"))\n        ) !== -1\n    );\n  } else if (filter.startsWith(\"y:\")) {\n    return films.filter(\n      (film) => film.year.toString() === filter.replace(\"y:\", \"\")\n    );\n  } else {\n    return films.filter(\n      (film) =>\n        normalize(film.name).includes(filter) ||\n        film.creator.findIndex((director) =>\n          normalize(director).includes(filter)\n        ) !== -1 ||\n        normalize(film.franchise).includes(filter) ||\n        normalize(film.translatedTitle).includes(filter)\n    );\n  }\n};\n\nexport const filterTv = (\n  tvs: Television[],\n  filterRaw: string\n): Television[] => {\n  const filter = normalize(filterRaw);\n\n  if (filter.startsWith(\"g:\")) {\n    return tvs.filter(\n      (tv) =>\n        tv.genre.findIndex((genre) =>\n          normalize(genre).includes(filter.replace(\"g:\", \"\"))\n        ) !== -1\n    );\n  } else if (filter.startsWith(\"y:\")) {\n    return tvs.filter((tv) => {\n      const search = Number(filter.replace(\"y:\", \"\"));\n      return (\n        tv.seasons[0].yearStart <= search &&\n        tv.seasons[tv.seasons.length - 1].yearEnd >= search\n      );\n    });\n  } else if (filter.startsWith(\"ys:\")) {\n    return tvs.filter(\n      (tv) => tv.seasons[0].yearStart.toString() === filter.replace(\"ys:\", \"\")\n    );\n  } else if (filter.startsWith(\"ye:\")) {\n    return tvs.filter(\n      (tv) =>\n        tv.seasons[tv.seasons.length - 1].yearEnd.toString() ===\n        filter.replace(\"ye:\", \"\")\n    );\n  } else {\n    return tvs.filter(\n      (tv) =>\n        normalize(tv.name).includes(filter) ||\n        tv.creator.findIndex((creator) =>\n          normalize(creator).includes(filter)\n        ) !== -1\n    );\n  }\n};\n\nexport const filterGames = (sortedGames: Game[], filterRaw: string): Game[] => {\n  const filter = normalize(filterRaw);\n\n  if (filter.startsWith(\"g:\")) {\n    return sortedGames.filter(\n      (game) =>\n        game.genre.findIndex((genre) =>\n          normalize(genre).includes(filter.replace(\"g:\", \"\"))\n        ) !== -1\n    );\n  } else if (filter.startsWith(\"y:\")) {\n    return sortedGames.filter(\n      (game) => game.year.toString() === filter.replace(\"y:\", \"\")\n    );\n  } else if (filter.startsWith(\"c:\")) {\n    return sortedGames.filter((game) =>\n      normalize(game.completed).includes(filter.replace(\"c:\", \"\"))\n    );\n  } else {\n    return sortedGames.filter(\n      (game) =>\n        normalize(game.name).includes(filter) ||\n        game.creator.findIndex((developer) =>\n          normalize(developer).includes(filter)\n        ) !== -1 ||\n        normalize(game.completed).includes(filter) ||\n        normalize(game.system).includes(filter)\n    );\n  }\n};\n","import * as React from \"react\";\nimport \"./FieldHeader.css\";\n\ntype Props = {\n  field: string;\n  label: string;\n  width: string;\n  primary?: boolean;\n  sort: { sortBy: string; isSortReverse: boolean };\n  onclick?: (field: Props[\"field\"]) => void;\n};\n\nexport function FieldHeader(props: Props) {\n  const active = props.sort.sortBy === props.field ? true : false;\n  const arrow = active ? (props.sort.isSortReverse ? \"↑\" : \"↓\") : null;\n\n  const handleClick = () => {\n    if (!props.onclick) return;\n    props.onclick(props.field);\n  };\n\n  return (\n    <>\n      <span\n        className={\"fheader-outer\" + (props.primary ? \" primary\" : \"\")}\n        style={{ width: props.width }}\n      >\n        <span\n          tabIndex={0}\n          className={\n            \"fheader\" +\n            (active ? \" active\" : \"\") +\n            (!props.onclick ? \" no-click\" : \"\")\n          }\n          onClick={handleClick}\n        >\n          {props.label} {arrow}\n        </span>\n      </span>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Film } from \"../../classes/Film\";\n\ntype RawProps = {\n  data: Film;\n  setSearchField: (field: string) => void;\n};\ninterface Props extends RawProps {\n  index: number;\n  style: React.CSSProperties;\n}\n\nexport const FilmListItem = (props: Props) => {\n  return (\n    <div\n      className={`list-items ${props.index % 2 ? \"\" : \"odd-index\"}`}\n      style={props.style}\n    >\n      <FilmListItemMemo\n        data={props.data}\n        setSearchField={props.setSearchField}\n      />\n    </div>\n  );\n};\n\nconst FilmListItemMemo = React.memo(FilmListItemRaw);\n\nfunction FilmListItemRaw(props: RawProps) {\n  const film = props.data;\n  const onclick = props.setSearchField;\n\n  return (\n    <>\n      <span className=\"film-title\">\n        <Link to={`/films/${film.id}`}>{film.name}</Link>\n        {film.translatedTitle ? (\n          <span className=\"film-translation\"> - {film.translatedTitle} </span>\n        ) : null}\n        (\n        <span\n          className=\"film-year on-click\"\n          onClick={() => onclick(\"y:\" + film.year)}\n        >\n          {film.year}\n        </span>\n        )\n      </span>\n      <span className=\"film-director\">\n        {film.creator.map((name, i) => (\n          <span key={name}>\n            <span>{i > 0 ? \" & \" : null}</span>\n            <Link to={`/creators/${name}`}>{name}</Link>\n          </span>\n        ))}\n      </span>\n      <span className=\"film-genre\">\n        {film.genre.map((name, i) => (\n          <span key={name}>\n            <span>{i > 0 ? \" / \" : null}</span>\n            <span\n              key={name}\n              className=\"genre-name on-click\"\n              onClick={() => onclick(\"g:\" + name)}\n            >\n              {name}\n            </span>\n          </span>\n        ))}\n      </span>\n      <span\n        className=\"film-franchise on-click\"\n        onClick={() => onclick(film.franchise)}\n      >\n        {film.franchise}\n      </span>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport {\n  AutoSizer,\n  CellMeasurer,\n  CellMeasurerCache,\n  List,\n  ListRowRenderer,\n  WindowScroller,\n} from \"react-virtualized\";\nimport \"../../styles/lists.css\";\nimport { filterFilms } from \"../../utils/filters\";\nimport { FieldHeader } from \"../FieldHeader\";\nimport { SearchForm } from \"../SearchForm\";\nimport { DispatchContext, StateContext } from \"../Store\";\nimport { mediaSheet } from \"../Store/mediaSheet\";\nimport { FilmListItem } from \"./FilmListItem\";\n\nconst cellCache = new CellMeasurerCache({\n  fixedWidth: true,\n  defaultHeight: 50,\n});\n\nexport default function FilmList() {\n  const dispatch = React.useContext(DispatchContext);\n  const state = React.useContext(StateContext);\n  const [searchField, setSearchField] = React.useState(state.filterFilms);\n\n  document.title = `${mediaSheet.films.length} Films - MediaSheetViewer`;\n\n  // persist filter\n  React.useEffect(() => {\n    dispatch({ type: \"FILTER_FILMS\", payload: searchField });\n  }, [searchField, dispatch]);\n\n  const handleSort = (field: string) => {\n    if (field === state.sortFilms) {\n      dispatch({ type: \"SORT_REVERSE_FILMS\" });\n    } else {\n      dispatch({ type: \"SORT_FILMS\", payload: field });\n    }\n  };\n\n  const filmsSortedLocal =\n    mediaSheet.filmsSorted[\n      state.sortFilms + (state.sortReverseFilms ? \"Desc\" : \"Asc\")\n    ];\n  const filmsFiltered = filterFilms(filmsSortedLocal, searchField);\n\n  const rowRenderer: ListRowRenderer = ({ index, style, parent }) => {\n    const data = filmsFiltered[index];\n    return (\n      <CellMeasurer\n        key={data.id}\n        cache={cellCache}\n        parent={parent}\n        columnIndex={0}\n        rowIndex={index}\n      >\n        <FilmListItem\n          index={index}\n          data={data}\n          setSearchField={setSearchField}\n          style={style}\n        />\n      </CellMeasurer>\n    );\n  };\n\n  return (\n    <>\n      <div className=\"films\">\n        <div className=\"films-head\">\n          <SearchForm\n            value={searchField}\n            setValue={setSearchField}\n            placeholder=\"star wars | g:drama | hitchcock | y:2010\"\n          />\n          <div className=\"headers\">\n            <FieldHeader\n              field=\"sortTitle\"\n              label=\"Title\"\n              width=\"20%\"\n              primary\n              sort={{\n                sortBy: state.sortFilms,\n                isSortReverse: state.sortReverseFilms,\n              }}\n              onclick={handleSort}\n            />\n            <FieldHeader\n              field=\"year\"\n              label=\"Year\"\n              width=\"15%\"\n              sort={{\n                sortBy: state.sortFilms,\n                isSortReverse: state.sortReverseFilms,\n              }}\n              onclick={handleSort}\n            />\n            <FieldHeader\n              field=\"director\"\n              label=\"Director\"\n              width=\"25%\"\n              sort={{\n                sortBy: state.sortFilms,\n                isSortReverse: state.sortReverseFilms,\n              }}\n              onclick={handleSort}\n            />\n            <FieldHeader\n              field=\"genre\"\n              label=\"Genre\"\n              width=\"35%\"\n              sort={{\n                sortBy: state.sortFilms,\n                isSortReverse: state.sortReverseFilms,\n              }}\n            />\n            <FieldHeader\n              field=\"franchise\"\n              label=\"Franchise\"\n              width=\"15%\"\n              sort={{\n                sortBy: state.sortFilms,\n                isSortReverse: state.sortReverseFilms,\n              }}\n              onclick={handleSort}\n            />\n          </div>\n        </div>\n        <div className=\"films-body\">\n          <WindowScroller>\n            {({ height, scrollTop, registerChild, onChildScroll }) => (\n              <AutoSizer disableHeight>\n                {({ width }) => (\n                  <div ref={registerChild}>\n                    <List\n                      autoHeight\n                      height={height}\n                      width={width}\n                      deferredMeasurementCache={cellCache}\n                      scrollTop={scrollTop}\n                      onScroll={onChildScroll}\n                      overscanRowCount={50}\n                      rowCount={filmsFiltered.length}\n                      rowHeight={cellCache.rowHeight}\n                      rowRenderer={rowRenderer}\n                    />\n                  </div>\n                )}\n              </AutoSizer>\n            )}\n          </WindowScroller>\n        </div>\n      </div>\n    </>\n  );\n}\n"],"sourceRoot":""}