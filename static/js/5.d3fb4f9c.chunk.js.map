{"version":3,"sources":["utils/utilities.js","components/SearchForm/index.jsx","hooks/useDebounceEffect.js","components/DirectorList/index.jsx"],"names":["normalize","str","replace","toLowerCase","SearchForm","value","setValue","placeholder","React","state","setState","callback","delay","dependencies","memoized","useCallback","useEffect","debounce","setTimeout","clearTimeout","useDebounceEffect","type","onChange","e","currentTarget","onClick","DirectorList","context","MediaContext","searchField","setSearchField","directors","directorsFiltered","setDirectorsFiltered","filter","director","name","searchStr","includes","document","title","length","className","map","key","to"],"mappings":"+HAAA,kCAAO,IAAMA,EAAY,SAACC,GACxB,OAAOA,EACJD,UAAU,OACVE,QAAQ,eAAgB,IACxBC,gB,gHCAE,SAASC,EAAT,GAAuD,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,YAAe,EACjCC,WAAeH,GADkB,mBACpDI,EADoD,KAC7CC,EAD6C,KAG3DF,aAAgB,WACdE,EAASL,KACR,CAACA,ICCC,SAA2BM,EAAUC,EAAOC,GACjD,IAAMC,EAAWC,sBAAYJ,EAAUE,GAEvCG,qBAAU,WACR,IAAMC,EAAWC,YAAW,kBAAMJ,MAAYF,GAE9C,OAAO,kBAAMO,aAAaF,MACzB,CAACH,EAAUF,IDNdQ,EACE,WACEd,EAASG,KAEX,IACA,CAACA,IAOH,OACE,gCACE,2BACE,yBACEY,KAAK,OACLd,YAAaA,EACbF,MAAOI,EACPa,SAAU,SAACC,GAAD,OAAOb,EAASa,EAAEC,cAAcnB,UAE5C,0BAAQoB,QAbM,WAClBf,EAAS,MAYL,a,6JEzBO,SAASgB,IACtB,IAAMC,EAAUnB,aAAiBoB,KADI,EAGCpB,WAAe,IAHhB,mBAG9BqB,EAH8B,KAGjBC,EAHiB,OAIatB,WAChDmB,EAAQI,WAL2B,mBAI9BC,EAJ8B,KAIXC,EAJW,KAoBrC,OAZAzB,aAAgB,WACdyB,EACEN,EAAQI,UAAUG,QAAO,SAACC,GACxB,IAAMC,EAAOpC,YAAUmC,GACjBE,EAAYrC,YAAU6B,GAC5B,OAAOO,EAAKE,SAASD,SAGxB,CAACR,EAAaF,EAAQI,YAEzBQ,SAASC,MAAT,UAAoBb,EAAQI,UAAUU,OAAtC,iCAEKT,EAGH,gCACE,uBAAKU,UAAU,aACb,uBAAKA,UAAU,kBACb,gBAAC,IAAD,CACErC,MAAOwB,EACPvB,SAAUwB,EACVvB,YAAY,+CAGhB,uBAAKmC,UAAU,kBACb,0BACGV,EAAkBW,KAAI,SAACP,GAAD,OACrB,sBAAIQ,IAAKR,GACP,gBAAC,IAAD,CAAMS,GAAE,qBAAgBT,IAASA,WAhBhB","file":"static/js/5.d3fb4f9c.chunk.js","sourcesContent":["export const normalize = (str) => {\n  return str\n    .normalize(\"NFD\")\n    .replace(/[^\\w\\s.-_/]/g, \"\")\n    .toLowerCase();\n};\n","import * as React from \"react\";\nimport { useDebounceEffect } from \"../../hooks/useDebounceEffect\";\nimport \"./searchForm.css\";\n\nexport function SearchForm({ value, setValue, placeholder }) {\n  const [state, setState] = React.useState(value);\n\n  React.useEffect(() => {\n    setState(value);\n  }, [value]);\n\n  useDebounceEffect(\n    () => {\n      setValue(state);\n    },\n    500,\n    [state]\n  );\n\n  const handleClear = () => {\n    setState(\"\");\n  };\n\n  return (\n    <>\n      <div>\n        <input\n          type=\"text\"\n          placeholder={placeholder}\n          value={state}\n          onChange={(e) => setState(e.currentTarget.value)}\n        />\n        <button onClick={handleClear}>Clear</button>\n      </div>\n    </>\n  );\n}\n","import { useCallback, useEffect } from \"react\";\n\n/**\n * Fire callback when dependencies stay unchanged for duration of delay.\n * @link https://stackoverflow.com/a/61127960\n * @export\n * @param {function} callback\n * @param {number} delay Milliseconds\n * @param {any[]} dependencies\n */\nexport function useDebounceEffect(callback, delay, dependencies) {\n  const memoized = useCallback(callback, dependencies);\n\n  useEffect(() => {\n    const debounce = setTimeout(() => memoized(), delay);\n\n    return () => clearTimeout(debounce);\n  }, [memoized, delay]);\n}\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { normalize } from \"../../utils/utilities\";\nimport { SearchForm } from \"../SearchForm\";\nimport { MediaContext } from \"../Store\";\nimport \"./DirectorList.css\";\n\nexport default function DirectorList() {\n  const context = React.useContext(MediaContext);\n\n  const [searchField, setSearchField] = React.useState(\"\");\n  const [directorsFiltered, setDirectorsFiltered] = React.useState(\n    context.directors\n  );\n\n  React.useEffect(() => {\n    setDirectorsFiltered(\n      context.directors.filter((director) => {\n        const name = normalize(director);\n        const searchStr = normalize(searchField);\n        return name.includes(searchStr);\n      })\n    );\n  }, [searchField, context.directors]);\n\n  document.title = `${context.directors.length} Directors - MediaSheetViewer`;\n\n  if (!directorsFiltered) return null;\n\n  return (\n    <>\n      <div className=\"directors\">\n        <div className=\"directors-head\">\n          <SearchForm\n            value={searchField}\n            setValue={setSearchField}\n            placeholder=\"examples: kubrick | ridley scott | melies\"\n          />\n        </div>\n        <div className=\"directors-body\">\n          <ul>\n            {directorsFiltered.map((name) => (\n              <li key={name}>\n                <Link to={`/directors/${name}`}>{name}</Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </>\n  );\n}\n"],"sourceRoot":""}