{"version":3,"sources":["../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/extends.js","../node_modules/@babel/runtime/helpers/objectWithoutProperties.js","../node_modules/react-virtualized/dist/es/vendor/detectElementResize.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","../node_modules/clsx/dist/clsx.m.js","../node_modules/react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","../node_modules/react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/Grid/utils/maxElementSize.js","../node_modules/react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/utils/createCallbackMemoizer.js","../node_modules/react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-virtualized/dist/es/utils/animationFrame.js","../node_modules/react-virtualized/dist/es/Grid/Grid.js","../node_modules/react-virtualized/dist/es/utils/requestAnimationTimeout.js","../node_modules/react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/Grid/defaultCellRangeRenderer.js","../node_modules/react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/types.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.js","../node_modules/react-virtualized/dist/es/AutoSizer/AutoSizer.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurer.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurerCache.js","../node_modules/react-virtualized/dist/es/Collection/CollectionView.js","../node_modules/react-virtualized/dist/es/Collection/Section.js","../node_modules/react-virtualized/dist/es/Collection/SectionManager.js","../node_modules/react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js","../node_modules/react-virtualized/dist/es/Collection/Collection.js","../node_modules/react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.js","../node_modules/react-virtualized/dist/es/Collection/index.js","../node_modules/react-virtualized/dist/es/ColumnSizer/ColumnSizer.js","../node_modules/react-virtualized/dist/es/ColumnSizer/index.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/index.js","../node_modules/react-virtualized/dist/es/List/List.js","../node_modules/react-virtualized/dist/es/vendor/binarySearchBounds.js","../node_modules/react-virtualized/dist/es/vendor/intervalTree.js","../node_modules/react-virtualized/dist/es/Masonry/PositionCache.js","../node_modules/react-virtualized/dist/es/Masonry/Masonry.js","../node_modules/react-virtualized/dist/es/Masonry/index.js","../node_modules/react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js","../node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js","../node_modules/react-virtualized/dist/es/ScrollSync/ScrollSync.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/SortDirection.js","../node_modules/react-virtualized/dist/es/Table/SortIndicator.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRenderer.js","../node_modules/react-virtualized/dist/es/Table/defaultRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/Column.js","../node_modules/react-virtualized/dist/es/Table/Table.js","../node_modules/react-virtualized/dist/es/Table/defaultCellDataGetter.js","../node_modules/react-virtualized/dist/es/Table/defaultCellRenderer.js","../node_modules/react-virtualized/dist/es/Table/index.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/onScroll.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/dimensions.js","../node_modules/react-virtualized/dist/es/WindowScroller/WindowScroller.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js"],"names":["module","exports","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","obj","value","_typeof","assertThisInitialized","self","call","ReferenceError","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","subClass","superClass","create","constructor","_createForOfIteratorHelper","Symbol","iterator","Array","isArray","F","s","n","done","e","_e","f","it","err","normalCompletion","didErr","step","next","_e2","_toConsumableArray","arr","arrayLikeToArray","iter","from","unsupportedIterableToArray","_extends","assign","arguments","source","hasOwnProperty","apply","this","objectWithoutPropertiesLoose","excluded","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","createDetectElementResize","nonce","hostWindow","_window","attachEvent","window","global","document","requestFrame","raf","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","fn","setTimeout","cancelFrame","cancel","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","clearTimeout","id","resetTriggers","element","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","scrollLeft","scrollWidth","scrollTop","scrollHeight","style","width","offsetWidth","height","offsetHeight","scrollListener","className","__resizeRAF__","__resizeLast__","checkTriggers","__resizeListeners__","forEach","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","elm","createElement","undefined","animationName","toLowerCase","animationKeyframes","animationStyle","addResizeListener","doc","ownerDocument","elementStyle","getComputedStyle","position","getElementById","css","head","getElementsByTagName","type","setAttribute","styleSheet","cssText","appendChild","createTextNode","createStyles","innerHTML","addEventListener","__animationListener__","push","removeResizeListener","detachEvent","splice","removeEventListener","removeChild","len","arr2","minLen","toString","slice","name","test","componentWillMount","state","getDerivedStateFromProps","setState","componentWillReceiveProps","nextProps","prevState","bind","componentWillUpdate","nextState","prevProps","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","polyfill","Component","isReactComponent","Error","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","componentName","displayName","newApiName","componentDidUpdate","maybeSnapshot","snapshot","__suppressDeprecationWarning","toVal","mix","k","y","str","tmp","x","calculateSizeAndPositionDataAndUpdateScrollOffset","_ref","cellCount","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","scrollToIndex","updateScrollOffsetForScrollToIndex","CellSizeAndPositionManager","cellSizeGetter","estimatedCellSize","_classCallCheck","_defineProperty","_cellSizeGetter","_cellCount","_estimatedCellSize","_createClass","_ref2","_lastMeasuredIndex","index","concat","lastMeasuredCellSizeAndPosition","getSizeAndPositionOfLastMeasuredCell","offset","size","isNaN","_cellSizeAndPositionData","_lastBatchedIndex","_ref3","_ref3$align","align","containerSize","currentOffset","targetIndex","idealOffset","datum","getSizeAndPositionOfCell","maxOffset","minOffset","Math","max","min","totalSize","getTotalSize","params","start","_findNearestCell","stop","high","low","middle","floor","interval","_binarySearch","lastMeasuredIndex","_exponentialSearch","getMaxElementSize","chrome","ScalingCellSizeAndPositionManager","_ref$maxScrollSize","maxScrollSize","_objectWithoutProperties","_cellSizeAndPositionManager","_maxScrollSize","configure","getCellCount","getEstimatedCellSize","getLastMeasuredIndex","safeTotalSize","offsetPercentage","_getOffsetPercentage","round","_safeOffsetToOffset","getUpdatedOffsetForIndex","_offsetToSafeOffset","_ref4","getVisibleCellRange","resetCell","_ref5","_ref6","_ref7","createCallbackMemoizer","requireAllKeys","cachedIndices","callback","indices","keys","allInitialized","every","indexChanged","some","cachedValue","join","updateScrollIndexHelper","cellSizeAndPositionManager","previousCellsCount","previousCellSize","previousScrollToAlignment","previousScrollToIndex","previousSize","scrollOffset","scrollToAlignment","sizeJustIncreasedFromZero","updateScrollIndexCallback","hasScrollToIndex","win","scrollbarSize","recalc","canUseDOM","scrollDiv","top","overflow","body","clientWidth","_class","_temp","request","oRequestAnimationFrame","msRequestAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","caf","cancelAnimationTimeout","frame","requestAnimationTimeout","delay","Promise","resolve","then","Date","now","timeout","ownKeys","object","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","_objectSpread","getOwnPropertyDescriptors","defineProperties","SCROLL_POSITION_CHANGE_REASONS","Grid","_React$PureComponent","_this","_possibleConstructorReturn","_assertThisInitialized","_disablePointerEventsTimeoutId","isScrolling","needToResetStyleCache","onSectionRendered","_onGridRenderedMemoizer","columnOverscanStartIndex","_columnStartIndex","columnOverscanStopIndex","_columnStopIndex","columnStartIndex","_renderedColumnStartIndex","columnStopIndex","_renderedColumnStopIndex","rowOverscanStartIndex","_rowStartIndex","rowOverscanStopIndex","_rowStopIndex","rowStartIndex","_renderedRowStartIndex","rowStopIndex","_renderedRowStopIndex","ref","_scrollingContainer","event","handleScrollEvent","columnSizeAndPositionManager","columnCount","_wrapSizeGetter","columnWidth","_getEstimatedColumnSize","rowSizeAndPositionManager","rowCount","rowHeight","_getEstimatedRowSize","instanceProps","prevColumnWidth","prevRowHeight","prevColumnCount","prevRowCount","prevIsScrolling","prevScrollToColumn","scrollToColumn","prevScrollToRow","scrollToRow","scrollbarSizeMeasured","scrollDirectionHorizontal","scrollDirectionVertical","scrollPositionChangeReason","_initialScrollTop","_getCalculatedScrollTop","_initialScrollLeft","_getCalculatedScrollLeft","_inherits","_ref$alignment","alignment","_ref$columnIndex","columnIndex","_ref$rowIndex","rowIndex","offsetProps","_ref2$scrollLeft","scrollLeftParam","_ref2$scrollTop","scrollTopParam","_debounceScrollEnded","_this$props","autoHeight","autoWidth","totalRowsHeight","totalColumnsWidth","newState","_invokeOnScrollMemoizer","_deferredInvalidateColumnIndex","_deferredInvalidateRowIndex","_this$props2","_ref4$columnIndex","_ref4$rowIndex","_this$props3","_recomputeScrollLeftFlag","_recomputeScrollTopFlag","_styleCache","_cellCache","forceUpdate","_updateScrollLeftForScrollToColumn","_updateScrollTopForScrollToRow","_this$props4","getScrollbarSize","_handleInvalidatedGridSize","stateUpdate","_getScrollToPositionStateUpdate","sizeIsBiggerThanZero","_invokeOnGridRenderedHelper","_maybeCallOnScrollbarPresenceChange","_this2","_this$props5","_this$state","columnOrRowCountJustIncreasedFromZero","_this$props6","autoContainerWidth","containerProps","containerRole","containerStyle","noContentRenderer","role","tabIndex","_this$state2","_isScrolling","gridStyle","boxSizing","direction","WebkitOverflowScrolling","willChange","_resetStyleCache","_calculateChildrenToRender","verticalScrollBarSize","horizontalScrollBarSize","_horizontalScrollBarSize","_verticalScrollBarSize","_scrollbarPresenceChanged","overflowX","overflowY","childrenToDisplay","_childrenToDisplay","showNoContentRenderer","React","_setScrollingContainerRef","clsx","onScroll","_onScroll","maxWidth","maxHeight","pointerEvents","cellRenderer","cellRangeRenderer","deferredMeasurementCache","overscanColumnCount","overscanIndicesGetter","overscanRowCount","isScrollingOptOut","visibleColumnIndices","visibleRowIndices","horizontalOffsetAdjustment","getOffsetAdjustment","verticalOffsetAdjustment","overscanColumnIndices","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanRowIndices","overscanStartIndex","overscanStopIndex","hasFixedHeight","has","hasFixedWidth","cellCache","parent","styleCache","scrollingResetTimeInterval","_debounceScrollEndedCallback","recomputeGridSize","_this3","_onScrollMemoizer","_this3$props","clientHeight","Boolean","onScrollbarPresenceChange","horizontal","vertical","_ref8","_getScrollLeftForScrollToColumnStateUpdate","_getScrollTopForScrollToRowStateUpdate","maybeStateA","maybeStateB","estimatedColumnSize","estimatedRowSize","_ref9","finalColumn","scrollBarSize","calculatedScrollLeft","finalRow","calculatedScrollTop","renderedCells","areOffsetsAdjusted","canCacheStyle","rowDatum","columnDatum","isVisible","left","cellRendererParams","renderedCell","defaultOverscanIndicesGetter","ArrowKeyStepper","_getPrototypeOf2","_len","args","_key","disabled","mode","_this$_getScrollState","_getScrollState","scrollToColumnPrevious","scrollToRowPrevious","_this$_getScrollState2","preventDefault","_updateScrollState","children","_this$_getScrollState3","onKeyDown","_onKeyDown","_onSectionRendered","isControlled","onScrollToChange","AutoSizer","_React$Component","defaultHeight","defaultWidth","disableHeight","disableWidth","onResize","_parentNode","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","autoSizer","_autoSizer","parentNode","defaultView","HTMLElement","_detectElementResize","_onResize","outerStyle","childParams","_setRef","CellMeasurer","cache","_this$props$columnInd","_this$props$rowIndex","_this$_getCellMeasure","_getCellMeasurements","getHeight","getWidth","set","Element","console","warn","_child","_maybeMeasureCell","measure","_measure","registerChild","_registerChild","node","findDOMNode","styleWidth","styleHeight","ceil","_this$props2$columnIn","_this$props2$rowIndex","_this$_getCellMeasure2","invalidateCellSizeAfterRender","CellMeasurerCache","_keyMapper","_columnWidthCache","_defaultWidth","_rowHeightCache","_defaultHeight","fixedHeight","fixedWidth","keyMapper","minHeight","minWidth","_hasFixedHeight","_hasFixedWidth","_minHeight","_minWidth","defaultKeyMapper","_cellHeightCache","_cellWidthCache","_updateCachedColumnAndRowSizes","_rowCount","_columnCount","_key2","columnKey","_i","rowKey","get","CollectionView","cellLayoutManager","_onSectionRenderedMemoizer","getLastRenderedIndices","scrollToCell","scrollPosition","getScrollPositionForCell","cellIndex","_setScrollPosition","_enablePointerEventsAfterDelay","isScrollingChange","_scrollbarSize","_cellLayoutManager$ge","totalHeight","totalWidth","cancelable","_scrollbarSizeMeasured","_calculateSizeAndPositionDataOnNextUpdate","_updateScrollPositionForScrollToCell","_invokeOnSectionRenderedHelper","_cellLayoutManager$ge2","horizontalOverscanSize","verticalOverscanSize","_this$state3","_lastRenderedCellCount","_lastRenderedCellLayoutManager","calculateSizeAndPositionData","_cellLayoutManager$ge3","right","bottom","cellRenderers","collectionStyle","propTypes","Section","_indexMap","_indices","SectionManager","sectionSize","_sectionSize","_cellMetadata","_sections","getSections","section","getCellIndices","map","sectionXStart","sectionXStop","sectionYStart","sectionYStop","sections","sectionX","sectionY","cellMetadatum","addCellIndex","_ref$align","cellOffset","Collection","context","_lastRenderedCellIndices","_isScrollingChange","_setCollectionViewRef","_collectionView","recomputeCellSizesAndPositions","data","cellSizeAndPositionGetter","cellMetadata","sectionManager","registerCell","_calculateSizeAndPositionData","_sectionManager","_height","_width","cellGroupRenderer","getCellMetadata","cellRendererProps","ColumnSizer","columnMaxWidth","columnMinWidth","_registeredChild","safeColumnMinWidth","safeColumnMaxWidth","adjustedWidth","getColumnWidth","child","InfiniteLoader","_loadMoreRowsMemoizer","_onRowsRendered","autoReload","_doStuff","_lastRenderedStartIndex","_lastRenderedStopIndex","onRowsRendered","unloadedRanges","loadMoreRows","unloadedRange","promise","lastRenderedStartIndex","lastRenderedStopIndex","isRangeVisible","component","currentIndex","recomputeSize","recomputeRowHeights","forceUpdateReactVirtualizedComponent","isRowLoaded","minimumBatchSize","threshold","rangeStartIndex","rangeStopIndex","potentialStopIndex","_index","firstUnloadedRange","_index2","scanForUnloadedRanges","squashedUnloadedRanges","_loadUnloadedRanges","registeredChild","List","rowRenderer","widthDescriptor","getOffsetForCell","measureAllCells","_ref6$columnIndex","_ref6$rowIndex","scrollToPosition","noRowsRenderer","classNames","_cellRenderer","accessibilityOverscanIndicesGetter","ge","a","c","l","h","m","_GEP","_GEA","gt","_GTP","_GTA","lt","_LTP","_LTA","le","_LEP","_LEA","eq","p","_EQP","_EQA","IntervalTreeNode","mid","leftPoints","rightPoints","count","proto","copy","b","rebuild","intervals","ntree","createIntervalTree","rebuildWithInterval","rebuildWithoutInterval","idx","reportLeftRange","hi","cb","r","reportRightRange","lo","reportRange","compareNumbers","compareBegin","d","compareEnd","pts","sort","leftIntervals","rightIntervals","centerIntervals","IntervalTree","root","result","insert","weight","bounds","remove","queryPoint","queryInterval","tproto","PositionCache","defaultCellHeight","unmeasuredCellCount","tallestColumnSize","renderCallback","_intervalTree","_slicedToArray","_leftMap","columnSizeMap","_columnSizeMap","columnHeight","Masonry","eventScrollTop","currentTarget","_getEstimatedTotalHeight","_debounceResetIsScrolling","_positionCache","_invalidateOnUpdateStartIndex","_invalidateOnUpdateStopIndex","_populatePositionCache","_checkInvalidateOnUpdate","_invokeOnScrollCallback","_invokeOnCellsRenderedCallback","_debounceResetIsScrollingId","cellMeasurerCache","overscanByPixels","rowDirection","estimateTotalHeight","shortestColumnSize","measuredCellCount","range","_style","batchSize","_startIndex","_stopIndex","_debounceResetIsScrollingCallback","estimatedColumnCount","_onScrollMemoized","_startIndexMemoized","_stopIndexMemoized","onCellsRendered","cellPositioner","_cellPositioner","setPosition","noop","CellMeasurerCacheDecorator","_cellMeasurerCache","_columnIndexOffset","_rowIndexOffset","_params$columnIndexOf","columnIndexOffset","_params$rowIndexOffse","rowIndexOffset","clear","clearAll","MultiGrid","showHorizontalScrollbar","showVerticalScrollbar","_bottomLeftGrid","_bottomRightGrid","rest","fixedRowCount","fixedColumnCount","scrollInfo","_topLeftGrid","_topRightGrid","_fixedColumnCount","_fixedRowCount","_maybeCalculateCachedStyles","_deferredMeasurementCacheBottomLeftGrid","_deferredMeasurementCacheBottomRightGrid","_deferredMeasurementCacheTopRightGrid","_ref7$columnIndex","_ref7$rowIndex","_ref8$columnIndex","_ref8$rowIndex","adjustedColumnIndex","adjustedRowIndex","_leftGridWidth","_topGridHeight","_this$props7","_this$props8","_prepareForRender","_this$state4","_containerOuterStyle","_containerTopStyle","_renderTopLeftGrid","_renderTopRightGrid","_containerBottomStyle","_renderBottomLeftGrid","_renderBottomRightGrid","_getTopGridHeight","leftGridWidth","_getLeftGridWidth","topGridHeight","resetAll","_this$props9","enableFixedColumnScroll","enableFixedRowScroll","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","_lastRenderedHeight","_lastRenderedWidth","leftSizeChange","_lastRenderedColumnWidth","_lastRenderedFixedColumnCount","topSizeChange","_lastRenderedFixedRowCount","_lastRenderedRowHeight","_lastRenderedStyle","_lastRenderedStyleBottomLeftGrid","_bottomLeftGridStyle","_lastRenderedStyleBottomRightGrid","_bottomRightGridStyle","_lastRenderedStyleTopLeftGrid","_topLeftGridStyle","_lastRenderedStyleTopRightGrid","_topRightGridStyle","hideBottomLeftGridScrollbar","additionalRowCount","_getBottomGridHeight","gridWidth","bottomLeftGrid","_cellRendererBottomLeftGrid","classNameBottomLeftGrid","_onScrollTop","_bottomLeftGridRef","_rowHeightBottomGrid","_cellRendererBottomRightGrid","classNameBottomRightGrid","_columnWidthRightGrid","_onScrollbarPresenceChange","_bottomRightGridRef","_getRightGridWidth","classNameTopLeftGrid","_topLeftGridRef","hideTopRightGridScrollbar","_this$state5","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","_cellRendererTopRightGrid","classNameTopRightGrid","_onScrollLeft","_topRightGridRef","ScrollSync","defaultHeaderRowRenderer","columns","SortDirection","ASC","DESC","SortIndicator","sortDirection","viewBox","fill","defaultHeaderRenderer","dataKey","label","sortBy","showSortIndicator","title","defaultRowRenderer","onRowClick","onRowDoubleClick","onRowMouseOut","onRowMouseOver","onRowRightClick","rowData","a11yProps","onClick","onDoubleClick","onMouseOut","onMouseOver","onContextMenu","Column","cellDataGetter","cellData","String","defaultSortDirection","flexGrow","flexShrink","headerRenderer","Table","scrollbarWidth","_createColumn","_createRow","_ref3$columnIndex","_ref3$rowIndex","_Grid","_setScrollbarWidth","disableHeader","gridClassName","headerHeight","headerRowRenderer","rowClassName","rowStyle","availableRowsHeight","rowClass","rowStyleObject","_cachedColumnStyles","toArray","column","flexStyles","_getFlexStyleForColumn","_getHeaderColumns","onColumnClick","_column$props","columnData","headerOnClick","headerOnKeyDown","headerTabIndex","headerAriaSort","headerAriaLabel","headerClassName","headerStyle","onHeaderClick","_column$props2","disableSort","sortEnabled","ReactVirtualized__Table__sortableHeaderColumn","renderedHeader","newSortDirection","rowGetter","flattenedStyle","_getRowHeight","customStyle","flexValue","flex","msFlex","WebkitFlex","_this4","_createHeader","getScrollbarWidth","mountedInstances","originalBodyPointerEvents","disablePointerEventsTimeoutId","enablePointerEventsIfDisabled","enablePointerEventsAfterDelayCallback","__resetIsScrolling","onScrollWindow","maximumTimeout","enablePointerEventsAfterDelay","scrollElement","__handleWindowScrollEvent","registerScrollListener","unregisterScrollListener","isWindow","getBoundingBox","getBoundingClientRect","getDimensions","innerHeight","innerWidth","serverHeight","serverWidth","getPositionOffset","container","documentElement","containerElement","elementRect","containerRect","getScrollOffset","_elementRect","_containerRect","scrollY","scrollX","getWindow","WindowScroller","updatePosition","scrollTo","_positionFromTop","_isMounted","_positionFromLeft","thisNode","ReactDOM","dimensions","_registerResizeListener","prevScrollElement","_unregisterResizeListener","onChildScroll","_onChildScroll","_setPrototypeOf","sourceKeys","arrayWithoutHoles","iterableToArray","nonIterableSpread","arrayWithHoles","iterableToArrayLimit","nonIterableRest","_arr","_n","_d","_s"],"mappings":"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","file":"static/js/2.f338ea41.chunk.js","sourcesContent":["function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose\");\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutProperties;","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\nexport default function createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        element.__resizeTriggers__.innerHTML = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n","function toVal(mix) {\n\tvar k, y, str='';\n\n\tif (typeof mix === 'string' || typeof mix === 'number') {\n\t\tstr += mix;\n\t} else if (typeof mix === 'object') {\n\t\tif (Array.isArray(mix)) {\n\t\t\tfor (k=0; k < mix.length; k++) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tif (y = toVal(mix[k])) {\n\t\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\t\tstr += y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (k in mix) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\tstr += k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn str;\n}\n\nexport default function () {\n\tvar i=0, tmp, x, str='';\n\twhile (i < arguments.length) {\n\t\tif (tmp = arguments[i++]) {\n\t\t\tif (x = toVal(tmp)) {\n\t\t\t\tstr && (str += ' ');\n\t\t\t\tstr += x\n\t\t\t}\n\t\t}\n\t}\n\treturn str;\n}\n","/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nexport default function calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n\n    _classCallCheck(this, CellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionData\", {});\n\n    _defineProperty(this, \"_lastMeasuredIndex\", -1);\n\n    _defineProperty(this, \"_lastBatchedIndex\", -1);\n\n    _defineProperty(this, \"_cellCount\", void 0);\n\n    _defineProperty(this, \"_cellSizeGetter\", void 0);\n\n    _defineProperty(this, \"_estimatedCellSize\", void 0);\n\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  _createClass(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n\n  return CellSizeAndPositionManager;\n}();\n\nexport { CellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","var DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nexport var getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport CellSizeAndPositionManager from './CellSizeAndPositionManager';\nimport { getMaxElementSize } from './maxElementSize.js';\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? getMaxElementSize() : _ref$maxScrollSize,\n        params = _objectWithoutProperties(_ref, [\"maxScrollSize\"]);\n\n    _classCallCheck(this, ScalingCellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionManager\", void 0);\n\n    _defineProperty(this, \"_maxScrollSize\", void 0);\n\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new CellSizeAndPositionManager(params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  _createClass(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexport { ScalingCellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nexport default function createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","import ScalingCellSizeAndPositionManager from './ScalingCellSizeAndPositionManager.js';\n/**\n * Helper function that determines when to update scroll offsets to ensure that a scroll-to-index remains visible.\n * This function also ensures that the scroll ofset isn't past the last column/row of cells.\n */\n\nexport default function updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSize } from \"../types\";","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nexport var raf = request;\nexport var caf = cancel;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport calculateSizeAndPositionDataAndUpdateScrollOffset from './utils/calculateSizeAndPositionDataAndUpdateScrollOffset';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport defaultOverscanIndicesGetter, { SCROLL_DIRECTION_BACKWARD, SCROLL_DIRECTION_FORWARD } from './defaultOverscanIndicesGetter';\nimport updateScrollIndexHelper from './utils/updateScrollIndexHelper';\nimport defaultCellRangeRenderer from './defaultCellRangeRenderer';\nimport scrollbarSize from 'dom-helpers/scrollbarSize';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    var _this;\n\n    _classCallCheck(this, Grid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Grid).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onGridRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollLeftFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollTopFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_horizontalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_verticalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollbarPresenceChanged\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollingContainer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_childrenToDisplay\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollTop\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollLeft\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_disablePointerEventsTimeoutId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_styleCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n\n    var columnSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  _createClass(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", _extends({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: clsx('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = requestAnimationTimeout(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return Grid;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string.isRequired,\n  \"aria-readonly\": PropTypes.bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": PropTypes.bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof bpfrpt_proptype_CellRenderer === \"function\" ? bpfrpt_proptype_CellRenderer.isRequired ? bpfrpt_proptype_CellRenderer.isRequired : bpfrpt_proptype_CellRenderer : PropTypes.shape(bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof bpfrpt_proptype_CellRangeRenderer === \"function\" ? bpfrpt_proptype_CellRangeRenderer.isRequired ? bpfrpt_proptype_CellRangeRenderer.isRequired : bpfrpt_proptype_CellRangeRenderer : PropTypes.shape(bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": PropTypes.string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": PropTypes.object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": PropTypes.string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": PropTypes.object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": PropTypes.object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": PropTypes.number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": PropTypes.func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": PropTypes.string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": PropTypes.bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": PropTypes.func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": PropTypes.number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": PropTypes.string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": PropTypes.number.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: defaultCellRangeRenderer,\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: scrollbarSize,\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: defaultOverscanIndicesGetter,\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n\npolyfill(Grid);\nexport default Grid;\nimport { bpfrpt_proptype_CellRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellRangeRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellPosition } from \"./types\";\nimport { bpfrpt_proptype_CellSize } from \"./types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"./types\";\nimport { bpfrpt_proptype_NoContentRenderer } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport { bpfrpt_proptype_ScrollbarPresenceChange } from \"./types\";\nimport { bpfrpt_proptype_RenderedSection } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"./types\";\nimport { bpfrpt_proptype_Alignment } from \"./types\";\nimport { bpfrpt_proptype_CellCache } from \"./types\";\nimport { bpfrpt_proptype_StyleCache } from \"./types\";\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";","import { caf, raf } from './animationFrame';\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": PropTypes.number.isRequired\n};\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return caf(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = raf(timeout);\n    }\n  };\n\n  var frame = {\n    id: raf(timeout)\n  };\n  return frame;\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_AnimationTimeoutId };","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nexport default function defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}\n\nimport { bpfrpt_proptype_CellRangeRendererParams } from \"./types\";","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","var bpfrpt_proptype_ScrollIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_ScrollIndices };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\n/**\n * This HOC decorates a virtualized component and responds to arrow-key events by scrolling one row or column at a time.\n */\n\nvar ArrowKeyStepper = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ArrowKeyStepper, _React$PureComponent);\n\n  function ArrowKeyStepper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ArrowKeyStepper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ArrowKeyStepper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollToColumn: 0,\n      scrollToRow: 0,\n      instanceProps: {\n        prevScrollToColumn: 0,\n        prevScrollToRow: 0\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onKeyDown\", function (event) {\n      var _this$props = _this.props,\n          columnCount = _this$props.columnCount,\n          disabled = _this$props.disabled,\n          mode = _this$props.mode,\n          rowCount = _this$props.rowCount;\n\n      if (disabled) {\n        return;\n      }\n\n      var _this$_getScrollState = _this._getScrollState(),\n          scrollToColumnPrevious = _this$_getScrollState.scrollToColumn,\n          scrollToRowPrevious = _this$_getScrollState.scrollToRow;\n\n      var _this$_getScrollState2 = _this._getScrollState(),\n          scrollToColumn = _this$_getScrollState2.scrollToColumn,\n          scrollToRow = _this$_getScrollState2.scrollToRow; // The above cases all prevent default event event behavior.\n      // This is to keep the grid from scrolling after the snap-to update.\n\n\n      switch (event.key) {\n        case 'ArrowDown':\n          scrollToRow = mode === 'cells' ? Math.min(scrollToRow + 1, rowCount - 1) : Math.min(_this._rowStopIndex + 1, rowCount - 1);\n          break;\n\n        case 'ArrowLeft':\n          scrollToColumn = mode === 'cells' ? Math.max(scrollToColumn - 1, 0) : Math.max(_this._columnStartIndex - 1, 0);\n          break;\n\n        case 'ArrowRight':\n          scrollToColumn = mode === 'cells' ? Math.min(scrollToColumn + 1, columnCount - 1) : Math.min(_this._columnStopIndex + 1, columnCount - 1);\n          break;\n\n        case 'ArrowUp':\n          scrollToRow = mode === 'cells' ? Math.max(scrollToRow - 1, 0) : Math.max(_this._rowStartIndex - 1, 0);\n          break;\n      }\n\n      if (scrollToColumn !== scrollToColumnPrevious || scrollToRow !== scrollToRowPrevious) {\n        event.preventDefault();\n\n        _this._updateScrollState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref) {\n      var columnStartIndex = _ref.columnStartIndex,\n          columnStopIndex = _ref.columnStopIndex,\n          rowStartIndex = _ref.rowStartIndex,\n          rowStopIndex = _ref.rowStopIndex;\n      _this._columnStartIndex = columnStartIndex;\n      _this._columnStopIndex = columnStopIndex;\n      _this._rowStartIndex = rowStartIndex;\n      _this._rowStopIndex = rowStopIndex;\n    });\n\n    return _this;\n  }\n\n  _createClass(ArrowKeyStepper, [{\n    key: \"setScrollIndexes\",\n    value: function setScrollIndexes(_ref2) {\n      var scrollToColumn = _ref2.scrollToColumn,\n          scrollToRow = _ref2.scrollToRow;\n      this.setState({\n        scrollToRow: scrollToRow,\n        scrollToColumn: scrollToColumn\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          children = _this$props2.children;\n\n      var _this$_getScrollState3 = this._getScrollState(),\n          scrollToColumn = _this$_getScrollState3.scrollToColumn,\n          scrollToRow = _this$_getScrollState3.scrollToRow;\n\n      return React.createElement(\"div\", {\n        className: className,\n        onKeyDown: this._onKeyDown\n      }, children({\n        onSectionRendered: this._onSectionRendered,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow\n      }));\n    }\n  }, {\n    key: \"_getScrollState\",\n    value: function _getScrollState() {\n      return this.props.isControlled ? this.props : this.state;\n    }\n  }, {\n    key: \"_updateScrollState\",\n    value: function _updateScrollState(_ref3) {\n      var scrollToColumn = _ref3.scrollToColumn,\n          scrollToRow = _ref3.scrollToRow;\n      var _this$props3 = this.props,\n          isControlled = _this$props3.isControlled,\n          onScrollToChange = _this$props3.onScrollToChange;\n\n      if (typeof onScrollToChange === 'function') {\n        onScrollToChange({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n\n      if (!isControlled) {\n        this.setState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isControlled) {\n        return {};\n      }\n\n      if (nextProps.scrollToColumn !== prevState.instanceProps.prevScrollToColumn || nextProps.scrollToRow !== prevState.instanceProps.prevScrollToRow) {\n        return _objectSpread({}, prevState, {\n          scrollToColumn: nextProps.scrollToColumn,\n          scrollToRow: nextProps.scrollToRow,\n          instanceProps: {\n            prevScrollToColumn: nextProps.scrollToColumn,\n            prevScrollToRow: nextProps.scrollToRow\n          }\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return ArrowKeyStepper;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"children\": PropTypes.func.isRequired,\n  \"className\": PropTypes.string,\n  \"columnCount\": PropTypes.number.isRequired,\n  \"disabled\": PropTypes.bool.isRequired,\n  \"isControlled\": PropTypes.bool.isRequired,\n  \"mode\": PropTypes.oneOf([\"cells\", \"edges\"]).isRequired,\n  \"onScrollToChange\": PropTypes.func,\n  \"rowCount\": PropTypes.number.isRequired,\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(ArrowKeyStepper, \"defaultProps\", {\n  disabled: false,\n  isControlled: false,\n  mode: 'edges',\n  scrollToColumn: 0,\n  scrollToRow: 0\n});\n\npolyfill(ArrowKeyStepper);\nexport default ArrowKeyStepper;\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_ScrollIndices } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport createDetectElementResize from '../vendor/detectElementResize';\nvar AutoSizer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AutoSizer, _React$Component);\n\n  function AutoSizer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutoSizer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_parentNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_autoSizer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var height = _this._parentNode.offsetHeight || 0;\n        var width = _this._parentNode.offsetWidth || 0;\n        var win = _this._window || window;\n        var style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        var newHeight = height - paddingTop - paddingBottom;\n        var newWidth = width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: height - paddingTop - paddingBottom,\n            width: width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: height,\n            width: width\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    });\n\n    return _this;\n  }\n\n  _createClass(AutoSizer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = createDetectElementResize(nonce, this._window);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          disableHeight = _this$props2.disableHeight,\n          disableWidth = _this$props2.disableWidth,\n          style = _this$props2.style;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement(\"div\", {\n        className: className,\n        ref: this._setRef,\n        style: _objectSpread({}, outerStyle, {}, style)\n      }, children(childParams));\n    }\n  }]);\n\n  return AutoSizer;\n}(React.Component), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  \"children\": PropTypes.func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  \"className\": PropTypes.string,\n\n  /** Default height to use for initial render; useful for SSR */\n  \"defaultHeight\": PropTypes.number,\n\n  /** Default width to use for initial render; useful for SSR */\n  \"defaultWidth\": PropTypes.number,\n\n  /** Disable dynamic :height property */\n  \"disableHeight\": PropTypes.bool.isRequired,\n\n  /** Disable dynamic :width property */\n  \"disableWidth\": PropTypes.bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  \"nonce\": PropTypes.string,\n\n  /** Callback to be invoked on-resize */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object\n}), _temp);\n\n_defineProperty(AutoSizer, \"defaultProps\", {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n});\n\nexport { AutoSizer as default };\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || findDOMNode(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n\n  return CellMeasurer;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof bpfrpt_proptype_CellMeasureCache === \"function\" ? bpfrpt_proptype_CellMeasureCache.isRequired ? bpfrpt_proptype_CellMeasureCache.isRequired : bpfrpt_proptype_CellMeasureCache : PropTypes.shape(bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  \"columnIndex\": PropTypes.number,\n  \"index\": PropTypes.number,\n  \"parent\": PropTypes.shape({\n    invalidateCellSizeAfterRender: PropTypes.func,\n    recomputeGridSize: PropTypes.func\n  }).isRequired,\n  \"rowIndex\": PropTypes.number\n}), _temp); // Used for DEV mode warning check\n\n_defineProperty(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nexport { CellMeasurer as default };\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nexport var DEFAULT_HEIGHT = 30;\nexport var DEFAULT_WIDTH = 100; // Enables more intelligent mapping of a given column and row index to an item ID.\n// This prevents a cell cache from being invalidated when its parent collection is modified.\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCache =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCache() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCache);\n\n    _defineProperty(this, \"_cellHeightCache\", {});\n\n    _defineProperty(this, \"_cellWidthCache\", {});\n\n    _defineProperty(this, \"_columnWidthCache\", {});\n\n    _defineProperty(this, \"_rowHeightCache\", {});\n\n    _defineProperty(this, \"_defaultHeight\", void 0);\n\n    _defineProperty(this, \"_defaultWidth\", void 0);\n\n    _defineProperty(this, \"_minHeight\", void 0);\n\n    _defineProperty(this, \"_minWidth\", void 0);\n\n    _defineProperty(this, \"_keyMapper\", void 0);\n\n    _defineProperty(this, \"_hasFixedHeight\", void 0);\n\n    _defineProperty(this, \"_hasFixedWidth\", void 0);\n\n    _defineProperty(this, \"_columnCount\", 0);\n\n    _defineProperty(this, \"_rowCount\", 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      var key = _this._keyMapper(0, index);\n\n      return _this._columnWidthCache[key] !== undefined ? _this._columnWidthCache[key] : _this._defaultWidth;\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      var key = _this._keyMapper(index, 0);\n\n      return _this._rowHeightCache[key] !== undefined ? _this._rowHeightCache[key] : _this._defaultHeight;\n    });\n\n    var defaultHeight = params.defaultHeight,\n        defaultWidth = params.defaultWidth,\n        fixedHeight = params.fixedHeight,\n        fixedWidth = params.fixedWidth,\n        keyMapper = params.keyMapper,\n        minHeight = params.minHeight,\n        minWidth = params.minWidth;\n    this._hasFixedHeight = fixedHeight === true;\n    this._hasFixedWidth = fixedWidth === true;\n    this._minHeight = minHeight || 0;\n    this._minWidth = minWidth || 0;\n    this._keyMapper = keyMapper || defaultKeyMapper;\n    this._defaultHeight = Math.max(this._minHeight, typeof defaultHeight === 'number' ? defaultHeight : DEFAULT_HEIGHT);\n    this._defaultWidth = Math.max(this._minWidth, typeof defaultWidth === 'number' ? defaultWidth : DEFAULT_WIDTH);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (this._hasFixedHeight === false && this._hasFixedWidth === false) {\n        console.warn(\"CellMeasurerCache should only measure a cell's width or height. \" + 'You have configured CellMeasurerCache to measure both. ' + 'This will result in poor performance.');\n      }\n\n      if (this._hasFixedHeight === false && this._defaultHeight === 0) {\n        console.warn('Fixed height CellMeasurerCache should specify a :defaultHeight greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n\n      if (this._hasFixedWidth === false && this._defaultWidth === 0) {\n        console.warn('Fixed width CellMeasurerCache should specify a :defaultWidth greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n    }\n  }\n\n  _createClass(CellMeasurerCache, [{\n    key: \"clear\",\n    value: function clear(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      delete this._cellHeightCache[key];\n      delete this._cellWidthCache[key];\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellHeightCache = {};\n      this._cellWidthCache = {};\n      this._columnWidthCache = {};\n      this._rowHeightCache = {};\n      this._rowCount = 0;\n      this._columnCount = 0;\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._hasFixedHeight;\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._hasFixedWidth;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedHeight) {\n        return this._defaultHeight;\n      } else {\n        var _key = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellHeightCache[_key] !== undefined ? Math.max(this._minHeight, this._cellHeightCache[_key]) : this._defaultHeight;\n      }\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedWidth) {\n        return this._defaultWidth;\n      } else {\n        var _key2 = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellWidthCache[_key2] !== undefined ? Math.max(this._minWidth, this._cellWidthCache[_key2]) : this._defaultWidth;\n      }\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      return this._cellHeightCache[key] !== undefined;\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      if (columnIndex >= this._columnCount) {\n        this._columnCount = columnIndex + 1;\n      }\n\n      if (rowIndex >= this._rowCount) {\n        this._rowCount = rowIndex + 1;\n      } // Size is cached per cell so we don't have to re-measure if cells are re-ordered.\n\n\n      this._cellHeightCache[key] = height;\n      this._cellWidthCache[key] = width;\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"_updateCachedColumnAndRowSizes\",\n    value: function _updateCachedColumnAndRowSizes(rowIndex, columnIndex) {\n      // :columnWidth and :rowHeight are derived based on all cells in a column/row.\n      // Pre-cache these derived values for faster lookup later.\n      // Reads are expected to occur more frequently than writes in this case.\n      // Only update non-fixed dimensions though to avoid doing unnecessary work.\n      if (!this._hasFixedWidth) {\n        var columnWidth = 0;\n\n        for (var i = 0; i < this._rowCount; i++) {\n          columnWidth = Math.max(columnWidth, this.getWidth(i, columnIndex));\n        }\n\n        var columnKey = this._keyMapper(0, columnIndex);\n\n        this._columnWidthCache[columnKey] = columnWidth;\n      }\n\n      if (!this._hasFixedHeight) {\n        var rowHeight = 0;\n\n        for (var _i = 0; _i < this._columnCount; _i++) {\n          rowHeight = Math.max(rowHeight, this.getHeight(rowIndex, _i));\n        }\n\n        var rowKey = this._keyMapper(rowIndex, 0);\n\n        this._rowHeightCache[rowKey] = rowHeight;\n      }\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCache;\n}();\n\nexport { CellMeasurerCache as default };\n\nfunction defaultKeyMapper(rowIndex, columnIndex) {\n  return \"\".concat(rowIndex, \"-\").concat(columnIndex);\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize'; // @TODO Merge Collection and CollectionView\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nvar IS_SCROLLING_TIMEOUT = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n/**\n * Monitors changes in properties (eg. cellCount) and state (eg. scroll offsets) to determine when rendering needs to occur.\n * This component does not render any visible content itself; it defers to the specified :cellLayoutManager.\n */\n\nvar CollectionView =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CollectionView, _React$PureComponent);\n\n  // Invokes callbacks only when their values have changed.\n  function CollectionView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CollectionView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CollectionView)).call.apply(_getPrototypeOf2, [this].concat(args))); // If this component is being rendered server-side, getScrollbarSize() will return undefined.\n    // We handle this case in componentDidMount()\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateSizeAndPositionDataOnNextUpdate\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnSectionRenderedHelper\", function () {\n      var _this$props = _this.props,\n          cellLayoutManager = _this$props.cellLayoutManager,\n          onSectionRendered = _this$props.onSectionRendered;\n\n      _this._onSectionRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          indices: cellLayoutManager.getLastRenderedIndices()\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateScrollPositionForScrollToCell\", function () {\n      var _this$props2 = _this.props,\n          cellLayoutManager = _this$props2.cellLayoutManager,\n          height = _this$props2.height,\n          scrollToAlignment = _this$props2.scrollToAlignment,\n          scrollToCell = _this$props2.scrollToCell,\n          width = _this$props2.width;\n      var _this$state = _this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n\n      if (scrollToCell >= 0) {\n        var scrollPosition = cellLayoutManager.getScrollPositionForCell({\n          align: scrollToAlignment,\n          cellIndex: scrollToCell,\n          height: height,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          width: width\n        });\n\n        if (scrollPosition.scrollLeft !== scrollLeft || scrollPosition.scrollTop !== scrollTop) {\n          _this._setScrollPosition(scrollPosition);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target !== _this._scrollingContainer) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._enablePointerEventsAfterDelay(); // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scrollTop never exceeds the total height.\n\n\n      var _this$props3 = _this.props,\n          cellLayoutManager = _this$props3.cellLayoutManager,\n          height = _this$props3.height,\n          isScrollingChange = _this$props3.isScrollingChange,\n          width = _this$props3.width;\n      var scrollbarSize = _this._scrollbarSize;\n\n      var _cellLayoutManager$ge = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge.height,\n          totalWidth = _cellLayoutManager$ge.width;\n\n      var scrollLeft = Math.max(0, Math.min(totalWidth - width + scrollbarSize, event.target.scrollLeft));\n      var scrollTop = Math.max(0, Math.min(totalHeight - height + scrollbarSize, event.target.scrollTop)); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (_this.state.scrollLeft !== scrollLeft || _this.state.scrollTop !== scrollTop) {\n        // Browsers with cancelable scroll events (eg. Firefox) interrupt scrolling animations if scrollTop/scrollLeft is set.\n        // Other browsers (eg. Safari) don't scroll as well without the help under certain conditions (DOM or style changes during scrolling).\n        // All things considered, this seems to be the best current work around that I'm aware of.\n        // For more information see https://github.com/bvaughn/react-virtualized/pull/124\n        var scrollPositionChangeReason = event.cancelable ? SCROLL_POSITION_CHANGE_REASONS.OBSERVED : SCROLL_POSITION_CHANGE_REASONS.REQUESTED; // Synchronously set :isScrolling the first time (since _setNextState will reschedule its animation frame each time it's called)\n\n        if (!_this.state.isScrolling) {\n          isScrollingChange(true);\n        }\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollPositionChangeReason: scrollPositionChangeReason,\n          scrollTop: scrollTop\n        });\n      }\n\n      _this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalWidth: totalWidth,\n        totalHeight: totalHeight\n      });\n    });\n\n    _this._scrollbarSize = getScrollbarSize();\n\n    if (_this._scrollbarSize === undefined) {\n      _this._scrollbarSizeMeasured = false;\n      _this._scrollbarSize = 0;\n    } else {\n      _this._scrollbarSizeMeasured = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Forced recompute of cell sizes and positions.\n   * This function should be called if cell sizes have changed but nothing else has.\n   * Since cell positions are calculated by callbacks, the collection view has no way of detecting when the underlying data has changed.\n   */\n\n\n  _createClass(CollectionView, [{\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._calculateSizeAndPositionDataOnNextUpdate = true;\n      this.forceUpdate();\n    }\n    /* ---------------------------- Component lifecycle methods ---------------------------- */\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          cellLayoutManager = _this$props4.cellLayoutManager,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToCell = _this$props4.scrollToCell,\n          scrollTop = _this$props4.scrollTop; // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n      if (!this._scrollbarSizeMeasured) {\n        this._scrollbarSize = getScrollbarSize();\n        this._scrollbarSizeMeasured = true;\n        this.setState({});\n      }\n\n      if (scrollToCell >= 0) {\n        this._updateScrollPositionForScrollToCell();\n      } else if (scrollLeft >= 0 || scrollTop >= 0) {\n        this._setScrollPosition({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      } // Update onSectionRendered callback.\n\n\n      this._invokeOnSectionRenderedHelper();\n\n      var _cellLayoutManager$ge2 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge2.height,\n          totalWidth = _cellLayoutManager$ge2.width; // Initialize onScroll callback.\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalHeight: totalHeight,\n        totalWidth: totalWidth\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props5 = this.props,\n          height = _this$props5.height,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToCell = _this$props5.scrollToCell,\n          width = _this$props5.width;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollPositionChangeReason = _this$state2.scrollPositionChangeReason,\n          scrollTop = _this$state2.scrollTop; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        if (scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft && scrollLeft !== this._scrollingContainer.scrollLeft) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop >= 0 && scrollTop !== prevState.scrollTop && scrollTop !== this._scrollingContainer.scrollTop) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Update scroll offsets if the current :scrollToCell values requires it\n\n\n      if (height !== prevProps.height || scrollToAlignment !== prevProps.scrollToAlignment || scrollToCell !== prevProps.scrollToCell || width !== prevProps.width) {\n        this._updateScrollPositionForScrollToCell();\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnSectionRenderedHelper();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoHeight = _this$props6.autoHeight,\n          cellCount = _this$props6.cellCount,\n          cellLayoutManager = _this$props6.cellLayoutManager,\n          className = _this$props6.className,\n          height = _this$props6.height,\n          horizontalOverscanSize = _this$props6.horizontalOverscanSize,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          style = _this$props6.style,\n          verticalOverscanSize = _this$props6.verticalOverscanSize,\n          width = _this$props6.width;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollLeft = _this$state3.scrollLeft,\n          scrollTop = _this$state3.scrollTop; // Memoization reset\n\n      if (this._lastRenderedCellCount !== cellCount || this._lastRenderedCellLayoutManager !== cellLayoutManager || this._calculateSizeAndPositionDataOnNextUpdate) {\n        this._lastRenderedCellCount = cellCount;\n        this._lastRenderedCellLayoutManager = cellLayoutManager;\n        this._calculateSizeAndPositionDataOnNextUpdate = false;\n        cellLayoutManager.calculateSizeAndPositionData();\n      }\n\n      var _cellLayoutManager$ge3 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge3.height,\n          totalWidth = _cellLayoutManager$ge3.width; // Safely expand the rendered area by the specified overscan amount\n\n\n      var left = Math.max(0, scrollLeft - horizontalOverscanSize);\n      var top = Math.max(0, scrollTop - verticalOverscanSize);\n      var right = Math.min(totalWidth, scrollLeft + width + horizontalOverscanSize);\n      var bottom = Math.min(totalHeight, scrollTop + height + verticalOverscanSize);\n      var childrenToDisplay = height > 0 && width > 0 ? cellLayoutManager.cellRenderers({\n        height: bottom - top,\n        isScrolling: isScrolling,\n        width: right - left,\n        x: left,\n        y: top\n      }) : [];\n      var collectionStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        WebkitOverflowScrolling: 'touch',\n        width: width,\n        willChange: 'transform'\n      }; // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalHeight > height ? this._scrollbarSize : 0;\n      var horizontalScrollBarSize = totalWidth > width ? this._scrollbarSize : 0; // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n      collectionStyle.overflowX = totalWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      collectionStyle.overflowY = totalHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Collection', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: \"grid\",\n        style: _objectSpread({}, collectionStyle, {}, style),\n        tabIndex: 0\n      }, cellCount > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Collection__innerScrollContainer\",\n        style: {\n          height: totalHeight,\n          maxHeight: totalHeight,\n          maxWidth: totalWidth,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          width: totalWidth\n        }\n      }, childrenToDisplay), cellCount === 0 && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Collection.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_enablePointerEventsAfterDelay\",\n    value: function _enablePointerEventsAfterDelay() {\n      var _this2 = this;\n\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = setTimeout(function () {\n        var isScrollingChange = _this2.props.isScrollingChange;\n        isScrollingChange(false);\n        _this2._disablePointerEventsTimeoutId = null;\n\n        _this2.setState({\n          isScrolling: false\n        });\n      }, IS_SCROLLING_TIMEOUT);\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref) {\n      var _this3 = this;\n\n      var scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          totalHeight = _ref.totalHeight,\n          totalWidth = _ref.totalWidth;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref2) {\n          var scrollLeft = _ref2.scrollLeft,\n              scrollTop = _ref2.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_setScrollPosition\",\n    value: function _setScrollPosition(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (scrollLeft >= 0) {\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (scrollTop >= 0) {\n        newState.scrollTop = scrollTop;\n      }\n\n      if (scrollLeft >= 0 && scrollLeft !== this.state.scrollLeft || scrollTop >= 0 && scrollTop !== this.state.scrollTop) {\n        this.setState(newState);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.cellCount === 0 && (prevState.scrollLeft !== 0 || prevState.scrollTop !== 0)) {\n        return {\n          scrollLeft: 0,\n          scrollTop: 0,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null ? nextProps.scrollTop : prevState.scrollTop,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return CollectionView;\n}(React.PureComponent);\n\n_defineProperty(CollectionView, \"defaultProps\", {\n  'aria-label': 'grid',\n  horizontalOverscanSize: 0,\n  noContentRenderer: function noContentRenderer() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  onSectionRendered: function onSectionRendered() {\n    return null;\n  },\n  scrollToAlignment: 'auto',\n  scrollToCell: -1,\n  style: {},\n  verticalOverscanSize: 0\n});\n\nCollectionView.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * Number of cells in collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Calculates cell sizes and positions and manages rendering the appropriate cells given a specified window.\n   */\n  cellLayoutManager: PropTypes.object.isRequired,\n\n  /**\n   * Optional custom CSS class name to attach to root Collection element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Height of Collection; this property determines the number of visible (vs virtualized) rows.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Optional custom id to attach to root Collection element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Enables the `Collection` to horiontally \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  horizontalOverscanSize: PropTypes.number.isRequired,\n  isScrollingChange: PropTypes.func,\n\n  /**\n   * Optional renderer to be used in place of rows when either :rowCount or :cellCount is 0.\n   */\n  noContentRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, clientWidth, scrollHeight, scrollLeft, scrollTop, scrollWidth }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked with information about the section of the Collection that was just rendered.\n   * This callback is passed a named :indices parameter which is an Array of the most recently rendered section indices.\n   */\n  onSectionRendered: PropTypes.func.isRequired,\n\n  /**\n   * Horizontal offset.\n   */\n  scrollLeft: PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /**\n   * Cell index to ensure visible (by forcefully scrolling if necessary).\n   */\n  scrollToCell: PropTypes.number.isRequired,\n\n  /**\n   * Vertical offset.\n   */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Optional custom inline style to attach to root Collection element.\n   */\n  style: PropTypes.object,\n\n  /**\n   * Enables the `Collection` to vertically \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  verticalOverscanSize: PropTypes.number.isRequired,\n\n  /**\n   * Width of Collection; this property determines the number of visible (vs virtualized) columns.\n   */\n  width: PropTypes.number.isRequired\n} : {};\npolyfill(CollectionView);\nexport default CollectionView;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * A section of the Window.\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * Sections have a fixed size and contain 0 to many cells (tracked by their indices).\n */\nvar Section =\n/*#__PURE__*/\nfunction () {\n  function Section(_ref) {\n    var height = _ref.height,\n        width = _ref.width,\n        x = _ref.x,\n        y = _ref.y;\n\n    _classCallCheck(this, Section);\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this._indexMap = {};\n    this._indices = [];\n  }\n  /** Add a cell to this section. */\n\n\n  _createClass(Section, [{\n    key: \"addCellIndex\",\n    value: function addCellIndex(_ref2) {\n      var index = _ref2.index;\n\n      if (!this._indexMap[index]) {\n        this._indexMap[index] = true;\n\n        this._indices.push(index);\n      }\n    }\n    /** Get all cell indices that have been added to this section. */\n\n  }, {\n    key: \"getCellIndices\",\n    value: function getCellIndices() {\n      return this._indices;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.x, \",\").concat(this.y, \" \").concat(this.width, \"x\").concat(this.height);\n    }\n  }]);\n\n  return Section;\n}();\n\nexport { Section as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * \n */\nimport Section from './Section';\nvar SECTION_SIZE = 100;\n\n/**\n * Contains 0 to many Sections.\n * Grows (and adds Sections) dynamically as cells are registered.\n * Automatically adds cells to the appropriate Section(s).\n */\nvar SectionManager =\n/*#__PURE__*/\nfunction () {\n  function SectionManager() {\n    var sectionSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SECTION_SIZE;\n\n    _classCallCheck(this, SectionManager);\n\n    this._sectionSize = sectionSize;\n    this._cellMetadata = [];\n    this._sections = {};\n  }\n  /**\n   * Gets all cell indices contained in the specified region.\n   * A region may encompass 1 or more Sections.\n   */\n\n\n  _createClass(SectionManager, [{\n    key: \"getCellIndices\",\n    value: function getCellIndices(_ref) {\n      var height = _ref.height,\n          width = _ref.width,\n          x = _ref.x,\n          y = _ref.y;\n      var indices = {};\n      this.getSections({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      }).forEach(function (section) {\n        return section.getCellIndices().forEach(function (index) {\n          indices[index] = index;\n        });\n      }); // Object keys are strings; this function returns numbers\n\n      return Object.keys(indices).map(function (index) {\n        return indices[index];\n      });\n    }\n    /** Get size and position information for the cell specified. */\n\n  }, {\n    key: \"getCellMetadata\",\n    value: function getCellMetadata(_ref2) {\n      var index = _ref2.index;\n      return this._cellMetadata[index];\n    }\n    /** Get all Sections overlapping the specified region. */\n\n  }, {\n    key: \"getSections\",\n    value: function getSections(_ref3) {\n      var height = _ref3.height,\n          width = _ref3.width,\n          x = _ref3.x,\n          y = _ref3.y;\n      var sectionXStart = Math.floor(x / this._sectionSize);\n      var sectionXStop = Math.floor((x + width - 1) / this._sectionSize);\n      var sectionYStart = Math.floor(y / this._sectionSize);\n      var sectionYStop = Math.floor((y + height - 1) / this._sectionSize);\n      var sections = [];\n\n      for (var sectionX = sectionXStart; sectionX <= sectionXStop; sectionX++) {\n        for (var sectionY = sectionYStart; sectionY <= sectionYStop; sectionY++) {\n          var key = \"\".concat(sectionX, \".\").concat(sectionY);\n\n          if (!this._sections[key]) {\n            this._sections[key] = new Section({\n              height: this._sectionSize,\n              width: this._sectionSize,\n              x: sectionX * this._sectionSize,\n              y: sectionY * this._sectionSize\n            });\n          }\n\n          sections.push(this._sections[key]);\n        }\n      }\n\n      return sections;\n    }\n    /** Total number of Sections based on the currently registered cells. */\n\n  }, {\n    key: \"getTotalSectionCount\",\n    value: function getTotalSectionCount() {\n      return Object.keys(this._sections).length;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var _this = this;\n\n      return Object.keys(this._sections).map(function (index) {\n        return _this._sections[index].toString();\n      });\n    }\n    /** Adds a cell to the appropriate Sections and registers it metadata for later retrievable. */\n\n  }, {\n    key: \"registerCell\",\n    value: function registerCell(_ref4) {\n      var cellMetadatum = _ref4.cellMetadatum,\n          index = _ref4.index;\n      this._cellMetadata[index] = cellMetadatum;\n      this.getSections(cellMetadatum).forEach(function (section) {\n        return section.addCellIndex({\n          index: index\n        });\n      });\n    }\n  }]);\n\n  return SectionManager;\n}();\n\nexport { SectionManager as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","/**\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\n * If the cell is already visible then the current offset will be returned.\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n *\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n * @param cellOffset Offset (x or y) position for cell\n * @param cellSize Size (width or height) of cell\n * @param containerSize Total size (width or height) of the container\n * @param currentOffset Container's current (x or y) offset\n * @return Offset to use to ensure the specified cell is visible\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? 'auto' : _ref$align,\n      cellOffset = _ref.cellOffset,\n      cellSize = _ref.cellSize,\n      containerSize = _ref.containerSize,\n      currentOffset = _ref.currentOffset;\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport CollectionView from './CollectionView';\nimport _calculateSizeAndPositionData from './utils/calculateSizeAndPositionData';\nimport getUpdatedOffsetForIndex from '../utils/getUpdatedOffsetForIndex';\n\n/**\n * Renders scattered or non-linear data.\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\n */\nvar Collection =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Collection, _React$PureComponent);\n\n  function Collection(props, context) {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collection).call(this, props, context));\n    _this._cellMetadata = [];\n    _this._lastRenderedCellIndices = []; // Cell cache during scroll (for performance)\n\n    _this._cellCache = [];\n    _this._isScrollingChange = _this._isScrollingChange.bind(_assertThisInitialized(_this));\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"forceUpdate\",\n    value: function forceUpdate() {\n      if (this._collectionView !== undefined) {\n        this._collectionView.forceUpdate();\n      }\n    }\n    /** See Collection#recomputeCellSizesAndPositions */\n\n  }, {\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._cellCache = [];\n\n      this._collectionView.recomputeCellSizesAndPositions();\n    }\n    /** React lifecycle methods */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _extends({}, this.props);\n\n      return React.createElement(CollectionView, _extends({\n        cellLayoutManager: this,\n        isScrollingChange: this._isScrollingChange,\n        ref: this._setCollectionViewRef\n      }, props));\n    }\n    /** CellLayoutManager interface */\n\n  }, {\n    key: \"calculateSizeAndPositionData\",\n    value: function calculateSizeAndPositionData() {\n      var _this$props = this.props,\n          cellCount = _this$props.cellCount,\n          cellSizeAndPositionGetter = _this$props.cellSizeAndPositionGetter,\n          sectionSize = _this$props.sectionSize;\n\n      var data = _calculateSizeAndPositionData({\n        cellCount: cellCount,\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\n        sectionSize: sectionSize\n      });\n\n      this._cellMetadata = data.cellMetadata;\n      this._sectionManager = data.sectionManager;\n      this._height = data.height;\n      this._width = data.width;\n    }\n    /**\n     * Returns the most recently rendered set of cell indices.\n     */\n\n  }, {\n    key: \"getLastRenderedIndices\",\n    value: function getLastRenderedIndices() {\n      return this._lastRenderedCellIndices;\n    }\n    /**\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\n     */\n\n  }, {\n    key: \"getScrollPositionForCell\",\n    value: function getScrollPositionForCell(_ref) {\n      var align = _ref.align,\n          cellIndex = _ref.cellIndex,\n          height = _ref.height,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          width = _ref.width;\n      var cellCount = this.props.cellCount;\n\n      if (cellIndex >= 0 && cellIndex < cellCount) {\n        var cellMetadata = this._cellMetadata[cellIndex];\n        scrollLeft = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.x,\n          cellSize: cellMetadata.width,\n          containerSize: width,\n          currentOffset: scrollLeft,\n          targetIndex: cellIndex\n        });\n        scrollTop = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.y,\n          cellSize: cellMetadata.height,\n          containerSize: height,\n          currentOffset: scrollTop,\n          targetIndex: cellIndex\n        });\n      }\n\n      return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      };\n    }\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return {\n        height: this._height,\n        width: this._width\n      };\n    }\n  }, {\n    key: \"cellRenderers\",\n    value: function cellRenderers(_ref2) {\n      var _this2 = this;\n\n      var height = _ref2.height,\n          isScrolling = _ref2.isScrolling,\n          width = _ref2.width,\n          x = _ref2.x,\n          y = _ref2.y;\n      var _this$props2 = this.props,\n          cellGroupRenderer = _this$props2.cellGroupRenderer,\n          cellRenderer = _this$props2.cellRenderer; // Store for later calls to getLastRenderedIndices()\n\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      });\n      return cellGroupRenderer({\n        cellCache: this._cellCache,\n        cellRenderer: cellRenderer,\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\n          var index = _ref3.index;\n          return _this2._sectionManager.getCellMetadata({\n            index: index\n          });\n        },\n        indices: this._lastRenderedCellIndices,\n        isScrolling: isScrolling\n      });\n    }\n  }, {\n    key: \"_isScrollingChange\",\n    value: function _isScrollingChange(isScrolling) {\n      if (!isScrolling) {\n        this._cellCache = [];\n      }\n    }\n  }, {\n    key: \"_setCollectionViewRef\",\n    value: function _setCollectionViewRef(ref) {\n      this._collectionView = ref;\n    }\n  }]);\n\n  return Collection;\n}(React.PureComponent);\n\n_defineProperty(Collection, \"defaultProps\", {\n  'aria-label': 'grid',\n  cellGroupRenderer: defaultCellGroupRenderer\n});\n\nexport { Collection as default };\nCollection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Number of cells in Collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a group of cells given their indices.\n   * Should implement the following interface: ({\n   *   cellSizeAndPositionGetter:Function,\n   *   indices: Array<number>,\n   *   cellRenderer: Function\n   * }): Array<PropTypes.node>\n   */\n  cellGroupRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Responsible for rendering a cell given an row and column index.\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\n   */\n  cellRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback responsible for returning size and offset/position information for a given cell (index).\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\n   */\n  cellSizeAndPositionGetter: PropTypes.func.isRequired,\n\n  /**\n   * Optionally override the size of the sections a Collection's cells are split into.\n   */\n  sectionSize: PropTypes.number\n} : {};\n\nfunction defaultCellGroupRenderer(_ref4) {\n  var cellCache = _ref4.cellCache,\n      cellRenderer = _ref4.cellRenderer,\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\n      indices = _ref4.indices,\n      isScrolling = _ref4.isScrolling;\n  return indices.map(function (index) {\n    var cellMetadata = cellSizeAndPositionGetter({\n      index: index\n    });\n    var cellRendererProps = {\n      index: index,\n      isScrolling: isScrolling,\n      key: index,\n      style: {\n        height: cellMetadata.height,\n        left: cellMetadata.x,\n        position: 'absolute',\n        top: cellMetadata.y,\n        width: cellMetadata.width\n      }\n    }; // Avoid re-creating cells while scrolling.\n    // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n    // If a scroll is in progress- cache and reuse cells.\n    // This cache will be thrown away once scrolling complets.\n\n    if (isScrolling) {\n      if (!(index in cellCache)) {\n        cellCache[index] = cellRenderer(cellRendererProps);\n      }\n\n      return cellCache[index];\n    } else {\n      return cellRenderer(cellRendererProps);\n    }\n  }).filter(function (renderedCell) {\n    return !!renderedCell;\n  });\n}\n\nimport { bpfrpt_proptype_ScrollPosition } from \"./types\";\nimport { bpfrpt_proptype_SizeInfo } from \"./types\";","import SectionManager from '../SectionManager';\nexport default function calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n  var cellMetadata = [];\n  var sectionManager = new SectionManager(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({\n      index: index\n    });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error(\"Invalid metadata returned for cell \".concat(index, \":\\n        x:\").concat(cellMetadatum.x, \", y:\").concat(cellMetadatum.y, \", width:\").concat(cellMetadatum.width, \", height:\").concat(cellMetadatum.height));\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}","import Collection from './Collection';\nexport default Collection;\nexport { Collection };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * High-order component that auto-calculates column-widths for `Grid` cells.\n */\n\nvar ColumnSizer =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ColumnSizer, _React$PureComponent);\n\n  function ColumnSizer(props, context) {\n    var _this;\n\n    _classCallCheck(this, ColumnSizer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColumnSizer).call(this, props, context));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ColumnSizer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          columnMaxWidth = _this$props.columnMaxWidth,\n          columnMinWidth = _this$props.columnMinWidth,\n          columnCount = _this$props.columnCount,\n          width = _this$props.width;\n\n      if (columnMaxWidth !== prevProps.columnMaxWidth || columnMinWidth !== prevProps.columnMinWidth || columnCount !== prevProps.columnCount || width !== prevProps.width) {\n        if (this._registeredChild) {\n          this._registeredChild.recomputeGridSize();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          columnMaxWidth = _this$props2.columnMaxWidth,\n          columnMinWidth = _this$props2.columnMinWidth,\n          columnCount = _this$props2.columnCount,\n          width = _this$props2.width;\n      var safeColumnMinWidth = columnMinWidth || 1;\n      var safeColumnMaxWidth = columnMaxWidth ? Math.min(columnMaxWidth, width) : width;\n      var columnWidth = width / columnCount;\n      columnWidth = Math.max(safeColumnMinWidth, columnWidth);\n      columnWidth = Math.min(safeColumnMaxWidth, columnWidth);\n      columnWidth = Math.floor(columnWidth);\n      var adjustedWidth = Math.min(width, columnWidth * columnCount);\n      return children({\n        adjustedWidth: adjustedWidth,\n        columnWidth: columnWidth,\n        getColumnWidth: function getColumnWidth() {\n          return columnWidth;\n        },\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(child) {\n      if (child && typeof child.recomputeGridSize !== 'function') {\n        throw Error('Unexpected child type registered; only Grid/MultiGrid children are supported.');\n      }\n\n      this._registeredChild = child;\n\n      if (this._registeredChild) {\n        this._registeredChild.recomputeGridSize();\n      }\n    }\n  }]);\n\n  return ColumnSizer;\n}(React.PureComponent);\n\nexport { ColumnSizer as default };\nColumnSizer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized Grid.\n   * This function should implement the following signature:\n   * ({ adjustedWidth, getColumnWidth, registerChild }) => PropTypes.element\n   *\n   * The specified :getColumnWidth function should be passed to the Grid's :columnWidth property.\n   * The :registerChild should be passed to the Grid's :ref property.\n   * The :adjustedWidth property is optional; it reflects the lesser of the overall width or the width of all columns.\n   */\n  children: PropTypes.func.isRequired,\n\n  /** Optional maximum allowed column width */\n  columnMaxWidth: PropTypes.number,\n\n  /** Optional minimum allowed column width */\n  columnMinWidth: PropTypes.number,\n\n  /** Number of columns in Grid or Table child */\n  columnCount: PropTypes.number.isRequired,\n\n  /** Width of Grid or Table child */\n  width: PropTypes.number.isRequired\n} : {};","import ColumnSizer from './ColumnSizer';\nexport default ColumnSizer;\nexport { ColumnSizer };","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\n/**\n * Higher-order component that manages lazy-loading for \"infinite\" data.\n * This component decorates a virtual component and just-in-time prefetches rows as a user scrolls.\n * It is intended as a convenience component; fork it if you'd like finer-grained control over data-loading.\n */\n\nvar InfiniteLoader =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(InfiniteLoader, _React$PureComponent);\n\n  function InfiniteLoader(props, context) {\n    var _this;\n\n    _classCallCheck(this, InfiniteLoader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InfiniteLoader).call(this, props, context));\n    _this._loadMoreRowsMemoizer = createCallbackMemoizer();\n    _this._onRowsRendered = _this._onRowsRendered.bind(_assertThisInitialized(_this));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(InfiniteLoader, [{\n    key: \"resetLoadMoreRowsCache\",\n    value: function resetLoadMoreRowsCache(autoReload) {\n      this._loadMoreRowsMemoizer = createCallbackMemoizer();\n\n      if (autoReload) {\n        this._doStuff(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return children({\n        onRowsRendered: this._onRowsRendered,\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_loadUnloadedRanges\",\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n\n      var loadMoreRows = this.props.loadMoreRows;\n      unloadedRanges.forEach(function (unloadedRange) {\n        var promise = loadMoreRows(unloadedRange);\n\n        if (promise) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: unloadedRange.startIndex,\n              stopIndex: unloadedRange.stopIndex\n            })) {\n              if (_this2._registeredChild) {\n                forceUpdateReactVirtualizedComponent(_this2._registeredChild, _this2._lastRenderedStartIndex);\n              }\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_onRowsRendered\",\n    value: function _onRowsRendered(_ref) {\n      var startIndex = _ref.startIndex,\n          stopIndex = _ref.stopIndex;\n      this._lastRenderedStartIndex = startIndex;\n      this._lastRenderedStopIndex = stopIndex;\n\n      this._doStuff(startIndex, stopIndex);\n    }\n  }, {\n    key: \"_doStuff\",\n    value: function _doStuff(startIndex, stopIndex) {\n      var _ref2,\n          _this3 = this;\n\n      var _this$props = this.props,\n          isRowLoaded = _this$props.isRowLoaded,\n          minimumBatchSize = _this$props.minimumBatchSize,\n          rowCount = _this$props.rowCount,\n          threshold = _this$props.threshold;\n      var unloadedRanges = scanForUnloadedRanges({\n        isRowLoaded: isRowLoaded,\n        minimumBatchSize: minimumBatchSize,\n        rowCount: rowCount,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(rowCount - 1, stopIndex + threshold)\n      }); // For memoize comparison\n\n      var squashedUnloadedRanges = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(unloadedRanges.map(function (_ref3) {\n        var startIndex = _ref3.startIndex,\n            stopIndex = _ref3.stopIndex;\n        return [startIndex, stopIndex];\n      })));\n\n      this._loadMoreRowsMemoizer({\n        callback: function callback() {\n          _this3._loadUnloadedRanges(unloadedRanges);\n        },\n        indices: {\n          squashedUnloadedRanges: squashedUnloadedRanges\n        }\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(registeredChild) {\n      this._registeredChild = registeredChild;\n    }\n  }]);\n\n  return InfiniteLoader;\n}(React.PureComponent);\n/**\n * Determines if the specified start/stop range is visible based on the most recently rendered range.\n */\n\n\n_defineProperty(InfiniteLoader, \"defaultProps\", {\n  minimumBatchSize: 10,\n  rowCount: 0,\n  threshold: 15\n});\n\nexport { InfiniteLoader as default };\nInfiniteLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized component.\n   * This function should implement the following signature:\n   * ({ onRowsRendered, registerChild }) => PropTypes.element\n   *\n   * The specified :onRowsRendered function should be passed through to the child's :onRowsRendered property.\n   * The :registerChild callback should be set as the virtualized component's :ref.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Function responsible for tracking the loaded state of each row.\n   * It should implement the following signature: ({ index: number }): boolean\n   */\n  isRowLoaded: PropTypes.func.isRequired,\n\n  /**\n   * Callback to be invoked when more rows must be loaded.\n   * It should implement the following signature: ({ startIndex, stopIndex }): Promise\n   * The returned Promise should be resolved once row data has finished loading.\n   * It will be used to determine when to refresh the list with the newly-loaded data.\n   * This callback may be called multiple times in reaction to a single scroll event.\n   */\n  loadMoreRows: PropTypes.func.isRequired,\n\n  /**\n   * Minimum number of rows to be loaded at a time.\n   * This property can be used to batch requests to reduce HTTP requests.\n   */\n  minimumBatchSize: PropTypes.number.isRequired,\n\n  /**\n   * Number of rows in list; can be arbitrary high number if actual number is unknown.\n   */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Threshold at which to pre-fetch data.\n   * A threshold X means that data will start loading when a user scrolls within X rows.\n   * This value defaults to 15.\n   */\n  threshold: PropTypes.number.isRequired\n} : {};\nexport function isRangeVisible(_ref4) {\n  var lastRenderedStartIndex = _ref4.lastRenderedStartIndex,\n      lastRenderedStopIndex = _ref4.lastRenderedStopIndex,\n      startIndex = _ref4.startIndex,\n      stopIndex = _ref4.stopIndex;\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n/**\n * Returns all of the ranges within a larger range that contain unloaded rows.\n */\n\nexport function scanForUnloadedRanges(_ref5) {\n  var isRowLoaded = _ref5.isRowLoaded,\n      minimumBatchSize = _ref5.minimumBatchSize,\n      rowCount = _ref5.rowCount,\n      startIndex = _ref5.startIndex,\n      stopIndex = _ref5.stopIndex;\n  var unloadedRanges = [];\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n\n  for (var index = startIndex; index <= stopIndex; index++) {\n    var loaded = isRowLoaded({\n      index: index\n    });\n\n    if (!loaded) {\n      rangeStopIndex = index;\n\n      if (rangeStartIndex === null) {\n        rangeStartIndex = index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push({\n        startIndex: rangeStartIndex,\n        stopIndex: rangeStopIndex\n      });\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  } // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n\n\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), rowCount - 1);\n\n    for (var _index = rangeStopIndex + 1; _index <= potentialStopIndex; _index++) {\n      if (!isRowLoaded({\n        index: _index\n      })) {\n        rangeStopIndex = _index;\n      } else {\n        break;\n      }\n    }\n\n    unloadedRanges.push({\n      startIndex: rangeStartIndex,\n      stopIndex: rangeStopIndex\n    });\n  } // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n\n\n  if (unloadedRanges.length) {\n    var firstUnloadedRange = unloadedRanges[0];\n\n    while (firstUnloadedRange.stopIndex - firstUnloadedRange.startIndex + 1 < minimumBatchSize && firstUnloadedRange.startIndex > 0) {\n      var _index2 = firstUnloadedRange.startIndex - 1;\n\n      if (!isRowLoaded({\n        index: _index2\n      })) {\n        firstUnloadedRange.startIndex = _index2;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return unloadedRanges;\n}\n/**\n * Since RV components use shallowCompare we need to force a render (even though props haven't changed).\n * However InfiniteLoader may wrap a Grid or it may wrap a Table or List.\n * In the first case the built-in React forceUpdate() method is sufficient to force a re-render,\n * But in the latter cases we need to use the RV-specific forceUpdateGrid() method.\n * Else the inner Grid will not be re-rendered and visuals may be stale.\n *\n * Additionally, while a Grid is scrolling the cells can be cached,\n * So it's important to invalidate that cache by recalculating sizes\n * before forcing a rerender.\n */\n\nexport function forceUpdateReactVirtualizedComponent(component) {\n  var currentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var recomputeSize = typeof component.recomputeGridSize === 'function' ? component.recomputeGridSize : component.recomputeRowHeights;\n\n  if (recomputeSize) {\n    recomputeSize.call(component, currentIndex);\n  } else {\n    component.forceUpdate();\n  }\n}","import InfiniteLoader from './InfiniteLoader';\nexport default InfiniteLoader;\nexport { InfiniteLoader };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport * as React from 'react';\nimport clsx from 'clsx';\n/**\n * It is inefficient to create and manage a large list of DOM elements within a scrolling container\n * if only a few of those elements are visible. The primary purpose of this component is to improve\n * performance by only rendering the DOM nodes that a user is able to see based on their current\n * scroll position.\n *\n * This component renders a virtualized list of elements with either fixed or dynamic heights.\n */\n\nvar List = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(List, _React$PureComponent);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"Grid\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRenderer\", function (_ref) {\n      var parent = _ref.parent,\n          rowIndex = _ref.rowIndex,\n          style = _ref.style,\n          isScrolling = _ref.isScrolling,\n          isVisible = _ref.isVisible,\n          key = _ref.key;\n      var rowRenderer = _this.props.rowRenderer; // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n\n      var widthDescriptor = Object.getOwnPropertyDescriptor(style, 'width');\n\n      if (widthDescriptor && widthDescriptor.writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (ref) {\n      _this.Grid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (_ref2) {\n      var clientHeight = _ref2.clientHeight,\n          scrollHeight = _ref2.scrollHeight,\n          scrollTop = _ref2.scrollTop;\n      var onScroll = _this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref3) {\n      var rowOverscanStartIndex = _ref3.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref3.rowOverscanStopIndex,\n          rowStartIndex = _ref3.rowStartIndex,\n          rowStopIndex = _ref3.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref4) {\n      var alignment = _ref4.alignment,\n          index = _ref4.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index,\n          columnIndex: 0\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref6$columnIndex = _ref6.columnIndex,\n          columnIndex = _ref6$columnIndex === void 0 ? 0 : _ref6$columnIndex,\n          _ref6$rowIndex = _ref6.rowIndex,\n          rowIndex = _ref6$rowIndex === void 0 ? 0 : _ref6$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          scrollToIndex = _this$props.scrollToIndex,\n          width = _this$props.width;\n      var classNames = clsx('ReactVirtualized__List', className);\n      return React.createElement(Grid, _extends({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n\n  return List;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /** Optional CSS class name */\n  \"className\": PropTypes.string,\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Height constraint for list (determines how many actual rows are rendered) */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 */\n  \"noRowsRenderer\": function noRowsRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  */\n  \"onRowsRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node */\n  \"rowRenderer\": function rowRenderer() {\n    return (typeof bpfrpt_proptype_RowRenderer === \"function\" ? bpfrpt_proptype_RowRenderer.isRequired ? bpfrpt_proptype_RowRenderer.isRequired : bpfrpt_proptype_RowRenderer : PropTypes.shape(bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in list. */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** See Grid#scrollToAlignment */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToIndex\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of list */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(List, \"defaultProps\", {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { List as default };\nimport { bpfrpt_proptype_NoContentRenderer } from \"../Grid\";\nimport { bpfrpt_proptype_Alignment } from \"../Grid\";\nimport { bpfrpt_proptype_CellSize } from \"../Grid\";\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"../Grid\";\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_CellRendererParams } from \"../Grid\";\nimport { bpfrpt_proptype_Scroll as bpfrpt_proptype_GridScroll } from \"../Grid\";\nimport { bpfrpt_proptype_RowRenderer } from \"./types\";\nimport { bpfrpt_proptype_RenderedRows } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport PropTypes from \"prop-types\";","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/binary-search-bounds\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nfunction _GEA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x >= y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GEP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) >= 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _GTA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x > y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GTP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) > 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LTA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x < y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LTP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) < 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LEA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x <= y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LEP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) <= 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _EQA(a, l, h, y) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x === y) {\n      return m;\n    } else if (x <= y) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction _EQP(a, l, h, y, c) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    var p = c(x, y);\n\n    if (p === 0) {\n      return m;\n    } else if (p <= 0) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction dispatchBsearchEQ(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _EQP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _EQA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nexport default {\n  ge: dispatchBsearchGE,\n  gt: dispatchBsearchGT,\n  lt: dispatchBsearchLT,\n  le: dispatchBsearchLE,\n  eq: dispatchBsearchEQ\n};","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nimport bounds from './binarySearchBounds';\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\n\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n\n  if (this.left) {\n    this.left.intervals(result);\n  }\n\n  if (this.right) {\n    this.right.intervals(result);\n  }\n\n  return result;\n};\n\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\n\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n\n    var rw = this.right ? this.right.count : 0;\n\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.left.remove(interval);\n\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n\n    var lw = this.left ? this.left.count : 0;\n\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.right.remove(interval);\n\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n\n      return SUCCESS;\n    }\n\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n\n    return NOT_FOUND;\n  }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n\n  if (d) {\n    return d;\n  }\n\n  return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n\n  if (d) {\n    return d;\n  }\n\n  return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n\n  var pts = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n\n  pts.sort(compareNumbers);\n  var mid = pts[pts.length >> 1];\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  } //Split center intervals\n\n\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n} //User friendly wrapper that makes it possible to support empty trees\n\n\nfunction IntervalTree(root) {\n  this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\n\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n\n    if (r === EMPTY) {\n      this.root = null;\n    }\n\n    return r !== NOT_FOUND;\n  }\n\n  return false;\n};\n\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\n\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\n\nObject.defineProperty(tproto, 'count', {\n  get: function get() {\n    if (this.root) {\n      return this.root.count;\n    }\n\n    return 0;\n  }\n});\nObject.defineProperty(tproto, 'intervals', {\n  get: function get() {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n\n    return [];\n  }\n});\nexport default function createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n\n  return new IntervalTree(createIntervalTree(intervals));\n}","import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport createIntervalTree from '../vendor/intervalTree';\n\n// Position cache requirements:\n//   O(log(n)) lookup of cells to render for a given viewport size\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\nvar PositionCache =\n/*#__PURE__*/\nfunction () {\n  function PositionCache() {\n    _classCallCheck(this, PositionCache);\n\n    _defineProperty(this, \"_columnSizeMap\", {});\n\n    _defineProperty(this, \"_intervalTree\", createIntervalTree());\n\n    _defineProperty(this, \"_leftMap\", {});\n  }\n\n  _createClass(PositionCache, [{\n    key: \"estimateTotalHeight\",\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\n      var unmeasuredCellCount = cellCount - this.count;\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\n    } // Render all cells visible within the viewport range defined.\n\n  }, {\n    key: \"range\",\n    value: function range(scrollTop, clientHeight, renderCallback) {\n      var _this = this;\n\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            top = _ref2[0],\n            _ = _ref2[1],\n            index = _ref2[2];\n\n        return renderCallback(index, _this._leftMap[index], top);\n      });\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(index, left, top, height) {\n      this._intervalTree.insert([top, top + height, index]);\n\n      this._leftMap[index] = left;\n      var columnSizeMap = this._columnSizeMap;\n      var columnHeight = columnSizeMap[left];\n\n      if (columnHeight === undefined) {\n        columnSizeMap[left] = top + height;\n      } else {\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\n      }\n    }\n  }, {\n    key: \"count\",\n    get: function get() {\n      return this._intervalTree.count;\n    }\n  }, {\n    key: \"shortestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = size === 0 ? height : Math.min(size, height);\n      }\n\n      return size;\n    }\n  }, {\n    key: \"tallestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = Math.max(size, height);\n      }\n\n      return size;\n    }\n  }]);\n\n  return PositionCache;\n}();\n\nexport { PositionCache as default };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\nvar emptyObject = {};\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  function Masonry() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Masonry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Masonry)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStartIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionCache\", new PositionCache());\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingCallback\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.currentTarget.scrollTop; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop); // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n\n      if (eventScrollTop !== scrollTop) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._debounceResetIsScrolling(); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Masonry, [{\n    key: \"clearCellPositions\",\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    } // HACK This method signature was intended for Grid\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref) {\n      var index = _ref.rowIndex;\n\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: \"recomputeCellPositions\",\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n\n      this._populatePositionCache(0, stopIndex);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          cellCount = _this$props.cellCount,\n          cellMeasurerCache = _this$props.cellMeasurerCache,\n          cellRenderer = _this$props.cellRenderer,\n          className = _this$props.className,\n          height = _this$props.height,\n          id = _this$props.id,\n          keyMapper = _this$props.keyMapper,\n          overscanByPixels = _this$props.overscanByPixels,\n          role = _this$props.role,\n          style = _this$props.style,\n          tabIndex = _this$props.tabIndex,\n          width = _this$props.width,\n          rowDirection = _this$props.rowDirection;\n      var _this$state = this.state,\n          isScrolling = _this$state.isScrolling,\n          scrollTop = _this$state.scrollTop;\n      var children = [];\n\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex;\n\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, \"position\", 'absolute'), _defineProperty(_style, \"top\", top), _defineProperty(_style, \"width\", cellMeasurerCache.getWidth(index)), _style)\n        }));\n      }); // We need to measure additional cells for this layout\n\n\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, React.createElement(\"div\", {\n        className: \"ReactVirtualized__Masonry__innerScrollContainer\",\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: \"_checkInvalidateOnUpdate\",\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var startIndex = this._invalidateOnUpdateStartIndex;\n        var stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null; // Query external layout logic for position of newly-measured cells\n\n        this._populatePositionCache(startIndex, stopIndex);\n\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"_debounceResetIsScrolling\",\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_getEstimatedTotalHeight\",\n    value: function _getEstimatedTotalHeight() {\n      var _this$props2 = this.props,\n          cellCount = _this$props2.cellCount,\n          cellMeasurerCache = _this$props2.cellMeasurerCache,\n          width = _this$props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: \"_invokeOnScrollCallback\",\n    value: function _invokeOnScrollCallback() {\n      var _this$props3 = this.props,\n          height = _this$props3.height,\n          onScroll = _this$props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: \"_invokeOnCellsRenderedCallback\",\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var onCellsRendered = this.props.onCellsRendered;\n        onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: \"_populatePositionCache\",\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _this$props4 = this.props,\n          cellMeasurerCache = _this$props4.cellMeasurerCache,\n          cellPositioner = _this$props4.cellPositioner;\n\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n            left = _cellPositioner.left,\n            top = _cellPositioner.top;\n\n        this._positionCache.setPosition(_index2, left, top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"autoHeight\": PropTypes.bool.isRequired,\n  \"cellCount\": PropTypes.number.isRequired,\n  \"cellMeasurerCache\": function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === \"function\" ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellPositioner\": function cellPositioner() {\n    return (typeof Positioner === \"function\" ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof CellRenderer === \"function\" ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"className\": PropTypes.string,\n  \"height\": PropTypes.number.isRequired,\n  \"id\": PropTypes.string,\n  \"keyMapper\": function keyMapper() {\n    return (typeof KeyMapper === \"function\" ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"onCellsRendered\": function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === \"function\" ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"onScroll\": function onScroll() {\n    return (typeof OnScrollCallback === \"function\" ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"overscanByPixels\": PropTypes.number.isRequired,\n  \"role\": PropTypes.string.isRequired,\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n  \"style\": function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  },\n  \"tabIndex\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"rowDirection\": PropTypes.string.isRequired,\n  \"scrollTop\": PropTypes.number\n}), _temp);\n\n_defineProperty(Masonry, \"defaultProps\", {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n});\n\nfunction identity(value) {\n  return value;\n}\n\nfunction noop() {}\n\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  \"defaultHeight\": PropTypes.number.isRequired,\n  \"defaultWidth\": PropTypes.number.isRequired,\n  \"getHeight\": PropTypes.func.isRequired,\n  \"getWidth\": PropTypes.func.isRequired\n};\npolyfill(Masonry);\nexport default Masonry;\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };","import createCellPositioner from './createCellPositioner';\nimport Masonry from './Masonry';\nexport default Masonry;\nexport { createCellPositioner, Masonry };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { CellMeasurerCache } from '../CellMeasurer';\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    _defineProperty(this, \"_cellMeasurerCache\", void 0);\n\n    _defineProperty(this, \"_columnIndexOffset\", void 0);\n\n    _defineProperty(this, \"_rowIndexOffset\", void 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport { CellMeasurerCacheDecorator as default };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    _classCallCheck(this, MultiGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiGrid).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = _objectWithoutProperties(_ref, [\"rowIndex\"]);\n\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: _assertThisInitialized(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = _objectWithoutProperties(_ref2, [\"columnIndex\", \"rowIndex\"]);\n\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _assertThisInitialized(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = _objectWithoutProperties(_ref3, [\"columnIndex\"]);\n\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: _assertThisInitialized(_this)\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = _objectWithoutProperties(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\n_defineProperty(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * HOC that simplifies the process of synchronizing scrolling between two or more virtualized components.\n */\n\nvar ScrollSync =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ScrollSync, _React$PureComponent);\n\n  function ScrollSync(props, context) {\n    var _this;\n\n    _classCallCheck(this, ScrollSync);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollSync).call(this, props, context));\n    _this.state = {\n      clientHeight: 0,\n      clientWidth: 0,\n      scrollHeight: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollWidth: 0\n    };\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ScrollSync, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state = this.state,\n          clientHeight = _this$state.clientHeight,\n          clientWidth = _this$state.clientWidth,\n          scrollHeight = _this$state.scrollHeight,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop,\n          scrollWidth = _this$state.scrollWidth;\n      return children({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        onScroll: this._onScroll,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref) {\n      var clientHeight = _ref.clientHeight,\n          clientWidth = _ref.clientWidth,\n          scrollHeight = _ref.scrollHeight,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          scrollWidth = _ref.scrollWidth;\n      this.setState({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }]);\n\n  return ScrollSync;\n}(React.PureComponent);\n\nexport { ScrollSync as default };\nScrollSync.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering 2 or more virtualized components.\n   * This function should implement the following signature:\n   * ({ onScroll, scrollLeft, scrollTop }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired\n} : {};","import * as React from 'react';\nexport default function defaultHeaderRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      style = _ref.style;\n  return React.createElement(\"div\", {\n    className: className,\n    role: \"row\",\n    style: style\n  }, columns);\n}\ndefaultHeaderRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRowRendererParams;\nimport { bpfrpt_proptype_HeaderRowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","var SortDirection = {\n  /**\n   * Sort items in ascending order.\n   * This means arranging from the lowest value to the highest (e.g. a-z, 0-9).\n   */\n  ASC: 'ASC',\n\n  /**\n   * Sort items in descending order.\n   * This means arranging from the highest value to the lowest (e.g. z-a, 9-0).\n   */\n  DESC: 'DESC'\n};\nexport default SortDirection;","import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport SortDirection from './SortDirection';\n/**\n * Displayed beside a header to indicate that a Table is currently sorted by this column.\n */\n\nexport default function SortIndicator(_ref) {\n  var sortDirection = _ref.sortDirection;\n  var classNames = clsx('ReactVirtualized__Table__sortableHeaderIcon', {\n    'ReactVirtualized__Table__sortableHeaderIcon--ASC': sortDirection === SortDirection.ASC,\n    'ReactVirtualized__Table__sortableHeaderIcon--DESC': sortDirection === SortDirection.DESC\n  });\n  return React.createElement(\"svg\", {\n    className: classNames,\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 24 24\"\n  }, sortDirection === SortDirection.ASC ? React.createElement(\"path\", {\n    d: \"M7 14l5-5 5 5z\"\n  }) : React.createElement(\"path\", {\n    d: \"M7 10l5 5 5-5z\"\n  }), React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }));\n}\nSortIndicator.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC])\n} : {};","import * as React from 'react';\nimport SortIndicator from './SortIndicator';\n\n/**\n * Default table header renderer.\n */\nexport default function defaultHeaderRenderer(_ref) {\n  var dataKey = _ref.dataKey,\n      label = _ref.label,\n      sortBy = _ref.sortBy,\n      sortDirection = _ref.sortDirection;\n  var showSortIndicator = sortBy === dataKey;\n  var children = [React.createElement(\"span\", {\n    className: \"ReactVirtualized__Table__headerTruncatedText\",\n    key: \"label\",\n    title: typeof label === 'string' ? label : null\n  }, label)];\n\n  if (showSortIndicator) {\n    children.push(React.createElement(SortIndicator, {\n      key: \"SortIndicator\",\n      sortDirection: sortDirection\n    }));\n  }\n\n  return children;\n}\ndefaultHeaderRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRendererParams;\nimport { bpfrpt_proptype_HeaderRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\n\n/**\n * Default row renderer for Table.\n */\nexport default function defaultRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      index = _ref.index,\n      key = _ref.key,\n      onRowClick = _ref.onRowClick,\n      onRowDoubleClick = _ref.onRowDoubleClick,\n      onRowMouseOut = _ref.onRowMouseOut,\n      onRowMouseOver = _ref.onRowMouseOver,\n      onRowRightClick = _ref.onRowRightClick,\n      rowData = _ref.rowData,\n      style = _ref.style;\n  var a11yProps = {\n    'aria-rowindex': index + 1\n  };\n\n  if (onRowClick || onRowDoubleClick || onRowMouseOut || onRowMouseOver || onRowRightClick) {\n    a11yProps['aria-label'] = 'row';\n    a11yProps.tabIndex = 0;\n\n    if (onRowClick) {\n      a11yProps.onClick = function (event) {\n        return onRowClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowDoubleClick) {\n      a11yProps.onDoubleClick = function (event) {\n        return onRowDoubleClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOut) {\n      a11yProps.onMouseOut = function (event) {\n        return onRowMouseOut({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOver) {\n      a11yProps.onMouseOver = function (event) {\n        return onRowMouseOver({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowRightClick) {\n      a11yProps.onContextMenu = function (event) {\n        return onRowRightClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n  }\n\n  return React.createElement(\"div\", _extends({}, a11yProps, {\n    className: className,\n    key: key,\n    role: \"row\",\n    style: style\n  }), columns);\n}\ndefaultRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_RowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_RowRendererParams;\nimport { bpfrpt_proptype_RowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport SortDirection from './SortDirection';\n/**\n * Describes the header and cell contents of a table column.\n */\n\nvar Column =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Column, _React$Component);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Column).apply(this, arguments));\n  }\n\n  return Column;\n}(React.Component);\n\n_defineProperty(Column, \"defaultProps\", {\n  cellDataGetter: defaultCellDataGetter,\n  cellRenderer: defaultCellRenderer,\n  defaultSortDirection: SortDirection.ASC,\n  flexGrow: 0,\n  flexShrink: 1,\n  headerRenderer: defaultHeaderRenderer,\n  style: {}\n});\n\nexport { Column as default };\nColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Optional aria-label value to set on the column header */\n  'aria-label': PropTypes.string,\n\n  /**\n   * Callback responsible for returning a cell's data, given its :dataKey\n   * ({ columnData: any, dataKey: string, rowData: any }): any\n   */\n  cellDataGetter: PropTypes.func,\n\n  /**\n   * Callback responsible for rendering a cell's contents.\n   * ({ cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number }): node\n   */\n  cellRenderer: PropTypes.func,\n\n  /** Optional CSS class to apply to cell */\n  className: PropTypes.string,\n\n  /** Optional additional data passed to this column's :cellDataGetter */\n  columnData: PropTypes.object,\n\n  /** Uniquely identifies the row-data attribute corresponding to this cell */\n  dataKey: PropTypes.any.isRequired,\n\n  /** Optional direction to be used when clicked the first time */\n  defaultSortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** If sort is enabled for the table at large, disable it for this column */\n  disableSort: PropTypes.bool,\n\n  /** Flex grow style; defaults to 0 */\n  flexGrow: PropTypes.number,\n\n  /** Flex shrink style; defaults to 1 */\n  flexShrink: PropTypes.number,\n\n  /** Optional CSS class to apply to this column's header */\n  headerClassName: PropTypes.string,\n\n  /**\n   * Optional callback responsible for rendering a column header contents.\n   * ({ columnData: object, dataKey: string, disableSort: boolean, label: node, sortBy: string, sortDirection: string }): PropTypes.node\n   */\n  headerRenderer: PropTypes.func.isRequired,\n\n  /** Optional inline style to apply to this column's header */\n  headerStyle: PropTypes.object,\n\n  /** Optional id to set on the column header */\n  id: PropTypes.string,\n\n  /** Header label for this column */\n  label: PropTypes.node,\n\n  /** Maximum width of column; this property will only be used if :flexGrow is > 0. */\n  maxWidth: PropTypes.number,\n\n  /** Minimum width of column. */\n  minWidth: PropTypes.number,\n\n  /** Optional inline style to apply to cell */\n  style: PropTypes.object,\n\n  /** Flex basis (width) for this column; This value can grow or shrink based on :flexGrow and :flexShrink properties. */\n  width: PropTypes.number.isRequired\n} : {};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_assertThisInitialized(_this));\n    _this._createRow = _this._createRow.bind(_assertThisInitialized(_this));\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    _this._onSectionRendered = _this._onSectionRendered.bind(_assertThisInitialized(_this));\n    _this._setRef = _this._setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === void 0 ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === void 0 ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"getScrollbarWidth\",\n    value: function getScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          disableHeader = _this$props.disableHeader,\n          gridClassName = _this$props.gridClassName,\n          gridStyle = _this$props.gridStyle,\n          headerHeight = _this$props.headerHeight,\n          headerRowRenderer = _this$props.headerRowRenderer,\n          height = _this$props.height,\n          id = _this$props.id,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          rowClassName = _this$props.rowClassName,\n          rowStyle = _this$props.rowStyle,\n          scrollToIndex = _this$props.scrollToIndex,\n          style = _this$props.style,\n          width = _this$props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle; // Precompute and cache column styles before rendering rows and columns to speed things up\n\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _objectSpread({\n          overflow: 'hidden'\n        }, flexStyles);\n      }); // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n\n      return React.createElement(\"div\", {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-labelledby\": this.props['aria-labelledby'],\n        \"aria-colcount\": React.Children.toArray(children).length,\n        \"aria-rowcount\": this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: \"grid\",\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _objectSpread({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), React.createElement(Grid, _extends({}, this.props, {\n        \"aria-readonly\": null,\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: \"rowgroup\",\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _objectSpread({}, gridStyle, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: \"_createColumn\",\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null; // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement(\"div\", {\n        \"aria-colindex\": columnIndex + 1,\n        \"aria-describedby\": id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: \"gridcell\",\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: \"_createHeader\",\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _this$props2 = this.props,\n          headerClassName = _this$props2.headerClassName,\n          headerStyle = _this$props2.headerStyle,\n          onHeaderClick = _this$props2.onHeaderClick,\n          sort = _this$props2.sort,\n          sortBy = _this$props2.sortBy,\n          sortDirection = _this$props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n\n      var style = this._getFlexStyleForColumn(column, _objectSpread({}, headerStyle, {}, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick, headerOnKeyDown, headerTabIndex, headerAriaSort, headerAriaLabel;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey; // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      } // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n\n      return React.createElement(\"div\", {\n        \"aria-label\": headerAriaLabel,\n        \"aria-sort\": headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: \"columnheader\",\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: \"_createRow\",\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          onRowClick = _this$props3.onRowClick,\n          onRowDoubleClick = _this$props3.onRowDoubleClick,\n          onRowRightClick = _this$props3.onRowRightClick,\n          onRowMouseOver = _this$props3.onRowMouseOver,\n          onRowMouseOut = _this$props3.onRowMouseOut,\n          rowClassName = _this$props3.rowClassName,\n          rowGetter = _this$props3.rowGetter,\n          rowRenderer = _this$props3.rowRenderer,\n          rowStyle = _this$props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n\n      var flattenedStyle = _objectSpread({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: \"_getFlexStyleForColumn\",\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = \"\".concat(column.props.flexGrow, \" \").concat(column.props.flexShrink, \" \").concat(column.props.width, \"px\");\n\n      var style = _objectSpread({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"_getHeaderColumns\",\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          disableHeader = _this$props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: \"_getRowHeight\",\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: \"_onSectionRendered\",\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: \"_setRef\",\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: \"_setScrollbarWidth\",\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n      this.setState({\n        scrollbarWidth: scrollbarWidth\n      });\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\n_defineProperty(Table, \"defaultProps\", {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { Table as default };\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";","/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\nimport { bpfrpt_proptype_CellDataGetterParams } from \"./types\";","/**\n * Default cell renderer that displays an attribute as a simple string\n * You should override the column's cellRenderer if your data is some other type of object.\n */\nexport default function defaultCellRenderer(_ref) {\n  var cellData = _ref.cellData;\n\n  if (cellData == null) {\n    return '';\n  } else {\n    return String(cellData);\n  }\n}\nimport { bpfrpt_proptype_CellRendererParams } from \"./types\";","import createMultiSort from './createMultiSort';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer.js';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport Column from './Column';\nimport SortDirection from './SortDirection';\nimport SortIndicator from './SortIndicator';\nimport Table from './Table';\nexport default Table;\nexport { createMultiSort, defaultCellDataGetter, defaultCellRenderer, defaultHeaderRowRenderer, defaultHeaderRenderer, defaultRowRenderer, Column, SortDirection, SortIndicator, Table };","import { requestAnimationTimeout, cancelAnimationTimeout } from '../../utils/requestAnimationTimeout';\nvar mountedInstances = [];\nvar originalBodyPointerEvents = null;\nvar disablePointerEventsTimeoutId = null;\n\nfunction enablePointerEventsIfDisabled() {\n  if (disablePointerEventsTimeoutId) {\n    disablePointerEventsTimeoutId = null;\n\n    if (document.body && originalBodyPointerEvents != null) {\n      document.body.style.pointerEvents = originalBodyPointerEvents;\n    }\n\n    originalBodyPointerEvents = null;\n  }\n}\n\nfunction enablePointerEventsAfterDelayCallback() {\n  enablePointerEventsIfDisabled();\n  mountedInstances.forEach(function (instance) {\n    return instance.__resetIsScrolling();\n  });\n}\n\nfunction enablePointerEventsAfterDelay() {\n  if (disablePointerEventsTimeoutId) {\n    cancelAnimationTimeout(disablePointerEventsTimeoutId);\n  }\n\n  var maximumTimeout = 0;\n  mountedInstances.forEach(function (instance) {\n    maximumTimeout = Math.max(maximumTimeout, instance.props.scrollingResetTimeInterval);\n  });\n  disablePointerEventsTimeoutId = requestAnimationTimeout(enablePointerEventsAfterDelayCallback, maximumTimeout);\n}\n\nfunction onScrollWindow(event) {\n  if (event.currentTarget === window && originalBodyPointerEvents == null && document.body) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    document.body.style.pointerEvents = 'none';\n  }\n\n  enablePointerEventsAfterDelay();\n  mountedInstances.forEach(function (instance) {\n    if (instance.props.scrollElement === event.currentTarget) {\n      instance.__handleWindowScrollEvent();\n    }\n  });\n}\n\nexport function registerScrollListener(component, element) {\n  if (!mountedInstances.some(function (instance) {\n    return instance.props.scrollElement === element;\n  })) {\n    element.addEventListener('scroll', onScrollWindow);\n  }\n\n  mountedInstances.push(component);\n}\nexport function unregisterScrollListener(component, element) {\n  mountedInstances = mountedInstances.filter(function (instance) {\n    return instance !== component;\n  });\n\n  if (!mountedInstances.length) {\n    element.removeEventListener('scroll', onScrollWindow);\n\n    if (disablePointerEventsTimeoutId) {\n      cancelAnimationTimeout(disablePointerEventsTimeoutId);\n      enablePointerEventsIfDisabled();\n    }\n  }\n}\nimport { bpfrpt_proptype_WindowScroller } from \"../WindowScroller.js\";","/**\n * Gets the dimensions of the element, accounting for API differences between\n * `window` and other DOM elements.\n */\n// TODO Move this into WindowScroller and import from there\nvar isWindow = function isWindow(element) {\n  return element === window;\n};\n\nvar getBoundingBox = function getBoundingBox(element) {\n  return element.getBoundingClientRect();\n};\n\nexport function getDimensions(scrollElement, props) {\n  if (!scrollElement) {\n    return {\n      height: props.serverHeight,\n      width: props.serverWidth\n    };\n  } else if (isWindow(scrollElement)) {\n    var _window = window,\n        innerHeight = _window.innerHeight,\n        innerWidth = _window.innerWidth;\n    return {\n      height: typeof innerHeight === 'number' ? innerHeight : 0,\n      width: typeof innerWidth === 'number' ? innerWidth : 0\n    };\n  } else {\n    return getBoundingBox(scrollElement);\n  }\n}\n/**\n * Gets the vertical and horizontal position of an element within its scroll container.\n * Elements that have been “scrolled past” return negative values.\n * Handles edge-case where a user is navigating back (history) from an already-scrolled page.\n * In this case the body’s top or left position will be a negative number and this element’s top or left will be increased (by that amount).\n */\n\nexport function getPositionOffset(element, container) {\n  if (isWindow(container) && document.documentElement) {\n    var containerElement = document.documentElement;\n    var elementRect = getBoundingBox(element);\n    var containerRect = getBoundingBox(containerElement);\n    return {\n      top: elementRect.top - containerRect.top,\n      left: elementRect.left - containerRect.left\n    };\n  } else {\n    var scrollOffset = getScrollOffset(container);\n\n    var _elementRect = getBoundingBox(element);\n\n    var _containerRect = getBoundingBox(container);\n\n    return {\n      top: _elementRect.top + scrollOffset.top - _containerRect.top,\n      left: _elementRect.left + scrollOffset.left - _containerRect.left\n    };\n  }\n}\n/**\n * Gets the vertical and horizontal scroll amount of the element, accounting for IE compatibility\n * and API differences between `window` and other DOM elements.\n */\n\nexport function getScrollOffset(element) {\n  if (isWindow(element) && document.documentElement) {\n    return {\n      top: 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop,\n      left: 'scrollX' in window ? window.scrollX : document.documentElement.scrollLeft\n    };\n  } else {\n    return {\n      top: element.scrollTop,\n      left: element.scrollLeft\n    };\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { registerScrollListener, unregisterScrollListener } from './utils/onScroll';\nimport { getDimensions, getPositionOffset, getScrollOffset } from './utils/dimensions';\nimport createDetectElementResize from '../vendor/detectElementResize';\n\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var IS_SCROLLING_TIMEOUT = 150;\n\nvar getWindow = function getWindow() {\n  return typeof window !== 'undefined' ? window : undefined;\n};\n\nvar WindowScroller = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(WindowScroller, _React$PureComponent);\n\n  function WindowScroller() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WindowScroller);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WindowScroller)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", getWindow());\n\n    _defineProperty(_assertThisInitialized(_this), \"_isMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromTop\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromLeft\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", _objectSpread({}, getDimensions(_this.props.scrollElement, _this.props), {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('WindowScroller registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onChildScroll\", function (_ref) {\n      var scrollTop = _ref.scrollTop;\n\n      if (_this.state.scrollTop === scrollTop) {\n        return;\n      }\n\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        if (typeof scrollElement.scrollTo === 'function') {\n          scrollElement.scrollTo(0, scrollTop + _this._positionFromTop);\n        } else {\n          scrollElement.scrollTop = scrollTop + _this._positionFromTop;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerResizeListener\", function (element) {\n      if (element === window) {\n        window.addEventListener('resize', _this._onResize, false);\n      } else {\n        _this._detectElementResize.addResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_unregisterResizeListener\", function (element) {\n      if (element === window) {\n        window.removeEventListener('resize', _this._onResize, false);\n      } else if (element) {\n        _this._detectElementResize.removeResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__handleWindowScrollEvent\", function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var onScroll = _this.props.onScroll;\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        var scrollOffset = getScrollOffset(scrollElement);\n        var scrollLeft = Math.max(0, scrollOffset.left - _this._positionFromLeft);\n        var scrollTop = Math.max(0, scrollOffset.top - _this._positionFromTop);\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        onScroll({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__resetIsScrolling\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(WindowScroller, [{\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var scrollElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.scrollElement;\n      var onResize = this.props.onResize;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width;\n      var thisNode = this._child || ReactDOM.findDOMNode(this);\n\n      if (thisNode instanceof Element && scrollElement) {\n        var offset = getPositionOffset(thisNode, scrollElement);\n        this._positionFromTop = offset.top;\n        this._positionFromLeft = offset.left;\n      }\n\n      var dimensions = getDimensions(scrollElement, this.props);\n\n      if (height !== dimensions.height || width !== dimensions.width) {\n        this.setState({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n        onResize({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var scrollElement = this.props.scrollElement;\n      this._detectElementResize = createDetectElementResize();\n      this.updatePosition(scrollElement);\n\n      if (scrollElement) {\n        registerScrollListener(this, scrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var scrollElement = this.props.scrollElement;\n      var prevScrollElement = prevProps.scrollElement;\n\n      if (prevScrollElement !== scrollElement && prevScrollElement != null && scrollElement != null) {\n        this.updatePosition(scrollElement);\n        unregisterScrollListener(this, prevScrollElement);\n        registerScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(prevScrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var scrollElement = this.props.scrollElement;\n\n      if (scrollElement) {\n        unregisterScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(scrollElement);\n      }\n\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state2 = this.state,\n          isScrolling = _this$state2.isScrolling,\n          scrollTop = _this$state2.scrollTop,\n          scrollLeft = _this$state2.scrollLeft,\n          height = _this$state2.height,\n          width = _this$state2.width;\n      return children({\n        onChildScroll: this._onChildScroll,\n        registerChild: this._registerChild,\n        height: height,\n        isScrolling: isScrolling,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        width: width\n      });\n    }\n  }]);\n\n  return WindowScroller;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /**\n   * Function responsible for rendering children.\n   * This function should implement the following signature:\n   * ({ height, isScrolling, scrollLeft, scrollTop, width }) => PropTypes.element\n   */\n  \"children\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-resize: ({ height, width }) */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-scroll: ({ scrollLeft, scrollTop }) */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** Element to attach scroll event listeners. Defaults to window. */\n  \"scrollElement\": PropTypes.oneOfType([PropTypes.any, function () {\n    return (typeof Element === \"function\" ? PropTypes.instanceOf(Element) : PropTypes.any).apply(this, arguments);\n  }]),\n\n  /**\n   * Wait this amount of time after the last scroll event before resetting child `pointer-events`.\n   */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Height used for server-side rendering */\n  \"serverHeight\": PropTypes.number.isRequired,\n\n  /** Width used for server-side rendering */\n  \"serverWidth\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(WindowScroller, \"defaultProps\", {\n  onResize: function onResize() {},\n  onScroll: function onScroll() {},\n  scrollingResetTimeInterval: IS_SCROLLING_TIMEOUT,\n  scrollElement: getWindow(),\n  serverHeight: 0,\n  serverWidth: 0\n});\n\nexport { WindowScroller as default };\nimport PropTypes from \"prop-types\";","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;"],"sourceRoot":""}