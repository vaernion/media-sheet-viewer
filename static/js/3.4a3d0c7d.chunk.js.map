{"version":3,"sources":["components/FilmList/FieldHeader.jsx","components/FilmList/FilmListItem.jsx","components/FilmList/SearchForm.jsx","components/FilmList/index.jsx"],"names":["FieldHeader","props","active","sort","sortBy","field","arrow","sortReverse","className","onClick","onclick","label","FilmListItem","film","to","id","title","year","director","map","name","key","genre","franchise","SearchForm","type","placeholder","onChange","e","currentTarget","value","length","FilmList","context","React","MediaContext","setSortBy","setSortReverse","searchField","setSearchField","sortedFilms","setSortedFilms","document","films","filmsSorted","titleDesc","titleAsc","yearDesc","yearAsc","directorDesc","directorAsc","franchiseDesc","franchiseAsc","handleSort","toLowerCase","startsWith","filter","findIndex","includes","replace","toString","filterFilms","store","count","dispatch"],"mappings":"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","file":"static/js/3.4a3d0c7d.chunk.js","sourcesContent":["import * as React from \"react\";\n\nexport function FieldHeader(props) {\n  let active = props.sort.sortBy === props.field ? \"*\" : null;\n  let arrow = active ? (props.sort.sortReverse ? \"desc\" : \"asc\") : null;\n\n  return (\n    <>\n      <span\n        className={\"film-\" + props.field + (active ? \" active\" : \"\")}\n        onClick={props.onclick ? () => props.onclick(props.field) : null}\n      >\n        {props.label} {active} {arrow}\n      </span>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./filmsList.css\";\n\nexport function FilmListItem(props) {\n  const film = props.film;\n  return (\n    <>\n      <div className=\"filmListItem\">\n        <span className=\"filmTitle\">\n          <Link to={`films/${film.id}`}>\n            {film.id}--{film.title}\n          </Link>\n        </span>\n        <span className=\"filmYear\">{film.year}</span>\n        <span className=\"filmDirector\">\n          {film.director.map((name) => (\n            <span key={name} className=\"filmDirectorName\">\n              {name}\n            </span>\n          ))}\n        </span>\n        <span className=\"filmGenre\">\n          {film.genre.map((name) => (\n            <span key={name} className=\"filmGenreName\">\n              {name}\n            </span>\n          ))}\n        </span>\n        <span className=\"filmFranchise\">{film.franchise}</span>\n      </div>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport \"./searchForm.css\";\n\nexport function SearchForm(props) {\n  const handleChange = (e) => {\n    if (\n      e.currentTarget.value.length >= 2 ||\n      e.currentTarget.value.length === 0\n    ) {\n      props.onChange(e.currentTarget.value);\n    }\n  };\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        placeholder=\"examples: star wars | g:drama | hitchcock | y:2010\"\n        onChange={handleChange}\n      />\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { MediaContext } from \"../Store\";\nimport { FieldHeader } from \"./FieldHeader\";\nimport { FilmListItem } from \"./FilmListItem\";\nimport \"./filmsList.css\";\nimport { SearchForm } from \"./SearchForm\";\n\nexport default function FilmList() {\n  const context = React.useContext(MediaContext);\n\n  const [sortBy, setSortBy] = React.useState(\"sortTitle\");\n  const [sortReverse, setSortReverse] = React.useState(false);\n  const [searchField, setSearchField] = React.useState(\"\");\n  const [sortedFilms, setSortedFilms] = React.useState(null);\n\n  document.title = `${context.films.length} Films - MediaSheetViewer`;\n\n  React.useEffect(() => {\n    setSortedFilms(\n      (() => {\n        const sort = context.filmsSorted;\n        switch (sortBy) {\n          case \"sortTitle\":\n            return sortReverse ? sort.titleDesc : sort.titleAsc;\n          case \"year\":\n            return sortReverse ? sort.yearDesc : sort.yearAsc;\n          case \"director\":\n            return sortReverse ? sort.directorDesc : sort.directorAsc;\n          case \"franchise\":\n            return sortReverse ? sort.franchiseDesc : sort.franchiseAsc;\n          default:\n            return context.films;\n        }\n      })()\n    );\n  }, [sortBy, sortReverse, context.films, context.filmsSorted]);\n\n  const handleSort = (field) => {\n    if (field === sortBy) setSortReverse(!sortReverse);\n    else {\n      setSortReverse(false);\n      setSortBy(field);\n    }\n  };\n\n  const filterFilms = (sortedFilms, searchField) => {\n    if (searchField.toLowerCase().startsWith(\"g:\")) {\n      return sortedFilms.filter(\n        (film) =>\n          film.genre.findIndex((genre) =>\n            genre\n              .toLowerCase()\n              .includes(searchField.toLowerCase().replace(\"g:\", \"\"))\n          ) !== -1\n      );\n    } else if (searchField.toLowerCase().startsWith(\"y:\")) {\n      return sortedFilms.filter(\n        (film) => film.year.toString() === searchField.replace(\"y:\", \"\")\n      );\n    } else {\n      return sortedFilms.filter(\n        (film) =>\n          film.title.toLowerCase().includes(searchField.toLowerCase()) ||\n          film.director.findIndex((director) =>\n            director.toLowerCase().includes(searchField.toLowerCase())\n          ) !== -1\n      );\n    }\n  };\n\n  if (!sortedFilms) return null;\n\n  const films = (() => {\n    if (searchField.length > 2) {\n      return filterFilms(sortedFilms, searchField);\n    } else {\n      return sortedFilms;\n    }\n  })();\n\n  return (\n    <>\n      <SearchForm onChange={setSearchField} />\n      {\"  \"}\n      count: {context.store.count}\n      <button onClick={() => context.dispatch({ type: \"increment\" })}>+</button>\n      <button onClick={() => context.dispatch({ type: \"decrement\" })}>-</button>\n      <div className=\"fieldHeaders\">\n        <FieldHeader\n          field=\"sortTitle\"\n          label=\"Title\"\n          onclick={handleSort}\n          sort={{ sortBy, sortReverse }}\n        />\n        <FieldHeader\n          field=\"year\"\n          label=\"Year\"\n          onclick={handleSort}\n          sort={{ sortBy, sortReverse }}\n        />\n        <FieldHeader\n          field=\"director\"\n          label=\"Director\"\n          onclick={handleSort}\n          sort={{ sortBy, sortReverse }}\n        />\n        <FieldHeader\n          field=\"genre\"\n          label=\"Genre\"\n          onclick={handleSort}\n          sort={{ sortBy, sortReverse }}\n        />\n        <FieldHeader\n          field=\"franchise\"\n          label=\"Franchise\"\n          onclick={handleSort}\n          sort={{ sortBy, sortReverse }}\n        />\n      </div>\n      <div>\n        {films\n          // .filter((e) => e.id > 0 && e.id < 200)\n          .map((film) => (\n            <FilmListItem key={film.id} film={film} />\n          ))}\n      </div>\n    </>\n  );\n}\n"],"sourceRoot":""}