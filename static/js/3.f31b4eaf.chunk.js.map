{"version":3,"sources":["utils/utilities.js","components/SearchForm/index.jsx","hooks/useDebounceEffect.js","components/FieldHeader/index.jsx","components/FilmList/FilmListItems.jsx","components/FilmList/index.jsx"],"names":["normalize","str","replace","toLowerCase","SearchForm","value","setValue","placeholder","React","state","setState","callback","delay","dependencies","memoized","useCallback","useEffect","debounce","setTimeout","clearTimeout","useDebounceEffect","type","onChange","e","currentTarget","onClick","FieldHeader","props","active","sort","sortBy","field","arrow","isSortReverse","className","style","width","onclick","undefined","label","FilmListItems","film","to","id","title","setSearchField","year","director","map","name","i","key","genre","franchise","FilmList","context","MediaContext","setSortBy","setIsSortReverse","searchField","filmsSortedLocal","setFilmsSortedLocal","filmsFiltered","setFilmsFiltered","document","films","length","sorted","filmsSorted","titleDesc","titleAsc","yearDesc","yearAsc","directorDesc","directorAsc","franchiseDesc","franchiseAsc","filterFilms","handleSort","sortedFilms","searchStr","startsWith","filter","findIndex","includes","toString"],"mappings":"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","file":"static/js/3.f31b4eaf.chunk.js","sourcesContent":["export const normalize = (str) => {\n  return str\n    .normalize(\"NFD\")\n    .replace(/[^\\w\\s.-_/]/g, \"\")\n    .toLowerCase();\n};\n","import * as React from \"react\";\nimport { useDebounceEffect } from \"../../hooks/useDebounceEffect\";\nimport \"./searchForm.css\";\n\nexport function SearchForm({ value, setValue, placeholder }) {\n  const [state, setState] = React.useState(value);\n\n  React.useEffect(() => {\n    setState(value);\n  }, [value]);\n\n  useDebounceEffect(\n    () => {\n      setValue(state);\n    },\n    500,\n    [state]\n  );\n\n  const handleClear = () => {\n    setState(\"\");\n  };\n\n  return (\n    <>\n      <div>\n        <input\n          type=\"text\"\n          placeholder={placeholder}\n          value={state}\n          onChange={(e) => setState(e.currentTarget.value)}\n        />\n        <button onClick={handleClear}>Clear</button>\n      </div>\n    </>\n  );\n}\n","import { useCallback, useEffect } from \"react\";\n\n/**\n * Fire callback when dependencies stay unchanged for duration of delay.\n * @link https://stackoverflow.com/a/61127960\n * @export\n * @param {function} callback\n * @param {number} delay Milliseconds\n * @param {any[]} dependencies\n */\nexport function useDebounceEffect(callback, delay, dependencies) {\n  const memoized = useCallback(callback, dependencies);\n\n  useEffect(() => {\n    const debounce = setTimeout(() => memoized(), delay);\n\n    return () => clearTimeout(debounce);\n  }, [memoized, delay]);\n}\n","import * as React from \"react\";\nimport \"./FieldHeader.css\";\n\nexport function FieldHeader(props) {\n  const active = props.sort.sortBy === props.field ? true : false;\n  const arrow = active ? (props.sort.isSortReverse ? \"↑\" : \"↓\") : null;\n\n  return (\n    <>\n      <span className={\"fheader-outer\"} style={{ width: props.width }}>\n        <span\n          className={\n            \"fheader\" +\n            (active ? \" active\" : \"\") +\n            (!props.onclick ? \" no-click\" : \"\")\n          }\n          onClick={props.onclick ? () => props.onclick(props.field) : undefined}\n        >\n          {props.label} {arrow}\n        </span>\n      </span>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./filmsList.css\";\n\nexport function FilmListItems(props) {\n  const film = props.film;\n\n  return (\n    <>\n      <div className=\"list-items\">\n        <span className=\"film-title\">\n          <Link to={`/films/${film.id}`}>{film.title}</Link> (\n          <span\n            className=\"film-year\"\n            onClick={() => props.setSearchField(\"y:\" + film.year)}\n          >\n            {film.year}\n          </span>\n          )\n        </span>\n        <span className=\"film-director\">\n          {film.director.map((name, i) => (\n            <span key={name}>\n              <span>{i > 0 ? \" & \" : null}</span>\n              <Link to={`/directors/${name}`}>{name}</Link>\n            </span>\n          ))}\n        </span>\n        <span className=\"film-genre\">\n          {film.genre.map((name, i) => (\n            <span key={name}>\n              <span>{i > 0 ? \" / \" : null}</span>\n              <span\n                key={name}\n                className=\"genre-name\"\n                onClick={() => props.setSearchField(\"g:\" + name)}\n              >\n                {name}\n              </span>\n            </span>\n          ))}\n        </span>\n        <span className=\"film-franchise\">{film.franchise}</span>\n      </div>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { normalize } from \"../../utils/utilities\";\nimport { FieldHeader } from \"../FieldHeader\";\nimport { SearchForm } from \"../SearchForm\";\nimport { MediaContext } from \"../Store\";\nimport { FilmListItems } from \"./FilmListItems\";\nimport \"./filmsList.css\";\n\nexport default function FilmList() {\n  const context = React.useContext(MediaContext);\n\n  const [sortBy, setSortBy] = React.useState(\"sortTitle\");\n  const [isSortReverse, setIsSortReverse] = React.useState(false);\n  const [searchField, setSearchField] = React.useState(\"\");\n  const [filmsSortedLocal, setFilmsSortedLocal] = React.useState(null);\n  const [filmsFiltered, setFilmsFiltered] = React.useState(null);\n\n  document.title = `${context.films.length} Films - MediaSheetViewer`;\n\n  // keep current sorted films in state\n  React.useEffect(() => {\n    setFilmsSortedLocal(\n      (() => {\n        const sorted = context.filmsSorted;\n        switch (sortBy) {\n          case \"sortTitle\":\n            return isSortReverse ? sorted.titleDesc : sorted.titleAsc;\n          case \"year\":\n            return isSortReverse ? sorted.yearDesc : sorted.yearAsc;\n          case \"director\":\n            return isSortReverse ? sorted.directorDesc : sorted.directorAsc;\n          case \"franchise\":\n            return isSortReverse ? sorted.franchiseDesc : sorted.franchiseAsc;\n          default:\n            return context.films;\n        }\n      })()\n    );\n  }, [sortBy, isSortReverse, context.films, context.filmsSorted]);\n\n  // filter films post-sort and store in state\n  React.useEffect(() => {\n    if (!filmsSortedLocal) return;\n    setFilmsFiltered(filterFilms(filmsSortedLocal, searchField));\n  }, [filmsSortedLocal, searchField]);\n\n  const handleSort = (field) => {\n    if (field === sortBy) {\n      setIsSortReverse(!isSortReverse);\n    } else {\n      setIsSortReverse(false);\n      setSortBy(field);\n    }\n  };\n\n  const filterFilms = (sortedFilms, searchField) => {\n    const searchStr = normalize(searchField);\n\n    if (searchStr.startsWith(\"g:\")) {\n      return sortedFilms.filter(\n        (film) =>\n          film.genre.findIndex((genre) =>\n            normalize(genre).includes(searchStr.replace(\"g:\", \"\"))\n          ) !== -1\n      );\n    } else if (searchStr.startsWith(\"y:\")) {\n      return sortedFilms.filter(\n        (film) => film.year.toString() === searchStr.replace(\"y:\", \"\")\n      );\n    } else {\n      return sortedFilms.filter(\n        (film) =>\n          normalize(film.title).includes(searchStr) ||\n          film.director.findIndex((director) =>\n            normalize(director).includes(searchStr)\n          ) !== -1\n      );\n    }\n  };\n\n  if (!filmsFiltered) return null;\n\n  return (\n    <>\n      <div className=\"films\">\n        <div className=\"films-head\">\n          <SearchForm\n            value={searchField}\n            setValue={setSearchField}\n            placeholder=\"examples: star wars | g:drama | hitchcock | y:2010\"\n          />\n          <div className=\"headers\">\n            <FieldHeader\n              field=\"sortTitle\"\n              label=\"Title\"\n              width=\"20%\"\n              sort={{ sortBy, isSortReverse }}\n              onclick={handleSort}\n            />\n            <FieldHeader\n              field=\"year\"\n              label=\"Year\"\n              width=\"10%\"\n              sort={{ sortBy, isSortReverse }}\n              onclick={handleSort}\n            />\n            <FieldHeader\n              field=\"director\"\n              label=\"Director\"\n              width=\"25%\"\n              sort={{ sortBy, isSortReverse }}\n              onclick={handleSort}\n            />\n            <FieldHeader\n              field=\"genre\"\n              label=\"Genre\"\n              width=\"30%\"\n              sort={{ sortBy, isSortReverse }}\n            />\n            <FieldHeader\n              field=\"franchise\"\n              label=\"Franchise\"\n              width=\"15%\"\n              sort={{ sortBy, isSortReverse }}\n              onclick={handleSort}\n            />\n          </div>\n        </div>\n        <div className=\"films-body\">\n          {filmsFiltered\n            // .filter((e) => e.id > 500 && e.id < 600)\n            .map((film) => (\n              <FilmListItems\n                key={film.id}\n                film={film}\n                setSearchField={setSearchField}\n              />\n            ))}\n        </div>\n      </div>\n    </>\n  );\n}\n"],"sourceRoot":""}