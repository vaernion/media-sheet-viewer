{"version":3,"sources":["components/Spinner/index.jsx","components/Store/index.jsx","components/ErrorBoundary.jsx","components/NotFound.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["Spinner","className","initialState","count","filterFilms","filterTv","filterGames","sortFilms","sortTv","sortGames","sortReverseFilms","sortReverseTv","sortReverseGames","countReducer","state","action","type","storeReducer","payload","Error","DispatchContext","React","StateContext","Store","props","dispatch","Provider","value","children","ErrorBoundary","hasError","error","errorInfo","this","NotFound","location","useLocation","document","title","pathname","style","textAlign","Home","FilmList","TvList","GamesList","DirectorList","MediaDetails","menu","path","exact","name","routes","component","App","basename","map","e","activeClassName","key","to","fallback","route","Boolean","window","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.3e0c3ca6.chunk.js","sourcesContent":["import * as React from \"react\";\nimport \"./spinner.css\";\n\nexport function Spinner() {\n  return (\n    <>\n      <div className=\"spinner\"></div>\n    </>\n  );\n}\n","import * as React from \"react\";\n\nconst initialCount = 0;\nconst initialState = {\n  count: initialCount,\n  filterFilms: \"\",\n  filterTv: \"\",\n  filterGames: \"\",\n  sortFilms: \"sortTitle\",\n  sortTv: \"sortTitle\",\n  sortGames: \"sortTitle\",\n  sortReverseFilms: false,\n  sortReverseTv: false,\n  sortReverseGames: false,\n};\n\nconst countReducer = (state, action) => {\n  switch (action.type) {\n    case \"reset\":\n      return initialCount;\n    case \"increment\":\n      return state + 1;\n    case \"decrement\":\n      return state - 1;\n    default:\n      return state;\n  }\n};\n\nconst storeReducer = (state, action) => {\n  switch (action.type) {\n    case \"reset\":\n      return initialState;\n    case \"resetCount\":\n      return { ...state, count: countReducer(state.count, action) };\n    case \"increment\":\n      return { ...state, count: countReducer(state.count, action) };\n    case \"decrement\":\n      return { ...state, count: countReducer(state.count, action) };\n    case \"FILTER_FILMS\":\n      return { ...state, filterFilms: action.payload };\n    case \"FILTER_TV\":\n      return { ...state, filterTv: action.payload };\n    case \"FILTER_GAMES\":\n      return { ...state, filterGames: action.payload };\n    case \"SORT_FILMS\":\n      return { ...state, sortFilms: action.payload };\n    case \"SORT_TV\":\n      return { ...state, sortTv: action.payload };\n    case \"SORT_GAMES\":\n      return { ...state, sortGames: action.payload };\n    case \"SORT_REVERSE_FILMS\":\n      return { ...state, sortReverseFilms: !state.sortReverseFilms };\n    case \"SORT_REVERSE_TV\":\n      return { ...state, sortReverseTv: !state.sortReverseTv };\n    case \"SORT_REVERSE_GAMES\":\n      return { ...state, sortReverseGames: !state.sortReverseGames };\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n};\n\n// separate contexts so components that\n// only use dispatch won't re-render\nexport const DispatchContext = React.createContext();\nexport const StateContext = React.createContext();\n\nexport default function Store(props) {\n  const [state, dispatch] = React.useReducer(storeReducer, initialState);\n\n  return (\n    <>\n      <DispatchContext.Provider value={dispatch}>\n        <StateContext.Provider value={state}>\n          {props.children}\n        </StateContext.Provider>\n      </DispatchContext.Provider>\n    </>\n  );\n}\n","import * as React from \"react\";\n\nexport class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    //  logErrorToMyService(error, errorInfo);\n  }\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>;\n    }\n    return this.props.children;\n  }\n}\n","import * as React from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function NotFound() {\n  const location = useLocation();\n  document.title = `404 error: ${location.pathname} - MediaSheetViewer`;\n  return (\n    <>\n      <div>\n        <h1 style={{ textAlign: \"center\" }}>404</h1>\n        {location.pathname} not found\n      </div>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport {\n  BrowserRouter as Router,\n  NavLink,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport \"./app.css\";\nimport { ErrorBoundary } from \"./components/ErrorBoundary\";\nimport NotFound from \"./components/NotFound\";\nimport { Spinner } from \"./components/Spinner\";\nimport Store from \"./components/Store\";\n\nconst Home = React.lazy(() => import(\"./components/Home\"));\nconst FilmList = React.lazy(() => import(\"./components/FilmList\"));\nconst TvList = React.lazy(() => import(\"./components/TvList\"));\nconst GamesList = React.lazy(() => import(\"./components/GamesList\"));\nconst DirectorList = React.lazy(() => import(\"./components/DirectorList\"));\nconst MediaDetails = React.lazy(() => import(\"./components/MediaDetails\"));\n\nconst menu = [\n  { path: \"/\", exact: true, name: \"Home\" },\n  { path: \"/films\", name: \"Films\" },\n  { path: \"/tv\", name: \"TV\" },\n  { path: \"/games\", name: \"Games\" },\n  { path: \"/directors\", name: \"Directors\" },\n  { path: \"/spintest\", name: \"spinner\" },\n];\n\nconst routes = [\n  { path: \"/\", exact: true, component: <Home /> },\n  { path: \"/films\", exact: true, component: <FilmList /> },\n  { path: \"/films/:id\", component: <MediaDetails /> },\n  { path: \"/tv\", exact: true, component: <TvList /> },\n  { path: \"/tv/:id\", component: <MediaDetails /> },\n  { path: \"/games\", exact: true, component: <GamesList /> },\n  { path: \"/games/:id\", component: <MediaDetails /> },\n  { path: \"/directors\", exact: true, component: <DirectorList /> },\n  { path: \"/creators/:id\", component: <MediaDetails /> },\n  { path: \"/spintest\", component: <Spinner /> },\n  { path: \"*\", component: <NotFound /> },\n];\n\nexport default function App() {\n  return (\n    <>\n      <ErrorBoundary>\n        <Router basename={\"media-sheet-viewer\"}>\n          <div className=\"headerContainer\">\n            <div className=\"menuItems\">\n              {menu.map((e) => (\n                <NavLink\n                  className=\"menuLink\"\n                  activeClassName=\"menuLinkActive\"\n                  key={e.name}\n                  to={e.path}\n                  exact={e.exact}\n                >\n                  {e.name}\n                </NavLink>\n              ))}\n            </div>\n          </div>\n          <div className=\"bodyContainer\">\n            <React.Suspense fallback={<Spinner />}>\n              <Store>\n                <Switch>\n                  {routes.map((route) => (\n                    <Route\n                      key={route.path}\n                      path={route.path}\n                      exact={route.exact}\n                    >\n                      {route.component}\n                    </Route>\n                  ))}\n                </Switch>\n              </Store>\n            </React.Suspense>\n          </div>\n        </Router>\n      </ErrorBoundary>\n    </>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}