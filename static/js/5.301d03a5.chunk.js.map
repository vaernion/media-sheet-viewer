{"version":3,"sources":["utils/utilities.js","components/SearchForm/index.jsx","hooks/useDebounceEffect.js","components/FieldHeader/index.jsx","components/TvList/TvListItem.jsx","components/TvList/index.jsx"],"names":["normalize","str","replace","toLowerCase","SearchForm","value","setValue","placeholder","React","state","setState","callback","delay","dependencies","memoized","useCallback","useEffect","debounce","setTimeout","clearTimeout","useDebounceEffect","type","onChange","e","currentTarget","onClick","FieldHeader","props","active","sort","sortBy","field","arrow","isSortReverse","className","style","width","onclick","undefined","label","TvListItem","tv","to","id","title","setSearchField","seasons","yearStart","length","yearEnd","creator","map","name","i","key","genre","TvList","context","MediaContext","setSortBy","setIsSortReverse","searchField","tvSortedLocal","setTvSortedLocal","tvFiltered","setTvFiltered","document","sorted","tvSorted","titleDesc","titleAsc","yearStartDesc","yearStartAsc","yearEndDesc","yearEndAsc","creatorDesc","creatorAsc","filterTv","handleSort","sortedTv","searchStr","startsWith","filter","findIndex","includes","search","Number","toString"],"mappings":"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","file":"static/js/5.301d03a5.chunk.js","sourcesContent":["export const normalize = (str) => {\n  return str\n    .normalize(\"NFD\")\n    .replace(/[^\\w\\s.-_/]/g, \"\")\n    .toLowerCase();\n};\n","import * as React from \"react\";\nimport { useDebounceEffect } from \"../../hooks/useDebounceEffect\";\nimport \"./searchForm.css\";\n\nexport function SearchForm({ value, setValue, placeholder }) {\n  const [state, setState] = React.useState(value);\n\n  React.useEffect(() => {\n    setState(value);\n  }, [value]);\n\n  useDebounceEffect(\n    () => {\n      setValue(state);\n    },\n    500,\n    [state]\n  );\n\n  const handleClear = () => {\n    setState(\"\");\n  };\n\n  return (\n    <>\n      <div>\n        <input\n          type=\"text\"\n          placeholder={placeholder}\n          value={state}\n          onChange={(e) => setState(e.currentTarget.value)}\n        />\n        <button onClick={handleClear}>Clear</button>\n      </div>\n    </>\n  );\n}\n","import { useCallback, useEffect } from \"react\";\n\n/**\n * Fire callback when dependencies stay unchanged for duration of delay.\n * @link https://stackoverflow.com/a/61127960\n * @export\n * @param {function} callback\n * @param {number} delay Milliseconds\n * @param {any[]} dependencies\n */\nexport function useDebounceEffect(callback, delay, dependencies) {\n  const memoized = useCallback(callback, dependencies);\n\n  useEffect(() => {\n    const debounce = setTimeout(() => memoized(), delay);\n\n    return () => clearTimeout(debounce);\n  }, [memoized, delay]);\n}\n","import * as React from \"react\";\nimport \"./FieldHeader.css\";\n\nexport function FieldHeader(props) {\n  const active = props.sort.sortBy === props.field ? true : false;\n  const arrow = active ? (props.sort.isSortReverse ? \"↑\" : \"↓\") : null;\n\n  return (\n    <>\n      <span className={\"fheader-outer\"} style={{ width: props.width }}>\n        <span\n          className={\n            \"fheader\" +\n            (active ? \" active\" : \"\") +\n            (!props.onclick ? \" no-click\" : \"\")\n          }\n          onClick={props.onclick ? () => props.onclick(props.field) : undefined}\n        >\n          {props.label} {arrow}\n        </span>\n      </span>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./TvList.css\";\n\nexport const TvListItem = React.memo(TvListItemRaw);\n\nfunction TvListItemRaw(props) {\n  const tv = props.tv;\n\n  return (\n    <>\n      <div className=\"list-items\">\n        <span className=\"tv-title\">\n          <Link to={`/tv/${tv.id}`}>{tv.title}</Link> (\n          <span\n            className=\"tv-year on-click\"\n            onClick={() =>\n              props.setSearchField(\"ys:\" + tv.seasons[0].yearStart)\n            }\n          >\n            {tv.seasons[0].yearStart}\n          </span>\n          -\n          <span\n            className=\"tv-year on-click\"\n            onClick={() =>\n              props.setSearchField(\n                \"ye:\" + tv.seasons[tv.seasons.length - 1].yearEnd\n              )\n            }\n          >\n            {tv.seasons[tv.seasons.length - 1].yearEnd}\n          </span>\n          )\n        </span>\n        <span className=\"tv-creator\">\n          {tv.creator.map((name, i) => (\n            <span key={name}>\n              <span>{i > 0 ? \" & \" : null}</span>\n              <Link to={`/directors/${name}`}>{name}</Link>\n            </span>\n          ))}\n        </span>\n        <span className=\"tv-genre\">\n          {tv.genre.map((name, i) => (\n            <span key={name}>\n              <span>{i > 0 ? \" / \" : null}</span>\n              <span\n                key={name}\n                className=\"genre-name on-click\"\n                onClick={() => props.setSearchField(\"g:\" + name)}\n              >\n                {name}\n              </span>\n            </span>\n          ))}\n        </span>\n      </div>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport \"../../styles/lists.css\";\nimport { normalize } from \"../../utils/utilities\";\nimport { FieldHeader } from \"../FieldHeader\";\nimport { SearchForm } from \"../SearchForm\";\nimport { MediaContext } from \"../Store\";\nimport \"./TvList.css\";\nimport { TvListItem } from \"./TvListItem\";\n\nexport default function TvList() {\n  const context = React.useContext(MediaContext);\n\n  const [sortBy, setSortBy] = React.useState(\"sortTitle\");\n  const [isSortReverse, setIsSortReverse] = React.useState(false);\n  const [searchField, setSearchField] = React.useState(\"\");\n  const [tvSortedLocal, setTvSortedLocal] = React.useState(null);\n  const [tvFiltered, setTvFiltered] = React.useState(null);\n\n  document.title = `${context.tv.length} TV series - MediaSheetViewer`;\n\n  //   keep current sorted tv in state\n  React.useEffect(() => {\n    setTvSortedLocal(\n      (() => {\n        const sorted = context.tvSorted;\n        switch (sortBy) {\n          case \"sortTitle\":\n            return isSortReverse ? sorted.titleDesc : sorted.titleAsc;\n          case \"yearStart\":\n            return isSortReverse ? sorted.yearStartDesc : sorted.yearStartAsc;\n          case \"yearEnd\":\n            return isSortReverse ? sorted.yearEndDesc : sorted.yearEndAsc;\n          case \"creator\":\n            return isSortReverse ? sorted.creatorDesc : sorted.creatorAsc;\n          default:\n            return context.tv;\n        }\n      })()\n    );\n  }, [sortBy, isSortReverse, context.tv, context.tvSorted]);\n\n  //   filter tv post-sort and store in state\n  React.useEffect(() => {\n    if (!tvSortedLocal) return;\n    setTvFiltered(filterTv(tvSortedLocal, searchField));\n  }, [tvSortedLocal, searchField]);\n\n  const handleSort = (field) => {\n    if (field === sortBy) {\n      setIsSortReverse(!isSortReverse);\n    } else {\n      setIsSortReverse(false);\n      setSortBy(field);\n    }\n  };\n\n  const filterTv = (sortedTv, searchField) => {\n    const searchStr = normalize(searchField);\n\n    if (searchStr.startsWith(\"g:\")) {\n      return sortedTv.filter(\n        (tv) =>\n          tv.genre.findIndex((genre) =>\n            normalize(genre).includes(searchStr.replace(\"g:\", \"\"))\n          ) !== -1\n      );\n    } else if (searchStr.startsWith(\"y:\")) {\n      return sortedTv.filter((tv) => {\n        const search = Number(searchStr.replace(\"y:\", \"\"));\n\n        return (\n          tv.seasons[0].yearStart <= search &&\n          tv.seasons[tv.seasons.length - 1].yearEnd >= search\n        );\n      });\n    } else if (searchStr.startsWith(\"ys:\")) {\n      return sortedTv.filter(\n        (tv) =>\n          tv.seasons[0].yearStart.toString() === searchStr.replace(\"ys:\", \"\")\n      );\n    } else if (searchStr.startsWith(\"ye:\")) {\n      return sortedTv.filter(\n        (tv) =>\n          tv.seasons[tv.seasons.length - 1].yearEnd.toString() ===\n          searchStr.replace(\"ye:\", \"\")\n      );\n    } else {\n      return sortedTv.filter(\n        (tv) =>\n          normalize(tv.title).includes(searchStr) ||\n          tv.creator.findIndex((creator) =>\n            normalize(creator).includes(searchStr)\n          ) !== -1\n      );\n    }\n  };\n\n  if (!tvFiltered) return null;\n\n  return (\n    <>\n      <div className=\"tvs\">\n        <div className=\"tvs-head\">\n          <SearchForm\n            value={searchField}\n            setValue={setSearchField}\n            placeholder=\"examples: wire | david simon | g:sci-fi | (y|ys|ye):2005\"\n          />\n          <div className=\"headers\">\n            <FieldHeader\n              field=\"sortTitle\"\n              label=\"Title\"\n              width=\"10%\"\n              sort={{ sortBy, isSortReverse }}\n              onclick={handleSort}\n            />\n            <FieldHeader\n              field=\"yearStart\"\n              label=\"Start\"\n              width=\"10%\"\n              sort={{ sortBy, isSortReverse }}\n              onclick={handleSort}\n            />\n            <FieldHeader\n              field=\"yearEnd\"\n              label=\"End\"\n              width=\"10%\"\n              sort={{ sortBy, isSortReverse }}\n              onclick={handleSort}\n            />\n            <FieldHeader\n              field=\"creator\"\n              label=\"Creator\"\n              width=\"35%\"\n              sort={{ sortBy, isSortReverse }}\n              onclick={handleSort}\n            />\n            <FieldHeader\n              field=\"genre\"\n              label=\"Genre\"\n              width=\"35%\"\n              sort={{ sortBy, isSortReverse }}\n            />\n          </div>\n        </div>\n        <div className=\"tvs-body\">\n          {tvFiltered.map((tv) => (\n            <TvListItem key={tv.id} tv={tv} setSearchField={setSearchField} />\n          ))}\n        </div>\n      </div>\n    </>\n  );\n}\n"],"sourceRoot":""}