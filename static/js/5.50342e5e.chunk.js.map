{"version":3,"sources":["components/TvList/TvListItem.tsx","components/TvList/index.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/SearchForm/index.tsx","hooks/useDebounceEffect.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","utils/filters.ts","components/FieldHeader/index.tsx"],"names":["TvListItem","React","props","tv","data","setSearchField","className","to","id","name","onClick","seasons","yearStart","length","yearEnd","creator","map","i","key","genre","TvList","dispatch","DispatchContext","state","StateContext","filterTv","searchField","document","title","mediaSheet","type","payload","handleSort","field","sortTv","tvSortedLocal","tvSorted","sortReverseTv","tvFiltered","SearchForm","value","setValue","placeholder","FieldHeader","label","width","sort","sortBy","isSortReverse","onclick","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","setState","callback","delay","dependencies","memoized","useCallback","useEffect","debounce","setTimeout","clearTimeout","useDebounceEffect","htmlFor","onChange","e","currentTarget","_createForOfIteratorHelper","o","F","s","n","done","_e","f","it","err","normalCompletion","didErr","step","next","_e2","filterFilms","films","filterRaw","filter","normalize","startsWith","film","findIndex","includes","replace","year","toString","director","franchise","tvs","search","Number","filterGames","sortedGames","game","completed","developer","system","active","arrow","style","tabIndex"],"mappings":"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","file":"static/js/5.50342e5e.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Television } from \"../../classes/Television\";\nimport \"./TvList.css\";\n\nexport const TvListItem = React.memo(TvListItemRaw);\n\ntype Props = {\n  data: Television;\n  setSearchField: (field: string) => void;\n};\n\nfunction TvListItemRaw(props: Props) {\n  const tv = props.data;\n  const setSearchField = props.setSearchField;\n\n  return (\n    <>\n      <div className=\"list-items unvirtualized\">\n        <span className=\"tv-title\">\n          <Link to={`/tv/${tv.id}`}>{tv.name}</Link> (\n          <span\n            className=\"tv-year on-click\"\n            onClick={() => setSearchField(\"ys:\" + tv.seasons[0].yearStart)}\n          >\n            {tv.seasons[0].yearStart}\n          </span>\n          -\n          <span\n            className=\"tv-year on-click\"\n            onClick={() =>\n              setSearchField(\"ye:\" + tv.seasons[tv.seasons.length - 1].yearEnd)\n            }\n          >\n            {tv.seasons[tv.seasons.length - 1].yearEnd}\n          </span>\n          )\n        </span>\n        <span className=\"tv-creator\">\n          {tv.creator.map((name, i) => (\n            <span key={name}>\n              <span>{i > 0 ? \" & \" : null}</span>\n              <Link to={`/creators/${name}`}>{name}</Link>\n            </span>\n          ))}\n        </span>\n        <span className=\"tv-genre\">\n          {tv.genre.map((name, i) => (\n            <span key={name}>\n              <span>{i > 0 ? \" / \" : null}</span>\n              <span\n                key={name}\n                className=\"genre-name on-click\"\n                onClick={() => setSearchField(\"g:\" + name)}\n              >\n                {name}\n              </span>\n            </span>\n          ))}\n        </span>\n      </div>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport \"../../styles/lists.css\";\nimport { filterTv } from \"../../utils/filters\";\nimport { FieldHeader } from \"../FieldHeader\";\nimport { SearchForm } from \"../SearchForm\";\nimport { DispatchContext, StateContext } from \"../Store\";\nimport { mediaSheet } from \"../Store/mediaSheet\";\nimport \"./TvList.css\";\nimport { TvListItem } from \"./TvListItem\";\n\nexport default function TvList() {\n  const dispatch = React.useContext(DispatchContext);\n  const state = React.useContext(StateContext);\n  const [searchField, setSearchField] = React.useState(state.filterTv);\n\n  document.title = `${mediaSheet.tv.length} TV series - MediaSheetViewer`;\n\n  // persist filter\n  React.useEffect(() => {\n    dispatch({ type: \"FILTER_TV\", payload: searchField });\n  }, [searchField, dispatch]);\n\n  const handleSort = (field: string) => {\n    if (field === state.sortTv) {\n      dispatch({ type: \"SORT_REVERSE_TV\" });\n    } else {\n      dispatch({ type: \"SORT_TV\", payload: field });\n    }\n  };\n\n  const tvSortedLocal =\n    mediaSheet.tvSorted[state.sortTv + (state.sortReverseTv ? \"Desc\" : \"Asc\")];\n  const tvFiltered = filterTv(tvSortedLocal, searchField);\n\n  return (\n    <>\n      <div className=\"tvs\">\n        <div className=\"tvs-head\">\n          <SearchForm\n            value={searchField}\n            setValue={setSearchField}\n            placeholder=\"examples: wire | david simon | g:sci-fi | (y|ys|ye):2005\"\n          />\n          <div className=\"headers\">\n            <FieldHeader\n              field=\"sortTitle\"\n              label=\"Title\"\n              width=\"10%\"\n              sort={{\n                sortBy: state.sortTv,\n                isSortReverse: state.sortReverseTv,\n              }}\n              onclick={handleSort}\n            />\n            <FieldHeader\n              field=\"yearStart\"\n              label=\"Start\"\n              width=\"10%\"\n              sort={{\n                sortBy: state.sortTv,\n                isSortReverse: state.sortReverseTv,\n              }}\n              onclick={handleSort}\n            />\n            <FieldHeader\n              field=\"yearEnd\"\n              label=\"End\"\n              width=\"10%\"\n              sort={{\n                sortBy: state.sortTv,\n                isSortReverse: state.sortReverseTv,\n              }}\n              onclick={handleSort}\n            />\n            <FieldHeader\n              field=\"creator\"\n              label=\"Creator\"\n              width=\"35%\"\n              sort={{\n                sortBy: state.sortTv,\n                isSortReverse: state.sortReverseTv,\n              }}\n              onclick={handleSort}\n            />\n            <FieldHeader\n              field=\"genre\"\n              label=\"Genre\"\n              width=\"35%\"\n              sort={{\n                sortBy: state.sortTv,\n                isSortReverse: state.sortReverseTv,\n              }}\n            />\n          </div>\n        </div>\n        <div className=\"tvs-body\">\n          {tvFiltered.map((tv, i) => (\n            <TvListItem key={tv.id} data={tv} setSearchField={setSearchField} />\n          ))}\n        </div>\n      </div>\n    </>\n  );\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import * as React from \"react\";\nimport { useDebounceEffect } from \"../../hooks/useDebounceEffect\";\nimport \"./searchForm.css\";\n\ntype Props = {\n  value: string;\n  setValue: (string: string) => void;\n  placeholder: string;\n};\n\nexport function SearchForm({ value, setValue, placeholder }: Props) {\n  const [state, setState] = React.useState(value);\n\n  React.useEffect(() => {\n    setState(value);\n  }, [value]);\n\n  useDebounceEffect(\n    () => {\n      setValue(state);\n    },\n    500,\n    [state]\n  );\n\n  const handleClear = () => {\n    setState(\"\");\n  };\n\n  return (\n    <>\n      <div className=\"searchform\">\n        <label className=\"input-label\" htmlFor=\"searchFormInput\">\n          Filter:\n        </label>\n        <input\n          type=\"text\"\n          id=\"searchFormInput\"\n          placeholder={placeholder}\n          value={state}\n          onChange={(e) => setState(e.currentTarget.value)}\n        />\n        <button onClick={handleClear}>Clear</button>\n      </div>\n    </>\n  );\n}\n","import { useCallback, useEffect } from \"react\";\n\n/**\n * Fire callback when dependencies stay unchanged for duration of delay.\n * @link https://stackoverflow.com/a/61127960\n * @export\n * @param {function} callback\n * @param {number} delay Milliseconds\n * @param {any[]} dependencies\n */\nexport function useDebounceEffect(\n  callback: () => void,\n  delay: number,\n  dependencies: any[]\n) {\n  const memoized = useCallback(callback, dependencies);\n\n  useEffect(() => {\n    const debounce = setTimeout(() => memoized(), delay);\n\n    return () => clearTimeout(debounce);\n  }, [memoized, delay]);\n}\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { Film } from \"../classes/Film\";\nimport { Game } from \"../classes/Game\";\nimport { Television } from \"../classes/Television\";\nimport { normalize } from \"./utilities\";\n\nexport const filterFilms = (films: Film[], filterRaw: string): Film[] => {\n  const filter = normalize(filterRaw);\n\n  if (filter.startsWith(\"g:\")) {\n    return films.filter(\n      (film) =>\n        film.genre.findIndex((genre) =>\n          normalize(genre).includes(filter.replace(\"g:\", \"\"))\n        ) !== -1\n    );\n  } else if (filter.startsWith(\"y:\")) {\n    return films.filter(\n      (film) => film.year.toString() === filter.replace(\"y:\", \"\")\n    );\n  } else {\n    return films.filter(\n      (film) =>\n        normalize(film.name).includes(filter) ||\n        film.creator.findIndex((director) =>\n          normalize(director).includes(filter)\n        ) !== -1 ||\n        normalize(film.franchise).includes(filter)\n    );\n  }\n};\n\nexport const filterTv = (\n  tvs: Television[],\n  filterRaw: string\n): Television[] => {\n  const filter = normalize(filterRaw);\n\n  if (filter.startsWith(\"g:\")) {\n    return tvs.filter(\n      (tv) =>\n        tv.genre.findIndex((genre) =>\n          normalize(genre).includes(filter.replace(\"g:\", \"\"))\n        ) !== -1\n    );\n  } else if (filter.startsWith(\"y:\")) {\n    return tvs.filter((tv) => {\n      const search = Number(filter.replace(\"y:\", \"\"));\n      return (\n        tv.seasons[0].yearStart <= search &&\n        tv.seasons[tv.seasons.length - 1].yearEnd >= search\n      );\n    });\n  } else if (filter.startsWith(\"ys:\")) {\n    return tvs.filter(\n      (tv) => tv.seasons[0].yearStart.toString() === filter.replace(\"ys:\", \"\")\n    );\n  } else if (filter.startsWith(\"ye:\")) {\n    return tvs.filter(\n      (tv) =>\n        tv.seasons[tv.seasons.length - 1].yearEnd.toString() ===\n        filter.replace(\"ye:\", \"\")\n    );\n  } else {\n    return tvs.filter(\n      (tv) =>\n        normalize(tv.name).includes(filter) ||\n        tv.creator.findIndex((creator) =>\n          normalize(creator).includes(filter)\n        ) !== -1\n    );\n  }\n};\n\nexport const filterGames = (sortedGames: Game[], filterRaw: string): Game[] => {\n  const filter = normalize(filterRaw);\n\n  if (filter.startsWith(\"g:\")) {\n    return sortedGames.filter(\n      (game) =>\n        game.genre.findIndex((genre) =>\n          normalize(genre).includes(filter.replace(\"g:\", \"\"))\n        ) !== -1\n    );\n  } else if (filter.startsWith(\"y:\")) {\n    return sortedGames.filter(\n      (game) => game.year.toString() === filter.replace(\"y:\", \"\")\n    );\n  } else if (filter.startsWith(\"c:\")) {\n    return sortedGames.filter((game) =>\n      normalize(game.completed).includes(filter.replace(\"c:\", \"\"))\n    );\n  } else {\n    return sortedGames.filter(\n      (game) =>\n        normalize(game.name).includes(filter) ||\n        game.creator.findIndex((developer) =>\n          normalize(developer).includes(filter)\n        ) !== -1 ||\n        normalize(game.completed).includes(filter) ||\n        normalize(game.system).includes(filter)\n    );\n  }\n};\n","import * as React from \"react\";\nimport \"./FieldHeader.css\";\n\ntype Props = {\n  sort: { sortBy: string; isSortReverse: boolean };\n  field: string;\n  label: string;\n  width: string;\n  onclick?: (field: Props[\"field\"]) => void;\n};\n\nexport function FieldHeader(props: Props) {\n  const active = props.sort.sortBy === props.field ? true : false;\n  const arrow = active ? (props.sort.isSortReverse ? \"↑\" : \"↓\") : null;\n\n  const handleClick = () => {\n    if (!props.onclick) return;\n    props.onclick(props.field);\n  };\n\n  return (\n    <>\n      <span className={\"fheader-outer\"} style={{ width: props.width }}>\n        <span\n          tabIndex={0}\n          className={\n            \"fheader\" +\n            (active ? \" active\" : \"\") +\n            (!props.onclick ? \" no-click\" : \"\")\n          }\n          onClick={handleClick}\n        >\n          {props.label} {arrow}\n        </span>\n      </span>\n    </>\n  );\n}\n"],"sourceRoot":""}