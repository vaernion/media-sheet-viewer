{"version":3,"sources":["components/Spinner/index.jsx","classes/Film.js","components/Store/values.js","components/Store/index.jsx","components/ErrorBoundary.jsx","components/NotFound.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["Spinner","className","Film","film","this","id","_count","title","translatedTitle","sortTitle","director","split","push","trim","genre","year","franchise","filmsJson","map","films","console","time","obj","sort","bool","sortFilms","timeEnd","sortBy","isDescending","algorithm","a","b","localeCompare","pop","array","includes","reverse","generateFilmsArray","filter","x","i","findIndex","e","filmsSorted","generateSortedFilmsObj","info","length","Object","keys","directorsMatrix","directors","Set","concat","apply","MediaContext","React","initialState","count","storeReducer","state","action","type","Store","props","store","dispatch","Provider","value","children","ErrorBoundary","hasError","error","errorInfo","setState","NotFound","location","useLocation","document","pathname","style","textAlign","Home","FilmList","DirectorList","FilmDetails","DirectorDetails","menu","path","exact","name","routes","component","App","basename","activeClassName","key","to","fallback","route","Boolean","window","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.e0817af6.chunk.js","sourcesContent":["import * as React from \"react\";\nimport \"./spinner.css\";\n\nexport function Spinner() {\n  return (\n    <>\n      <div className=\"spinner\"></div>\n    </>\n  );\n}\n","// @ts-check\n\nexport class Film {\n  static _count = 0;\n\n  constructor(film) {\n    this.id = Film._count += 1;\n    this.title = film[\"Original title (romanized)\"];\n    this.translatedTitle = film[\"This release's translation/title\"];\n    this.sortTitle = film[\"Sort\"];\n    this.director = [];\n    for (let director of film[\"Director(s)\"].split(/[,/]+/)) {\n      this.director.push(director.trim());\n    }\n    this.genre = [];\n    for (let genre of film[\"Genres\"].split(/[,/|]+/)) {\n      this.genre.push(genre.trim());\n    }\n    this.year = film[\"Year\"];\n    this.franchise = film[\"Series/Universe\"];\n  }\n\n  static generateFilmsArray(filmsJson) {\n    return filmsJson.map((film) => new this(film));\n  }\n\n  static generateSortedFilmsObj(films) {\n    console.time(\"genFilmsObj\");\n    const obj = {};\n    const sorts = [\"title\", \"year\", \"director\", \"franchise\"];\n\n    for (let sort of sorts) {\n      for (let bool of [true, false]) {\n        obj[`${sort}${bool ? \"Desc\" : \"Asc\"}`] = this.sortFilms(\n          [...films],\n          sort,\n          bool\n        );\n      }\n    }\n    console.timeEnd(\"genFilmsObj\");\n    return obj;\n  }\n\n  static sortFilms(films, sortBy, isDescending) {\n    console.time(`${sortBy}${isDescending}`);\n    let algorithm = null;\n\n    // title A-Z\n    if (sortBy === \"title\") {\n      algorithm = (a, b) => a.sortTitle.localeCompare(b.sortTitle);\n      // year 1900-2000\n    } else if (sortBy === \"year\") {\n      algorithm = (a, b) => a.year - b.year;\n      // director A-Z by last name of first director\n    } else if (sortBy === \"director\") {\n      algorithm = (a, b) => {\n        a = a.director[0].split(/\\s+/).pop();\n        b = b.director[0].split(/\\s+/).pop();\n        return a.localeCompare(b);\n      };\n      // franchise, entries without franchise always last\n    } else if (sortBy === \"franchise\") {\n      // franchise A-Z\n      if (!isDescending) {\n        algorithm = (a, b) => {\n          if (a.franchise === \"\") return 1;\n          if (b.franchise === \"\") return -1;\n          return a.franchise.localeCompare(b.franchise);\n        };\n        // franchise Z-A\n      } else {\n        algorithm = (a, b) => {\n          if (a.franchise === \"\") return 1;\n          if (b.franchise === \"\") return -1;\n          return b.franchise.localeCompare(a.franchise);\n        };\n      }\n    }\n\n    if (!algorithm) return films;\n\n    // sort ascending (and descending if franchise)\n    let array = [...films].sort(algorithm);\n\n    // for all except franchise we can just reverse to get descending\n    if (isDescending && [\"title\", \"year\", \"director\"].includes(sortBy)) {\n      array = array.reverse();\n    }\n\n    console.timeEnd(`${sortBy}${isDescending}`);\n    return array;\n  }\n}\n","import { Film } from \"../../classes/Film\";\nimport filmsJson from \"../../data/films.json\";\n\nconst films = Film.generateFilmsArray(filmsJson).filter(\n  (x, i, a) =>\n    a.findIndex((e) => e.title === x.title && e.year === x.year) === i\n);\n\nconst filmsSorted = Film.generateSortedFilmsObj(films);\nconsole.info(\n  `films.length: ${films.length} filmsSorted: ${Object.keys(filmsSorted)}`\n);\n\nconst directorsMatrix = films.map((e) => e.director);\nconst directors = [...new Set([].concat.apply([], directorsMatrix))].sort(\n  (a, b) => {\n    a = a.split(/\\s+/).pop();\n    b = b.split(/\\s+/).pop();\n    return a.localeCompare(b);\n  }\n);\nconsole.info(`directors.length: ${directors.length}`);\n\nexport { films, filmsSorted, directors };\n","import * as React from \"react\";\nimport { directors, films, filmsSorted } from \"./values\";\n\nexport const MediaContext = React.createContext();\nconst initialState = { count: 0 };\n\nconst storeReducer = (state, action) => {\n  switch (action.type) {\n    case \"reset\":\n      return initialState;\n    case \"increment\":\n      return { count: state.count + 1 };\n    case \"decrement\":\n      return { count: state.count - 1 };\n    default:\n      return state;\n  }\n};\n\nexport default function Store(props) {\n  const [store, dispatch] = React.useReducer(storeReducer, initialState);\n\n  return (\n    <>\n      <MediaContext.Provider\n        value={{ store, dispatch, films, filmsSorted, directors }}\n      >\n        {props.children}\n      </MediaContext.Provider>\n    </>\n  );\n}\n","import * as React from \"react\";\n\nexport class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false, error: null, errorInfo: null };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    // logErrorToMyService(error, errorInfo);\n    this.setState({ error: error, errorInfo: errorInfo });\n  }\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return (\n        <>\n          <h1>Something went wrong.</h1>\n          {this.state.error}\n          {this.state.errorInfo}\n        </>\n      );\n    }\n    return this.props.children;\n  }\n}\n","import * as React from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function NotFound() {\n  const location = useLocation();\n  document.title = `404 error: ${location.pathname} - MediaSheetViewer`;\n  return (\n    <>\n      <div>\n        <h1 style={{ textAlign: \"center\" }}>404</h1>\n        {location.pathname} not found\n      </div>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport {\n  BrowserRouter as Router,\n  NavLink,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport \"./app.css\";\nimport { ErrorBoundary } from \"./components/ErrorBoundary\";\nimport NotFound from \"./components/NotFound\";\nimport { Spinner } from \"./components/Spinner\";\nimport Store from \"./components/Store\";\n\nconst Home = React.lazy(() => import(\"./components/Home\"));\nconst FilmList = React.lazy(() => import(\"./components/FilmList\"));\nconst DirectorList = React.lazy(() => import(\"./components/DirectorList\"));\nconst FilmDetails = React.lazy(() => import(\"./components/FilmDetails\"));\nconst DirectorDetails = React.lazy(() =>\n  import(\"./components/DirectorDetails\")\n);\n\nconst menu = [\n  { path: \"/\", exact: true, name: \"Home\" },\n  { path: \"/films\", name: \"Films\" },\n  { path: \"/directors\", name: \"Directors\" },\n  { path: \"/tv\", name: \"TV\" },\n  { path: \"/spintest\", name: \"spinner\" },\n];\n\nconst routes = [\n  { path: \"/\", exact: true, component: <Home /> },\n  { path: \"/films\", exact: true, component: <FilmList /> },\n  { path: \"/films/:filmId\", component: <FilmDetails /> },\n  { path: \"/directors\", exact: true, component: <DirectorList /> },\n  { path: \"/directors/:directorName\", component: <DirectorDetails /> },\n  { path: \"/spintest\", component: <Spinner /> },\n  { path: \"*\", component: <NotFound /> },\n];\n\nexport default function App() {\n  return (\n    <>\n      <ErrorBoundary>\n        <Router basename={\"media-sheet-viewer\"}>\n          <div className=\"headerContainer\">\n            <div className=\"menuItems\">\n              {menu.map((e) => (\n                <NavLink\n                  className=\"menuLink\"\n                  activeClassName=\"menuLinkActive\"\n                  key={e.name}\n                  to={e.path}\n                  exact={e.exact}\n                >\n                  {e.name}\n                </NavLink>\n              ))}\n            </div>\n          </div>\n          <div className=\"bodyContainer\">\n            <React.Suspense fallback={<Spinner />}>\n              <Store>\n                <Switch>\n                  {routes.map((route) => (\n                    <Route\n                      key={route.path}\n                      path={route.path}\n                      exact={route.exact}\n                    >\n                      {route.component}\n                    </Route>\n                  ))}\n                </Switch>\n              </Store>\n            </React.Suspense>\n          </div>\n        </Router>\n      </ErrorBoundary>\n    </>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}