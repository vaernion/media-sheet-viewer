{"version":3,"sources":["utils/utilities.js","components/Spinner/index.jsx","classes/Creator.js","utils/regex.js","classes/Film.js","classes/Game.js","classes/Television.js","components/Store/values.js","components/Store/index.jsx","components/ErrorBoundary.jsx","components/NotFound.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["normalize","str","replace","toLowerCase","sortLastName","a","b","split","pop","localeCompare","formatYear","media","type","seasons","yearStart","length","yearEnd","year","isMedia","mediaType","getCreations","name","context","cFilms","films","filter","e","director","includes","cTv","tv","creator","cGames","games","developer","Spinner","className","Creator","this","id","_count","splitRegex","RegExp","Film","film","title","translatedTitle","sortTitle","push","trim","genre","franchise","filmsJson","map","sortedFilms","_sorts","sort","bool","sortFilms","sortBy","isDescending","algorithm","array","reverse","Game","game","completed","system","gamesJson","sortedGames","sortGames","Television","tvSeries","minutesTotal","Number","reduce","sum","season","seasonMinutes","tvJson","tvSeasons","rawSeason","parseRawSeason","tvNames","Set","tvSeason","filteredSeasons","s","parseSeason","episodes","episodeMinutes","parseInt","sortedTv","sortTv","console","time","generateFilmsFromJson","x","i","findIndex","filmsSorted","generateSortedFilms","timeEnd","info","Object","keys","directorsMatrix","directors","concat","apply","generateTvFromJson","tvSorted","generateSortedTv","generateGamesFromJson","gamesSorted","generateSortedGames","tvCreatorsMatrix","tvCreators","filmAndTvCreators","gameDevelopersMatrix","gameDevelopers","creators","log","values","MediaContext","React","initialState","count","storeReducer","state","action","Store","props","store","dispatch","Provider","value","children","ErrorBoundary","hasError","error","errorInfo","setState","NotFound","location","useLocation","document","pathname","style","textAlign","Home","FilmList","TvList","GamesList","DirectorList","MediaDetails","menu","path","exact","routes","component","App","basename","activeClassName","key","to","fallback","route","Boolean","window","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.581dc78c.chunk.js","sourcesContent":["export const normalize = (str) => {\n  return str\n    .normalize(\"NFD\")\n    .replace(/[^\\w\\s.-_/]/g, \"\")\n    .toLowerCase();\n};\n\nexport const sortLastName = (a, b) => {\n  a = a.split(/\\s+/).pop();\n  b = b.split(/\\s+/).pop();\n  return a.localeCompare(b);\n};\n\nexport const formatYear = (media) => {\n  if (media.type === \"creator\") return null;\n\n  return media.type === \"tv\"\n    ? `(${media.seasons[0].yearStart}-${\n        media.seasons[media.seasons.length - 1].yearEnd\n      })`\n    : `(${media.year})`;\n};\n\nexport const isMedia = (mediaType) => mediaType.type !== \"creator\";\n\nexport const getCreations = (name, context) => {\n  let cFilms = context.films.filter((e) => e.director.includes(name));\n  let cTv = context.tv.filter((e) => e.creator.includes(name));\n  let cGames = context.games.filter((e) => e.developer.includes(name));\n  return [...cFilms, ...cTv, ...cGames];\n};\n","import * as React from \"react\";\nimport \"./spinner.css\";\n\nexport function Spinner() {\n  return (\n    <>\n      <div className=\"spinner\"></div>\n    </>\n  );\n}\n","// @ts-check\n\nexport class Creator {\n  static _count = 0;\n\n  constructor(name) {\n    this.id = Creator._count += 1;\n    this.type = \"creator\";\n    this.name = name;\n  }\n}\n","export const splitRegex = new RegExp(/[&,/|]+|\\band\\b/);\n","// @ts-check\n\nimport { splitRegex } from \"../utils/regex\";\n\nexport class Film {\n  static _count = 0;\n  static _sorts = [\"title\", \"year\", \"director\", \"franchise\"];\n\n  constructor(film) {\n    this.id = Film._count += 1;\n    this.type = \"film\";\n    this.title = film[\"Original title (romanized)\"];\n    this.translatedTitle = film[\"This release's translation/title\"];\n    this.sortTitle = film[\"Sort\"];\n    this.director = [];\n    for (let director of film[\"Director(s)\"].split(splitRegex)) {\n      this.director.push(director.trim());\n    }\n    this.genre = [];\n    for (let genre of film[\"Genres\"].split(splitRegex)) {\n      this.genre.push(genre.trim());\n    }\n    this.year = film[\"Year\"];\n    this.franchise = film[\"Series/Universe\"];\n  }\n\n  static generateFilmsFromJson(filmsJson) {\n    return filmsJson.map((film) => new this(film));\n  }\n\n  static generateSortedFilms(films) {\n    const sortedFilms = {};\n\n    for (let sort of this._sorts) {\n      for (let bool of [true, false]) {\n        sortedFilms[`${sort}${bool ? \"Desc\" : \"Asc\"}`] = this.sortFilms(\n          [...films],\n          sort,\n          bool\n        );\n      }\n    }\n\n    return sortedFilms;\n  }\n\n  static sortFilms(films, sortBy, isDescending) {\n    let algorithm = null;\n\n    // title A-Z\n    if (sortBy === \"title\") {\n      algorithm = (a, b) => a.sortTitle.localeCompare(b.sortTitle);\n      // year 1900-2000\n    } else if (sortBy === \"year\") {\n      algorithm = (a, b) => a.year - b.year;\n      // director A-Z by last name of first director\n    } else if (sortBy === \"director\") {\n      algorithm = (a, b) => {\n        a = a.director[0].split(/\\s+/).pop();\n        b = b.director[0].split(/\\s+/).pop();\n        return a.localeCompare(b);\n      };\n      // franchise, entries without franchise always last\n    } else if (sortBy === \"franchise\") {\n      // franchise A-Z\n      if (!isDescending) {\n        algorithm = (a, b) => {\n          if (a.franchise === \"\") return 1;\n          if (b.franchise === \"\") return -1;\n          return a.franchise.localeCompare(b.franchise);\n        };\n        // franchise Z-A\n      } else {\n        algorithm = (a, b) => {\n          if (a.franchise === \"\") return 1;\n          if (b.franchise === \"\") return -1;\n          return b.franchise.localeCompare(a.franchise);\n        };\n      }\n    }\n\n    if (!algorithm) return films;\n\n    // sort ascending (and descending if franchise)\n    let array = [...films].sort(algorithm);\n\n    // for all except franchise we can just reverse to get descending\n    if (isDescending && [\"title\", \"year\", \"director\"].includes(sortBy)) {\n      array = array.reverse();\n    }\n\n    return array;\n  }\n}\n","// @ts-check\n\nimport { splitRegex } from \"../utils/regex\";\n\nexport class Game {\n  static _count = 0;\n  static _sorts = [\"title\", \"year\", \"developer\", \"completed\", \"system\"];\n\n  constructor(game) {\n    this.id = Game._count += 1;\n    this.type = \"game\";\n    this.title = game[\"Title\"];\n    this.sortTitle = game[\"Sort\"];\n    this.developer = [];\n    for (let developer of game[\"Developer(s)\"].split(splitRegex)) {\n      this.developer.push(developer.trim());\n    }\n    this.genre = [];\n    for (let genre of game[\"Genres\"].split(splitRegex)) {\n      this.genre.push(genre.trim());\n    }\n    this.year = game[\"Year\"];\n    this.completed = game[\"completed?\"];\n    this.system = game[\"System\"];\n  }\n\n  static generateGamesFromJson(gamesJson) {\n    return gamesJson.map((game) => new this(game));\n  }\n\n  static generateSortedGames(games) {\n    const sortedGames = {};\n\n    for (let sort of this._sorts) {\n      for (let bool of [true, false]) {\n        sortedGames[`${sort}${bool ? \"Desc\" : \"Asc\"}`] = this.sortGames(\n          [...games],\n          sort,\n          bool\n        );\n      }\n    }\n\n    return sortedGames;\n  }\n\n  static sortGames(games, sortBy, isDescending) {\n    let algorithm = null;\n\n    // title/completed/system A-Z\n    if (sortBy === \"title\" || sortBy === \"completed\" || sortBy === \"system\") {\n      algorithm = (a, b) => a[sortBy].localeCompare(b[sortBy]);\n      // year 1900-2000\n    } else if (sortBy === \"year\") {\n      algorithm = (a, b) => a.year - b.year;\n      // developers A-Z by first dev\n    } else if (sortBy === \"developer\") {\n      algorithm = (a, b) => {\n        a = a.developer[0];\n        b = b.developer[0];\n        return a.localeCompare(b);\n      };\n    }\n\n    if (!algorithm) return games;\n\n    // sort ascending\n    let array = [...games].sort(algorithm);\n\n    // reverse to get descending\n    if (isDescending && this._sorts.includes(sortBy)) {\n      array = array.reverse();\n    }\n\n    return array;\n  }\n}\n","// @ts-check\n\nimport { splitRegex } from \"../utils/regex\";\n\nexport class Television {\n  static _count = 0;\n  static _sorts = [\"title\", \"yearStart\", \"yearEnd\", \"creator\"];\n\n  constructor(tvSeries) {\n    this.id = Television._count += 1;\n    this.type = \"tv\";\n    this.title = tvSeries.title;\n    this.sortTitle = tvSeries.sortTitle;\n    this.creator = tvSeries.creator;\n    this.genre = tvSeries.genre;\n    this.seasons = tvSeries.seasons;\n    this.minutesTotal = Number(\n      this.seasons.reduce((sum, season) => sum + season.seasonMinutes, 0)\n    );\n  }\n\n  static generateTvFromJson(tvJson) {\n    const tvSeasons = tvJson.map((rawSeason) => this.parseRawSeason(rawSeason));\n    const tvNames = [...new Set(tvSeasons.map((tvSeason) => tvSeason.title))];\n\n    const tv = [];\n\n    for (let name of tvNames) {\n      let filteredSeasons = tvSeasons.filter(\n        (tvSeason) => tvSeason.title === name\n      );\n\n      let tvSeries = {\n        title: name,\n        sortTitle: filteredSeasons[0].sortTitle,\n        creator: filteredSeasons[0].creator,\n        genre: filteredSeasons[0].genre,\n        seasons: [],\n      };\n\n      for (let s of filteredSeasons) {\n        tvSeries.seasons.push(this.parseSeason(s));\n      }\n\n      tv.push(new this(tvSeries));\n    }\n\n    return tv;\n  }\n\n  static parseRawSeason(tv) {\n    let rawSeason = {};\n\n    rawSeason.title = tv[\"Original title\"];\n    rawSeason.sortTitle = tv[\"Sort\"];\n    rawSeason.creator = [];\n    for (let creator of tv[\"Creator(s)\"].split(splitRegex)) {\n      rawSeason.creator.push(creator.trim());\n    }\n    rawSeason.genre = [];\n    for (let genre of tv[\"Genres\"].split(splitRegex)) {\n      rawSeason.genre.push(genre.trim());\n    }\n    rawSeason.season = Number(tv[\"S\"]);\n    rawSeason.yearStart = Number(tv[\"Start\"]);\n    rawSeason.yearEnd = Number(tv[\"End\"]);\n    rawSeason.episodes = Number(tv[\"E\"]);\n    rawSeason.episodeMinutes = parseInt(tv[\"Mins\"]);\n\n    return rawSeason;\n  }\n\n  static parseSeason(s) {\n    return {\n      season: s.season,\n      yearStart: s.yearStart,\n      yearEnd: s.yearEnd,\n      episodes: s.episodes,\n      episodeMinutes: s.episodeMinutes,\n      seasonMinutes: s.episodes * s.episodeMinutes,\n    };\n  }\n\n  static generateSortedTv(tv) {\n    const sortedTv = {};\n\n    for (let sort of this._sorts) {\n      for (let bool of [true, false]) {\n        sortedTv[`${sort}${bool ? \"Desc\" : \"Asc\"}`] = this.sortTv(\n          [...tv],\n          sort,\n          bool\n        );\n      }\n    }\n\n    return sortedTv;\n  }\n\n  static sortTv(tv, sortBy, isDescending) {\n    let algorithm = null;\n\n    // title A-Z\n    if (sortBy === \"title\") {\n      algorithm = (a, b) => a.sortTitle.localeCompare(b.sortTitle);\n      // year 1900-2000 start first season\n    } else if (sortBy === \"yearStart\") {\n      algorithm = (a, b) => a.seasons[0].yearStart - b.seasons[0].yearStart;\n      // year 1900-2000 end last season\n    } else if (sortBy === \"yearEnd\") {\n      algorithm = (a, b) =>\n        a.seasons[a.seasons.length - 1].yearEnd -\n        b.seasons[b.seasons.length - 1].yearEnd;\n      // creator A-Z by last name of first creator\n    } else if (sortBy === \"creator\") {\n      algorithm = (a, b) => {\n        a = a.creator[0].split(/\\s+/).pop();\n        b = b.creator[0].split(/\\s+/).pop();\n        return a.localeCompare(b);\n      };\n    }\n\n    if (!algorithm) return tv;\n\n    // sort ascending\n    let array = [...tv].sort(algorithm);\n\n    // reverse to get descending\n    if (isDescending && this._sorts.includes(sortBy)) {\n      array = array.reverse();\n    }\n\n    return array;\n  }\n}\n","import { Creator } from \"../../classes/Creator\";\nimport { Film } from \"../../classes/Film\";\nimport { Game } from \"../../classes/Game\";\nimport { Television } from \"../../classes/Television\";\nimport filmsJson from \"../../data/films.json\";\nimport gamesJson from \"../../data/games.json\";\nimport tvJson from \"../../data/tv.json\";\nimport { sortLastName } from \"../../utils/utilities\";\n\n// films\nconsole.time(\"generate film\");\nconst films = Film.generateFilmsFromJson(filmsJson).filter(\n  (x, i, a) =>\n    a.findIndex((e) => e.title === x.title && e.year === x.year) === i\n);\nconst filmsSorted = Film.generateSortedFilms(films);\nconsole.timeEnd(\"generate film\");\nconsole.info(\n  `films.length: ${films.length} filmsSorted: ${Object.keys(filmsSorted)}`\n);\n\n// film directors\nconsole.time(\"generate directors\");\nconst directorsMatrix = films.map((e) => e.director);\nconst directors = [...new Set([].concat.apply([], directorsMatrix))].sort(\n  sortLastName\n);\nconsole.timeEnd(\"generate directors\");\nconsole.info(`directors.length: ${directors.length}`);\n\n// tv\nconsole.time(\"generate tv\");\nconst tv = Television.generateTvFromJson(tvJson);\nconst tvSorted = Television.generateSortedTv(tv);\nconsole.timeEnd(\"generate tv\");\nconsole.info(`tv.length: ${tv.length} tvSorted: ${Object.keys(tvSorted)}`);\n\n// games\nconsole.time(\"generate games\");\nconst games = Game.generateGamesFromJson(gamesJson).filter(\n  (x, i, a) =>\n    a.findIndex((e) => e.title === x.title && e.year === x.year) === i\n);\nconst gamesSorted = Game.generateSortedGames(games);\nconsole.timeEnd(\"generate games\");\nconsole.info(\n  `games.length: ${games.length} gamesSorted: ${Object.keys(gamesSorted)}`\n);\n\nconsole.time(\"matrix fiesta\");\nconst tvCreatorsMatrix = tv.map((e) => e.creator);\nconst tvCreators = [...new Set([].concat.apply([], tvCreatorsMatrix))];\nconst filmAndTvCreators = [...new Set([...directors, ...tvCreators])].sort(\n  sortLastName\n);\n\nconst gameDevelopersMatrix = games.map((e) => e.developer);\nconst gameDevelopers = [\n  ...new Set([].concat.apply([], gameDevelopersMatrix)),\n].sort();\n// .map((e) => {\n//   return { name: e, type: \"Studio\" };\n// });\n// console.log(gameDevelopers[1]);\n\nconst creators = [...new Set([...filmAndTvCreators, ...gameDevelopers])].map(\n  (name) => new Creator(name)\n);\nconsole.timeEnd(\"matrix fiesta\");\n\nconsole.log(\n  \"directors\",\n  directors.length,\n  \"tvCreators\",\n  tvCreators.length,\n  \"filmAndTv\",\n  filmAndTvCreators.length,\n  \"gameDevs\",\n  gameDevelopers.length,\n  \"all\",\n  creators.length\n);\n\nexport const values = {\n  films,\n  filmsSorted,\n  directors,\n  tv,\n  tvSorted,\n  games,\n  gamesSorted,\n  creators,\n};\n","import * as React from \"react\";\nimport { values } from \"./values\";\n\nconsole.info(`store.values: ${Object.keys(values)}`);\n\nexport const MediaContext = React.createContext();\nconst initialState = { count: 0 };\n\nconst storeReducer = (state, action) => {\n  switch (action.type) {\n    case \"reset\":\n      return initialState;\n    case \"increment\":\n      return { count: state.count + 1 };\n    case \"decrement\":\n      return { count: state.count - 1 };\n    default:\n      return state;\n  }\n};\n\nexport default function Store(props) {\n  const [store, dispatch] = React.useReducer(storeReducer, initialState);\n\n  return (\n    <>\n      <MediaContext.Provider value={{ store, dispatch, ...values }}>\n        {props.children}\n      </MediaContext.Provider>\n    </>\n  );\n}\n","import * as React from \"react\";\n\nexport class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false, error: null, errorInfo: null };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    // logErrorToMyService(error, errorInfo);\n    this.setState({ error: error, errorInfo: errorInfo });\n  }\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return (\n        <>\n          <h1>Something went wrong.</h1>\n          {this.state.error}\n          {this.state.errorInfo}\n        </>\n      );\n    }\n    return this.props.children;\n  }\n}\n","import * as React from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function NotFound() {\n  const location = useLocation();\n  document.title = `404 error: ${location.pathname} - MediaSheetViewer`;\n  return (\n    <>\n      <div>\n        <h1 style={{ textAlign: \"center\" }}>404</h1>\n        {location.pathname} not found\n      </div>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport {\n  BrowserRouter as Router,\n  NavLink,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport \"./app.css\";\nimport { ErrorBoundary } from \"./components/ErrorBoundary\";\nimport NotFound from \"./components/NotFound\";\nimport { Spinner } from \"./components/Spinner\";\nimport Store from \"./components/Store\";\n\nconst Home = React.lazy(() => import(\"./components/Home\"));\nconst FilmList = React.lazy(() => import(\"./components/FilmList\"));\nconst TvList = React.lazy(() => import(\"./components/TvList\"));\nconst GamesList = React.lazy(() => import(\"./components/GamesList\"));\nconst DirectorList = React.lazy(() => import(\"./components/DirectorList\"));\nconst MediaDetails = React.lazy(() => import(\"./components/MediaDetails\"));\n\nconst menu = [\n  { path: \"/\", exact: true, name: \"Home\" },\n  { path: \"/films\", name: \"Films\" },\n  { path: \"/tv\", name: \"TV\" },\n  { path: \"/games\", name: \"Games\" },\n  { path: \"/directors\", name: \"Directors\" },\n  { path: \"/spintest\", name: \"spinner\" },\n];\n\nconst routes = [\n  { path: \"/\", exact: true, component: <Home /> },\n  { path: \"/films\", exact: true, component: <FilmList /> },\n  { path: \"/films/:id\", component: <MediaDetails /> },\n  { path: \"/tv\", exact: true, component: <TvList /> },\n  { path: \"/tv/:id\", component: <MediaDetails /> },\n  { path: \"/games\", exact: true, component: <GamesList /> },\n  { path: \"/games/:id\", component: <MediaDetails /> },\n  { path: \"/directors\", exact: true, component: <DirectorList /> },\n  { path: \"/creators/:id\", component: <MediaDetails /> },\n  { path: \"/spintest\", component: <Spinner /> },\n  { path: \"*\", component: <NotFound /> },\n];\n\nexport default function App() {\n  return (\n    <>\n      <ErrorBoundary>\n        <Router basename={\"media-sheet-viewer\"}>\n          <div className=\"headerContainer\">\n            <div className=\"menuItems\">\n              {menu.map((e) => (\n                <NavLink\n                  className=\"menuLink\"\n                  activeClassName=\"menuLinkActive\"\n                  key={e.name}\n                  to={e.path}\n                  exact={e.exact}\n                >\n                  {e.name}\n                </NavLink>\n              ))}\n            </div>\n          </div>\n          <div className=\"bodyContainer\">\n            <React.Suspense fallback={<Spinner />}>\n              <Store>\n                <Switch>\n                  {routes.map((route) => (\n                    <Route\n                      key={route.path}\n                      path={route.path}\n                      exact={route.exact}\n                    >\n                      {route.component}\n                    </Route>\n                  ))}\n                </Switch>\n              </Store>\n            </React.Suspense>\n          </div>\n        </Router>\n      </ErrorBoundary>\n    </>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}