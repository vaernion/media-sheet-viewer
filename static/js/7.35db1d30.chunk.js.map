{"version":3,"sources":["components/SearchForm/index.jsx","hooks/useDebounceEffect.js","components/DirectorList/index.jsx"],"names":["SearchForm","value","setValue","placeholder","React","state","setState","callback","delay","dependencies","memoized","useCallback","useEffect","debounce","setTimeout","clearTimeout","useDebounceEffect","className","htmlFor","type","id","onChange","e","currentTarget","onClick","DirectorList","searchField","setSearchField","mediaSheet","directors","directorsFiltered","setDirectorsFiltered","filter","director","name","normalize","searchStr","includes","document","title","length","map","key","to"],"mappings":"oOAIO,SAASA,EAAT,GAAuD,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,YAAe,EACjCC,WAAeH,GADkB,mBACpDI,EADoD,KAC7CC,EAD6C,KAG3DF,aAAgB,WACdE,EAASL,KACR,CAACA,ICCC,SAA2BM,EAAUC,EAAOC,GACjD,IAAMC,EAAWC,sBAAYJ,EAAUE,GAEvCG,qBAAU,WACR,IAAMC,EAAWC,YAAW,kBAAMJ,MAAYF,GAE9C,OAAO,kBAAMO,aAAaF,MACzB,CAACH,EAAUF,IDNdQ,EACE,WACEd,EAASG,KAEX,IACA,CAACA,IAOH,OACE,gCACE,uBAAKY,UAAU,cACb,yBAAOA,UAAU,cAAcC,QAAQ,mBAAvC,WAGA,yBACEC,KAAK,OACLC,GAAG,kBACHjB,YAAaA,EACbF,MAAOI,EACPgB,SAAU,SAACC,GAAD,OAAOhB,EAASgB,EAAEC,cAActB,UAE5C,0BAAQuB,QAjBM,WAClBlB,EAAS,MAgBL,a,oKE5BO,SAASmB,IAAgB,IAAD,EACCrB,WAAe,IADhB,mBAC9BsB,EAD8B,KACjBC,EADiB,OAEavB,WAChDwB,IAAWC,WAHwB,mBAE9BC,EAF8B,KAEXC,EAFW,KAkBrC,OAZA3B,aAAgB,WACd2B,EACEH,IAAWC,UAAUG,QAAO,SAACC,GAC3B,IAAMC,EAAOC,YAAUF,GACjBG,EAAYD,YAAUT,GAC5B,OAAOQ,EAAKG,SAASD,SAGxB,CAACV,IAEJY,SAASC,MAAT,UAAoBX,IAAWC,UAAUW,OAAzC,iCAEKV,EAGH,gCACE,uBAAKb,UAAU,aACb,uBAAKA,UAAU,kBACb,gBAAC,IAAD,CACEhB,MAAOyB,EACPxB,SAAUyB,EACVxB,YAAY,+CAGhB,uBAAKc,UAAU,kBACb,uBAAKA,UAAU,cACb,0BACGa,EAAkBW,KAAI,SAACP,GAAD,OACrB,sBAAIQ,IAAKR,GACP,gBAAC,IAAD,CAAMS,GAAE,oBAAeT,IAASA,YAjBjB","file":"static/js/7.35db1d30.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { useDebounceEffect } from \"../../hooks/useDebounceEffect\";\nimport \"./searchForm.css\";\n\nexport function SearchForm({ value, setValue, placeholder }) {\n  const [state, setState] = React.useState(value);\n\n  React.useEffect(() => {\n    setState(value);\n  }, [value]);\n\n  useDebounceEffect(\n    () => {\n      setValue(state);\n    },\n    500,\n    [state]\n  );\n\n  const handleClear = () => {\n    setState(\"\");\n  };\n\n  return (\n    <>\n      <div className=\"searchform\">\n        <label className=\"input-label\" htmlFor=\"searchFormInput\">\n          Filter:\n        </label>\n        <input\n          type=\"text\"\n          id=\"searchFormInput\"\n          placeholder={placeholder}\n          value={state}\n          onChange={(e) => setState(e.currentTarget.value)}\n        />\n        <button onClick={handleClear}>Clear</button>\n      </div>\n    </>\n  );\n}\n","import { useCallback, useEffect } from \"react\";\n\n/**\n * Fire callback when dependencies stay unchanged for duration of delay.\n * @link https://stackoverflow.com/a/61127960\n * @export\n * @param {function} callback\n * @param {number} delay Milliseconds\n * @param {any[]} dependencies\n */\nexport function useDebounceEffect(callback, delay, dependencies) {\n  const memoized = useCallback(callback, dependencies);\n\n  useEffect(() => {\n    const debounce = setTimeout(() => memoized(), delay);\n\n    return () => clearTimeout(debounce);\n  }, [memoized, delay]);\n}\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../../styles/lists.css\";\nimport { normalize } from \"../../utils/utilities\";\nimport { SearchForm } from \"../SearchForm\";\nimport { mediaSheet } from \"../Store/mediaSheet\";\nimport \"./DirectorList.css\";\n\nexport default function DirectorList() {\n  const [searchField, setSearchField] = React.useState(\"\");\n  const [directorsFiltered, setDirectorsFiltered] = React.useState(\n    mediaSheet.directors\n  );\n\n  React.useEffect(() => {\n    setDirectorsFiltered(\n      mediaSheet.directors.filter((director) => {\n        const name = normalize(director);\n        const searchStr = normalize(searchField);\n        return name.includes(searchStr);\n      })\n    );\n  }, [searchField]);\n\n  document.title = `${mediaSheet.directors.length} Directors - MediaSheetViewer`;\n\n  if (!directorsFiltered) return null;\n\n  return (\n    <>\n      <div className=\"directors\">\n        <div className=\"directors-head\">\n          <SearchForm\n            value={searchField}\n            setValue={setSearchField}\n            placeholder=\"examples: kubrick | ridley scott | melies\"\n          />\n        </div>\n        <div className=\"directors-body\">\n          <div className=\"list-items\">\n            <ul>\n              {directorsFiltered.map((name) => (\n                <li key={name}>\n                  <Link to={`/creators/${name}`}>{name}</Link>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n"],"sourceRoot":""}