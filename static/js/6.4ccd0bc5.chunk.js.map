{"version":3,"sources":["components/SearchForm/index.jsx","hooks/useDebounceEffect.js","utils/filters.js","components/FieldHeader/index.jsx","components/TvList/TvListItem.jsx","components/TvList/index.jsx"],"names":["SearchForm","value","setValue","placeholder","React","state","setState","callback","delay","dependencies","memoized","useCallback","useEffect","debounce","setTimeout","clearTimeout","useDebounceEffect","type","onChange","e","currentTarget","onClick","filterFilms","sortedFilms","searchField","searchStr","normalize","startsWith","filter","film","genre","findIndex","includes","replace","year","toString","title","director","franchise","filterTv","sortedTv","tv","search","Number","seasons","yearStart","length","yearEnd","creator","filterGames","sortedGames","game","developer","completed","system","FieldHeader","props","active","sort","sortBy","field","arrow","isSortReverse","className","style","width","onclick","undefined","label","TvListItem","to","id","setSearchField","map","name","i","key","TvList","dispatch","DispatchContext","StateContext","document","mediaSheet","payload","handleSort","sortTv","tvSortedLocal","tvSorted","sortReverseTv","tvFiltered"],"mappings":"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","file":"static/js/6.4ccd0bc5.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { useDebounceEffect } from \"../../hooks/useDebounceEffect\";\nimport \"./searchForm.css\";\n\nexport function SearchForm({ value, setValue, placeholder }) {\n  const [state, setState] = React.useState(value);\n\n  React.useEffect(() => {\n    setState(value);\n  }, [value]);\n\n  useDebounceEffect(\n    () => {\n      setValue(state);\n    },\n    500,\n    [state]\n  );\n\n  const handleClear = () => {\n    setState(\"\");\n  };\n\n  return (\n    <>\n      <div>\n        <input\n          type=\"text\"\n          placeholder={placeholder}\n          value={state}\n          onChange={(e) => setState(e.currentTarget.value)}\n        />\n        <button onClick={handleClear}>Clear</button>\n      </div>\n    </>\n  );\n}\n","import { useCallback, useEffect } from \"react\";\n\n/**\n * Fire callback when dependencies stay unchanged for duration of delay.\n * @link https://stackoverflow.com/a/61127960\n * @export\n * @param {function} callback\n * @param {number} delay Milliseconds\n * @param {any[]} dependencies\n */\nexport function useDebounceEffect(callback, delay, dependencies) {\n  const memoized = useCallback(callback, dependencies);\n\n  useEffect(() => {\n    const debounce = setTimeout(() => memoized(), delay);\n\n    return () => clearTimeout(debounce);\n  }, [memoized, delay]);\n}\n","import { normalize } from \"./utilities\";\n\nexport const filterFilms = (sortedFilms, searchField) => {\n  const searchStr = normalize(searchField);\n\n  if (searchStr.startsWith(\"g:\")) {\n    return sortedFilms.filter(\n      (film) =>\n        film.genre.findIndex((genre) =>\n          normalize(genre).includes(searchStr.replace(\"g:\", \"\"))\n        ) !== -1\n    );\n  } else if (searchStr.startsWith(\"y:\")) {\n    return sortedFilms.filter(\n      (film) => film.year.toString() === searchStr.replace(\"y:\", \"\")\n    );\n  } else {\n    return sortedFilms.filter(\n      (film) =>\n        normalize(film.title).includes(searchStr) ||\n        film.director.findIndex((director) =>\n          normalize(director).includes(searchStr)\n        ) !== -1 ||\n        normalize(film.franchise).includes(searchStr)\n    );\n  }\n};\n\nexport const filterTv = (sortedTv, searchField) => {\n  const searchStr = normalize(searchField);\n\n  if (searchStr.startsWith(\"g:\")) {\n    return sortedTv.filter(\n      (tv) =>\n        tv.genre.findIndex((genre) =>\n          normalize(genre).includes(searchStr.replace(\"g:\", \"\"))\n        ) !== -1\n    );\n  } else if (searchStr.startsWith(\"y:\")) {\n    return sortedTv.filter((tv) => {\n      const search = Number(searchStr.replace(\"y:\", \"\"));\n\n      return (\n        tv.seasons[0].yearStart <= search &&\n        tv.seasons[tv.seasons.length - 1].yearEnd >= search\n      );\n    });\n  } else if (searchStr.startsWith(\"ys:\")) {\n    return sortedTv.filter(\n      (tv) =>\n        tv.seasons[0].yearStart.toString() === searchStr.replace(\"ys:\", \"\")\n    );\n  } else if (searchStr.startsWith(\"ye:\")) {\n    return sortedTv.filter(\n      (tv) =>\n        tv.seasons[tv.seasons.length - 1].yearEnd.toString() ===\n        searchStr.replace(\"ye:\", \"\")\n    );\n  } else {\n    return sortedTv.filter(\n      (tv) =>\n        normalize(tv.title).includes(searchStr) ||\n        tv.creator.findIndex((creator) =>\n          normalize(creator).includes(searchStr)\n        ) !== -1\n    );\n  }\n};\n\nexport const filterGames = (sortedGames, searchField) => {\n  const searchStr = normalize(searchField);\n\n  if (searchStr.startsWith(\"g:\")) {\n    return sortedGames.filter(\n      (game) =>\n        game.genre.findIndex((genre) =>\n          normalize(genre).includes(searchStr.replace(\"g:\", \"\"))\n        ) !== -1\n    );\n  } else if (searchStr.startsWith(\"y:\")) {\n    return sortedGames.filter(\n      (game) => game.year.toString() === searchStr.replace(\"y:\", \"\")\n    );\n  } else {\n    return sortedGames.filter(\n      (game) =>\n        normalize(game.title).includes(searchStr) ||\n        game.developer.findIndex((developer) =>\n          normalize(developer).includes(searchStr)\n        ) !== -1 ||\n        normalize(game.completed).includes(searchStr) ||\n        normalize(game.system).includes(searchStr)\n    );\n  }\n};\n","import * as React from \"react\";\nimport \"./FieldHeader.css\";\n\nexport function FieldHeader(props) {\n  const active = props.sort.sortBy === props.field ? true : false;\n  const arrow = active ? (props.sort.isSortReverse ? \"↑\" : \"↓\") : null;\n\n  return (\n    <>\n      <span className={\"fheader-outer\"} style={{ width: props.width }}>\n        <span\n          className={\n            \"fheader\" +\n            (active ? \" active\" : \"\") +\n            (!props.onclick ? \" no-click\" : \"\")\n          }\n          onClick={props.onclick ? () => props.onclick(props.field) : undefined}\n        >\n          {props.label} {arrow}\n        </span>\n      </span>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./TvList.css\";\n\nexport const TvListItem = React.memo(TvListItemRaw);\n\nfunction TvListItemRaw(props) {\n  const tv = props.tv;\n\n  return (\n    <>\n      <div className=\"list-items\">\n        <span className=\"tv-title\">\n          <Link to={`/tv/${tv.id}`}>{tv.title}</Link> (\n          <span\n            className=\"tv-year on-click\"\n            onClick={() =>\n              props.setSearchField(\"ys:\" + tv.seasons[0].yearStart)\n            }\n          >\n            {tv.seasons[0].yearStart}\n          </span>\n          -\n          <span\n            className=\"tv-year on-click\"\n            onClick={() =>\n              props.setSearchField(\n                \"ye:\" + tv.seasons[tv.seasons.length - 1].yearEnd\n              )\n            }\n          >\n            {tv.seasons[tv.seasons.length - 1].yearEnd}\n          </span>\n          )\n        </span>\n        <span className=\"tv-creator\">\n          {tv.creator.map((name, i) => (\n            <span key={name}>\n              <span>{i > 0 ? \" & \" : null}</span>\n              <Link to={`/creators/${name}`}>{name}</Link>\n            </span>\n          ))}\n        </span>\n        <span className=\"tv-genre\">\n          {tv.genre.map((name, i) => (\n            <span key={name}>\n              <span>{i > 0 ? \" / \" : null}</span>\n              <span\n                key={name}\n                className=\"genre-name on-click\"\n                onClick={() => props.setSearchField(\"g:\" + name)}\n              >\n                {name}\n              </span>\n            </span>\n          ))}\n        </span>\n      </div>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport \"../../styles/lists.css\";\nimport { filterTv } from \"../../utils/filters\";\nimport { FieldHeader } from \"../FieldHeader\";\nimport { SearchForm } from \"../SearchForm\";\nimport { DispatchContext, StateContext } from \"../Store\";\nimport { mediaSheet } from \"../Store/mediaSheet\";\nimport \"./TvList.css\";\nimport { TvListItem } from \"./TvListItem\";\n\nexport default function TvList() {\n  const dispatch = React.useContext(DispatchContext);\n  const state = React.useContext(StateContext);\n  const [searchField, setSearchField] = React.useState(state.filterTv);\n\n  document.title = `${mediaSheet.tv.length} TV series - MediaSheetViewer`;\n\n  // persist filter\n  React.useEffect(() => {\n    dispatch({ type: \"FILTER_TV\", payload: searchField });\n  }, [searchField, dispatch]);\n\n  const handleSort = (field) => {\n    if (field === state.sortTv) {\n      dispatch({ type: \"SORT_REVERSE_TV\" });\n    } else {\n      dispatch({ type: \"SORT_TV\", payload: field });\n    }\n  };\n\n  const tvSortedLocal =\n    mediaSheet.tvSorted[state.sortTv + (state.sortReverseTv ? \"Desc\" : \"Asc\")];\n  const tvFiltered = filterTv(tvSortedLocal, searchField);\n\n  return (\n    <>\n      <div className=\"tvs\">\n        <div className=\"tvs-head\">\n          <SearchForm\n            value={searchField}\n            setValue={setSearchField}\n            placeholder=\"examples: wire | david simon | g:sci-fi | (y|ys|ye):2005\"\n          />\n          <div className=\"headers\">\n            <FieldHeader\n              field=\"sortTitle\"\n              label=\"Title\"\n              width=\"10%\"\n              sort={{\n                sortBy: state.sortTv,\n                isSortReverse: state.sortReverseTv,\n              }}\n              onclick={handleSort}\n            />\n            <FieldHeader\n              field=\"yearStart\"\n              label=\"Start\"\n              width=\"10%\"\n              sort={{\n                sortBy: state.sortTv,\n                isSortReverse: state.sortReverseTv,\n              }}\n              onclick={handleSort}\n            />\n            <FieldHeader\n              field=\"yearEnd\"\n              label=\"End\"\n              width=\"10%\"\n              sort={{\n                sortBy: state.sortTv,\n                isSortReverse: state.sortReverseTv,\n              }}\n              onclick={handleSort}\n            />\n            <FieldHeader\n              field=\"creator\"\n              label=\"Creator\"\n              width=\"35%\"\n              sort={{\n                sortBy: state.sortTv,\n                isSortReverse: state.sortReverseTv,\n              }}\n              onclick={handleSort}\n            />\n            <FieldHeader\n              field=\"genre\"\n              label=\"Genre\"\n              width=\"35%\"\n              sort={{\n                sortBy: state.sortTv,\n                isSortReverse: state.sortReverseTv,\n              }}\n            />\n          </div>\n        </div>\n        <div className=\"tvs-body\">\n          {tvFiltered.map((tv) => (\n            <TvListItem key={tv.id} tv={tv} setSearchField={setSearchField} />\n          ))}\n        </div>\n      </div>\n    </>\n  );\n}\n"],"sourceRoot":""}