{"version":3,"sources":["components/Spinner/index.jsx","classes/Film.js","classes/Television.js","components/Store/values.js","components/Store/index.jsx","components/ErrorBoundary.jsx","components/NotFound.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["Spinner","className","Film","film","this","id","_count","title","translatedTitle","sortTitle","director","split","push","trim","genre","year","franchise","filmsJson","map","films","sortedFilms","_sorts","sort","bool","sortFilms","sortBy","isDescending","algorithm","a","b","localeCompare","pop","array","includes","reverse","Television","tvSeries","creator","seasons","minutesTotal","Number","reduce","sum","season","seasonMinutes","tvJson","tvSeasons","rawSeason","parseRawSeason","tvNames","Set","tvSeason","tv","name","filteredSeasons","filter","s","parseSeason","yearStart","yearEnd","episodes","episodeMinutes","parseInt","sortedTv","sortTv","length","console","time","generateFilmsFromJson","x","i","findIndex","e","filmsSorted","generateSortedFilms","timeEnd","info","Object","keys","directorsMatrix","directors","concat","apply","generateTvFromJson","tvSorted","generateSortedTv","MediaContext","React","initialState","count","storeReducer","state","action","type","Store","props","store","dispatch","Provider","value","children","ErrorBoundary","hasError","error","errorInfo","setState","NotFound","location","useLocation","document","pathname","style","textAlign","Home","FilmList","FilmDetails","DirectorList","DirectorDetails","TvList","TvDetails","menu","path","exact","routes","component","App","basename","activeClassName","key","to","fallback","route","Boolean","window","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.f744b9ef.chunk.js","sourcesContent":["import * as React from \"react\";\nimport \"./spinner.css\";\n\nexport function Spinner() {\n  return (\n    <>\n      <div className=\"spinner\"></div>\n    </>\n  );\n}\n","// @ts-check\n\nexport class Film {\n  static _count = 0;\n  static _sorts = [\"title\", \"year\", \"director\", \"franchise\"];\n\n  constructor(film) {\n    this.id = Film._count += 1;\n    this.title = film[\"Original title (romanized)\"];\n    this.translatedTitle = film[\"This release's translation/title\"];\n    this.sortTitle = film[\"Sort\"];\n    this.director = [];\n    for (let director of film[\"Director(s)\"].split(/[,/]+/)) {\n      this.director.push(director.trim());\n    }\n    this.genre = [];\n    for (let genre of film[\"Genres\"].split(/[,/|]+/)) {\n      this.genre.push(genre.trim());\n    }\n    this.year = film[\"Year\"];\n    this.franchise = film[\"Series/Universe\"];\n  }\n\n  static generateFilmsFromJson(filmsJson) {\n    return filmsJson.map((film) => new this(film));\n  }\n\n  static generateSortedFilms(films) {\n    const sortedFilms = {};\n\n    for (let sort of this._sorts) {\n      for (let bool of [true, false]) {\n        sortedFilms[`${sort}${bool ? \"Desc\" : \"Asc\"}`] = this.sortFilms(\n          [...films],\n          sort,\n          bool\n        );\n      }\n    }\n\n    return sortedFilms;\n  }\n\n  static sortFilms(films, sortBy, isDescending) {\n    // console.time(`${sortBy}${isDescending}`);\n    let algorithm = null;\n\n    // title A-Z\n    if (sortBy === \"title\") {\n      algorithm = (a, b) => a.sortTitle.localeCompare(b.sortTitle);\n      // year 1900-2000\n    } else if (sortBy === \"year\") {\n      algorithm = (a, b) => a.year - b.year;\n      // director A-Z by last name of first director\n    } else if (sortBy === \"director\") {\n      algorithm = (a, b) => {\n        a = a.director[0].split(/\\s+/).pop();\n        b = b.director[0].split(/\\s+/).pop();\n        return a.localeCompare(b);\n      };\n      // franchise, entries without franchise always last\n    } else if (sortBy === \"franchise\") {\n      // franchise A-Z\n      if (!isDescending) {\n        algorithm = (a, b) => {\n          if (a.franchise === \"\") return 1;\n          if (b.franchise === \"\") return -1;\n          return a.franchise.localeCompare(b.franchise);\n        };\n        // franchise Z-A\n      } else {\n        algorithm = (a, b) => {\n          if (a.franchise === \"\") return 1;\n          if (b.franchise === \"\") return -1;\n          return b.franchise.localeCompare(a.franchise);\n        };\n      }\n    }\n\n    if (!algorithm) return films;\n\n    // sort ascending (and descending if franchise)\n    let array = [...films].sort(algorithm);\n\n    // for all except franchise we can just reverse to get descending\n    if (isDescending && [\"title\", \"year\", \"director\"].includes(sortBy)) {\n      array = array.reverse();\n    }\n\n    // console.timeEnd(`${sortBy}${isDescending}`);\n    return array;\n  }\n}\n","// @ts-check\n\nexport class Television {\n  static _count = 0;\n  static _sorts = [\"title\", \"yearStart\", \"yearEnd\", \"creator\"];\n\n  constructor(tvSeries) {\n    this.id = Television._count += 1;\n    this.title = tvSeries.title;\n    this.sortTitle = tvSeries.sortTitle;\n    this.creator = tvSeries.creator;\n    this.genre = tvSeries.genre;\n    this.seasons = tvSeries.seasons;\n    this.minutesTotal = Number(\n      this.seasons.reduce((sum, season) => sum + season.seasonMinutes, 0)\n    );\n  }\n\n  static generateTvFromJson(tvJson) {\n    const tvSeasons = tvJson.map((rawSeason) => this.parseRawSeason(rawSeason));\n    const tvNames = [...new Set(tvSeasons.map((tvSeason) => tvSeason.title))];\n\n    const tv = [];\n\n    for (let name of tvNames) {\n      let filteredSeasons = tvSeasons.filter(\n        (tvSeason) => tvSeason.title === name\n      );\n\n      let tvSeries = {\n        title: name,\n        sortTitle: filteredSeasons[0].sortTitle,\n        creator: filteredSeasons[0].creator,\n        genre: filteredSeasons[0].genre,\n        seasons: [],\n      };\n\n      for (let s of filteredSeasons) {\n        tvSeries.seasons.push(this.parseSeason(s));\n      }\n\n      tv.push(new this(tvSeries));\n    }\n\n    return tv;\n  }\n\n  static parseRawSeason(tv) {\n    let rawSeason = {};\n\n    rawSeason.title = tv[\"Original title\"];\n    rawSeason.sortTitle = tv[\"Sort\"];\n    rawSeason.creator = [];\n    for (let creator of tv[\"Creator(s)\"].split(/[&,/]+|\\band\\b/)) {\n      rawSeason.creator.push(creator.trim());\n    }\n    rawSeason.genre = [];\n    for (let genre of tv[\"Genres\"].split(/[,/|]+/)) {\n      rawSeason.genre.push(genre.trim());\n    }\n    rawSeason.season = Number(tv[\"S\"]);\n    rawSeason.yearStart = Number(tv[\"Start\"]);\n    rawSeason.yearEnd = Number(tv[\"End\"]);\n    rawSeason.episodes = Number(tv[\"E\"]);\n    rawSeason.episodeMinutes = parseInt(tv[\"Mins\"]);\n\n    return rawSeason;\n  }\n\n  static parseSeason(s) {\n    return {\n      season: s.season,\n      yearStart: s.yearStart,\n      yearEnd: s.yearEnd,\n      episodes: s.episodes,\n      episodeMinutes: s.episodeMinutes,\n      seasonMinutes: s.episodes * s.episodeMinutes,\n    };\n  }\n\n  static generateSortedTv(tv) {\n    const sortedTv = {};\n\n    for (let sort of this._sorts) {\n      for (let bool of [true, false]) {\n        sortedTv[`${sort}${bool ? \"Desc\" : \"Asc\"}`] = this.sortTv(\n          [...tv],\n          sort,\n          bool\n        );\n      }\n    }\n\n    return sortedTv;\n  }\n\n  static sortTv(tv, sortBy, isDescending) {\n    let algorithm = null;\n\n    // title A-Z\n    if (sortBy === \"title\") {\n      algorithm = (a, b) => a.sortTitle.localeCompare(b.sortTitle);\n      // year 1900-2000 start first season\n    } else if (sortBy === \"yearStart\") {\n      algorithm = (a, b) => a.seasons[0].yearStart - b.seasons[0].yearStart;\n      // year 1900-2000 end last season\n    } else if (sortBy === \"yearEnd\") {\n      algorithm = (a, b) =>\n        a.seasons[a.seasons.length - 1].yearEnd -\n        b.seasons[b.seasons.length - 1].yearEnd;\n      // creator A-Z by last name of first creator\n    } else if (sortBy === \"creator\") {\n      algorithm = (a, b) => {\n        a = a.creator[0].split(/\\s+/).pop();\n        b = b.creator[0].split(/\\s+/).pop();\n        return a.localeCompare(b);\n      };\n    }\n\n    if (!algorithm) return tv;\n\n    // sort ascending (and descending if franchise)\n    let array = [...tv].sort(algorithm);\n\n    // for all except franchise we can just reverse to get descending\n    if (isDescending && this._sorts.includes(sortBy)) {\n      array = array.reverse();\n    }\n\n    return array;\n  }\n}\n","import { Film } from \"../../classes/Film\";\nimport { Television } from \"../../classes/Television\";\nimport filmsJson from \"../../data/films.json\";\nimport tvJson from \"../../data/tv.json\";\n\n// films\nconsole.time(\"generate film\");\nconst films = Film.generateFilmsFromJson(filmsJson).filter(\n  (x, i, a) =>\n    a.findIndex((e) => e.title === x.title && e.year === x.year) === i\n);\nconst filmsSorted = Film.generateSortedFilms(films);\nconsole.timeEnd(\"generate film\");\nconsole.info(\n  `films.length: ${films.length} filmsSorted: ${Object.keys(filmsSorted)}`\n);\n\n// film directors\nconsole.time(\"generate directors\");\nconst directorsMatrix = films.map((e) => e.director);\nconst directors = [...new Set([].concat.apply([], directorsMatrix))].sort(\n  (a, b) => {\n    a = a.split(/\\s+/).pop();\n    b = b.split(/\\s+/).pop();\n    return a.localeCompare(b);\n  }\n);\nconsole.timeEnd(\"generate directors\");\nconsole.info(`directors.length: ${directors.length}`);\n\n// tv\nconsole.time(\"generate tv\");\nconst tv = Television.generateTvFromJson(tvJson);\nconst tvSorted = Television.generateSortedTv(tv);\nconsole.timeEnd(\"generate tv\");\nconsole.info(`tv.length: ${tv.length} tvSorted: ${Object.keys(tvSorted)}`);\n\nexport { films, filmsSorted, directors, tv, tvSorted };\n","import * as React from \"react\";\nimport { directors, films, filmsSorted, tv, tvSorted } from \"./values\";\n\nexport const MediaContext = React.createContext();\nconst initialState = { count: 0 };\n\nconst storeReducer = (state, action) => {\n  switch (action.type) {\n    case \"reset\":\n      return initialState;\n    case \"increment\":\n      return { count: state.count + 1 };\n    case \"decrement\":\n      return { count: state.count - 1 };\n    default:\n      return state;\n  }\n};\n\nexport default function Store(props) {\n  const [store, dispatch] = React.useReducer(storeReducer, initialState);\n\n  return (\n    <>\n      <MediaContext.Provider\n        value={{ store, dispatch, films, filmsSorted, directors, tv, tvSorted }}\n      >\n        {props.children}\n      </MediaContext.Provider>\n    </>\n  );\n}\n","import * as React from \"react\";\n\nexport class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false, error: null, errorInfo: null };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    // logErrorToMyService(error, errorInfo);\n    this.setState({ error: error, errorInfo: errorInfo });\n  }\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return (\n        <>\n          <h1>Something went wrong.</h1>\n          {this.state.error}\n          {this.state.errorInfo}\n        </>\n      );\n    }\n    return this.props.children;\n  }\n}\n","import * as React from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function NotFound() {\n  const location = useLocation();\n  document.title = `404 error: ${location.pathname} - MediaSheetViewer`;\n  return (\n    <>\n      <div>\n        <h1 style={{ textAlign: \"center\" }}>404</h1>\n        {location.pathname} not found\n      </div>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport {\n  BrowserRouter as Router,\n  NavLink,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport \"./app.css\";\nimport { ErrorBoundary } from \"./components/ErrorBoundary\";\nimport NotFound from \"./components/NotFound\";\nimport { Spinner } from \"./components/Spinner\";\nimport Store from \"./components/Store\";\n\nconst Home = React.lazy(() => import(\"./components/Home\"));\nconst FilmList = React.lazy(() => import(\"./components/FilmList\"));\nconst FilmDetails = React.lazy(() => import(\"./components/FilmDetails\"));\nconst DirectorList = React.lazy(() => import(\"./components/DirectorList\"));\nconst DirectorDetails = React.lazy(() =>\n  import(\"./components/DirectorDetails\")\n);\nconst TvList = React.lazy(() => import(\"./components/TvList\"));\nconst TvDetails = React.lazy(() => import(\"./components/TvDetails\"));\n\nconst menu = [\n  { path: \"/\", exact: true, name: \"Home\" },\n  { path: \"/films\", name: \"Films\" },\n  { path: \"/directors\", name: \"Directors\" },\n  { path: \"/tv\", name: \"TV\" },\n  { path: \"/spintest\", name: \"spinner\" },\n];\n\nconst routes = [\n  { path: \"/\", exact: true, component: <Home /> },\n  { path: \"/films\", exact: true, component: <FilmList /> },\n  { path: \"/films/:filmId\", component: <FilmDetails /> },\n  { path: \"/directors\", exact: true, component: <DirectorList /> },\n  { path: \"/directors/:directorName\", component: <DirectorDetails /> },\n  { path: \"/tv\", exact: true, component: <TvList /> },\n  { path: \"/tv/:tvId\", component: <TvDetails /> },\n  { path: \"/spintest\", component: <Spinner /> },\n  { path: \"*\", component: <NotFound /> },\n];\n\nexport default function App() {\n  return (\n    <>\n      <ErrorBoundary>\n        <Router basename={\"media-sheet-viewer\"}>\n          <div className=\"headerContainer\">\n            <div className=\"menuItems\">\n              {menu.map((e) => (\n                <NavLink\n                  className=\"menuLink\"\n                  activeClassName=\"menuLinkActive\"\n                  key={e.name}\n                  to={e.path}\n                  exact={e.exact}\n                >\n                  {e.name}\n                </NavLink>\n              ))}\n            </div>\n          </div>\n          <div className=\"bodyContainer\">\n            <React.Suspense fallback={<Spinner />}>\n              <Store>\n                <Switch>\n                  {routes.map((route) => (\n                    <Route\n                      key={route.path}\n                      path={route.path}\n                      exact={route.exact}\n                    >\n                      {route.component}\n                    </Route>\n                  ))}\n                </Switch>\n              </Store>\n            </React.Suspense>\n          </div>\n        </Router>\n      </ErrorBoundary>\n    </>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}