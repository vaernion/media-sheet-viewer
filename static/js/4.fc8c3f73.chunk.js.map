{"version":3,"sources":["components/SearchForm/index.jsx","hooks/useDebounceEffect.js","utils/filters.js","components/FieldHeader/index.jsx","components/FilmList/FilmListItem.jsx","components/FilmList/index.jsx"],"names":["SearchForm","value","setValue","placeholder","React","state","setState","callback","delay","dependencies","memoized","useCallback","useEffect","debounce","setTimeout","clearTimeout","useDebounceEffect","className","htmlFor","type","id","onChange","e","currentTarget","onClick","filterFilms","sortedFilms","searchField","searchStr","normalize","startsWith","filter","film","genre","findIndex","includes","replace","year","toString","title","director","franchise","filterTv","sortedTv","tv","search","Number","seasons","yearStart","length","yearEnd","creator","filterGames","sortedGames","game","developer","completed","system","FieldHeader","props","active","sort","sortBy","field","arrow","isSortReverse","style","width","tabindex","onclick","undefined","label","FilmListItem","to","setSearchField","map","name","i","key","FilmList","dispatch","DispatchContext","StateContext","document","mediaSheet","films","payload","handleSort","sortFilms","filmsSortedLocal","filmsSorted","sortReverseFilms","filmsFiltered"],"mappings":"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","file":"static/js/4.fc8c3f73.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { useDebounceEffect } from \"../../hooks/useDebounceEffect\";\nimport \"./searchForm.css\";\n\nexport function SearchForm({ value, setValue, placeholder }) {\n  const [state, setState] = React.useState(value);\n\n  React.useEffect(() => {\n    setState(value);\n  }, [value]);\n\n  useDebounceEffect(\n    () => {\n      setValue(state);\n    },\n    500,\n    [state]\n  );\n\n  const handleClear = () => {\n    setState(\"\");\n  };\n\n  return (\n    <>\n      <div className=\"searchform\">\n        <label className=\"input-label\" htmlFor=\"searchFormInput\">\n          Filter:\n        </label>\n        <input\n          type=\"text\"\n          id=\"searchFormInput\"\n          placeholder={placeholder}\n          value={state}\n          onChange={(e) => setState(e.currentTarget.value)}\n        />\n        <button onClick={handleClear}>Clear</button>\n      </div>\n    </>\n  );\n}\n","import { useCallback, useEffect } from \"react\";\n\n/**\n * Fire callback when dependencies stay unchanged for duration of delay.\n * @link https://stackoverflow.com/a/61127960\n * @export\n * @param {function} callback\n * @param {number} delay Milliseconds\n * @param {any[]} dependencies\n */\nexport function useDebounceEffect(callback, delay, dependencies) {\n  const memoized = useCallback(callback, dependencies);\n\n  useEffect(() => {\n    const debounce = setTimeout(() => memoized(), delay);\n\n    return () => clearTimeout(debounce);\n  }, [memoized, delay]);\n}\n","import { normalize } from \"./utilities\";\n\nexport const filterFilms = (sortedFilms, searchField) => {\n  const searchStr = normalize(searchField);\n\n  if (searchStr.startsWith(\"g:\")) {\n    return sortedFilms.filter(\n      (film) =>\n        film.genre.findIndex((genre) =>\n          normalize(genre).includes(searchStr.replace(\"g:\", \"\"))\n        ) !== -1\n    );\n  } else if (searchStr.startsWith(\"y:\")) {\n    return sortedFilms.filter(\n      (film) => film.year.toString() === searchStr.replace(\"y:\", \"\")\n    );\n  } else {\n    return sortedFilms.filter(\n      (film) =>\n        normalize(film.title).includes(searchStr) ||\n        film.director.findIndex((director) =>\n          normalize(director).includes(searchStr)\n        ) !== -1 ||\n        normalize(film.franchise).includes(searchStr)\n    );\n  }\n};\n\nexport const filterTv = (sortedTv, searchField) => {\n  const searchStr = normalize(searchField);\n\n  if (searchStr.startsWith(\"g:\")) {\n    return sortedTv.filter(\n      (tv) =>\n        tv.genre.findIndex((genre) =>\n          normalize(genre).includes(searchStr.replace(\"g:\", \"\"))\n        ) !== -1\n    );\n  } else if (searchStr.startsWith(\"y:\")) {\n    return sortedTv.filter((tv) => {\n      const search = Number(searchStr.replace(\"y:\", \"\"));\n\n      return (\n        tv.seasons[0].yearStart <= search &&\n        tv.seasons[tv.seasons.length - 1].yearEnd >= search\n      );\n    });\n  } else if (searchStr.startsWith(\"ys:\")) {\n    return sortedTv.filter(\n      (tv) =>\n        tv.seasons[0].yearStart.toString() === searchStr.replace(\"ys:\", \"\")\n    );\n  } else if (searchStr.startsWith(\"ye:\")) {\n    return sortedTv.filter(\n      (tv) =>\n        tv.seasons[tv.seasons.length - 1].yearEnd.toString() ===\n        searchStr.replace(\"ye:\", \"\")\n    );\n  } else {\n    return sortedTv.filter(\n      (tv) =>\n        normalize(tv.title).includes(searchStr) ||\n        tv.creator.findIndex((creator) =>\n          normalize(creator).includes(searchStr)\n        ) !== -1\n    );\n  }\n};\n\nexport const filterGames = (sortedGames, searchField) => {\n  const searchStr = normalize(searchField);\n\n  if (searchStr.startsWith(\"g:\")) {\n    return sortedGames.filter(\n      (game) =>\n        game.genre.findIndex((genre) =>\n          normalize(genre).includes(searchStr.replace(\"g:\", \"\"))\n        ) !== -1\n    );\n  } else if (searchStr.startsWith(\"y:\")) {\n    return sortedGames.filter(\n      (game) => game.year.toString() === searchStr.replace(\"y:\", \"\")\n    );\n  } else {\n    return sortedGames.filter(\n      (game) =>\n        normalize(game.title).includes(searchStr) ||\n        game.developer.findIndex((developer) =>\n          normalize(developer).includes(searchStr)\n        ) !== -1 ||\n        normalize(game.completed).includes(searchStr) ||\n        normalize(game.system).includes(searchStr)\n    );\n  }\n};\n","import * as React from \"react\";\nimport \"./FieldHeader.css\";\n\nexport function FieldHeader(props) {\n  const active = props.sort.sortBy === props.field ? true : false;\n  const arrow = active ? (props.sort.isSortReverse ? \"↑\" : \"↓\") : null;\n\n  return (\n    <>\n      <span className={\"fheader-outer\"} style={{ width: props.width }}>\n        <span\n          tabindex={0}\n          className={\n            \"fheader\" +\n            (active ? \" active\" : \"\") +\n            (!props.onclick ? \" no-click\" : \"\")\n          }\n          onClick={props.onclick ? () => props.onclick(props.field) : undefined}\n        >\n          {props.label} {arrow}\n        </span>\n      </span>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./filmsList.css\";\n\nexport const FilmListItem = React.memo(FilmListItemRaw);\n\nfunction FilmListItemRaw(props) {\n  const film = props.film;\n\n  return (\n    <>\n      <div className=\"list-items\">\n        <span className=\"film-title\">\n          <Link to={`/films/${film.id}`}>{film.title}</Link> (\n          <span\n            className=\"film-year on-click\"\n            onClick={() => props.setSearchField(\"y:\" + film.year)}\n          >\n            {film.year}\n          </span>\n          )\n        </span>\n        <span className=\"film-director\">\n          {film.director.map((name, i) => (\n            <span key={name}>\n              <span>{i > 0 ? \" & \" : null}</span>\n              <Link to={`/creators/${name}`}>{name}</Link>\n            </span>\n          ))}\n        </span>\n        <span className=\"film-genre\">\n          {film.genre.map((name, i) => (\n            <span key={name}>\n              <span>{i > 0 ? \" / \" : null}</span>\n              <span\n                key={name}\n                className=\"genre-name on-click\"\n                onClick={() => props.setSearchField(\"g:\" + name)}\n              >\n                {name}\n              </span>\n            </span>\n          ))}\n        </span>\n        <span\n          className=\"film-franchise on-click\"\n          onClick={() => props.setSearchField(film.franchise)}\n        >\n          {film.franchise}\n        </span>\n      </div>\n    </>\n  );\n}\n","import * as React from \"react\";\nimport \"../../styles/lists.css\";\nimport { filterFilms } from \"../../utils/filters\";\nimport { FieldHeader } from \"../FieldHeader\";\nimport { SearchForm } from \"../SearchForm\";\nimport { DispatchContext, StateContext } from \"../Store\";\nimport { mediaSheet } from \"../Store/mediaSheet\";\nimport { FilmListItem } from \"./FilmListItem\";\nimport \"./filmsList.css\";\n\nexport default function FilmList() {\n  const dispatch = React.useContext(DispatchContext);\n  const state = React.useContext(StateContext);\n  const [searchField, setSearchField] = React.useState(state.filterFilms);\n\n  document.title = `${mediaSheet.films.length} Films - MediaSheetViewer`;\n\n  // persist filter\n  React.useEffect(() => {\n    dispatch({ type: \"FILTER_FILMS\", payload: searchField });\n  }, [searchField, dispatch]);\n\n  const handleSort = (field) => {\n    if (field === state.sortFilms) {\n      dispatch({ type: \"SORT_REVERSE_FILMS\" });\n    } else {\n      dispatch({ type: \"SORT_FILMS\", payload: field });\n    }\n  };\n\n  const filmsSortedLocal =\n    mediaSheet.filmsSorted[\n      state.sortFilms + (state.sortReverseFilms ? \"Desc\" : \"Asc\")\n    ];\n  const filmsFiltered = filterFilms(filmsSortedLocal, searchField);\n\n  return (\n    <>\n      <div className=\"films\">\n        <div className=\"films-head\">\n          <SearchForm\n            value={searchField}\n            setValue={setSearchField}\n            placeholder=\"examples: star wars | g:drama | hitchcock | y:2010\"\n          />\n          <div className=\"headers\">\n            <FieldHeader\n              field=\"sortTitle\"\n              label=\"Title\"\n              width=\"20%\"\n              sort={{\n                sortBy: state.sortFilms,\n                isSortReverse: state.sortReverseFilms,\n              }}\n              onclick={handleSort}\n            />\n            <FieldHeader\n              field=\"year\"\n              label=\"Year\"\n              width=\"10%\"\n              sort={{\n                sortBy: state.sortFilms,\n                isSortReverse: state.sortReverseFilms,\n              }}\n              onclick={handleSort}\n            />\n            <FieldHeader\n              field=\"director\"\n              label=\"Director\"\n              width=\"25%\"\n              sort={{\n                sortBy: state.sortFilms,\n                isSortReverse: state.sortReverseFilms,\n              }}\n              onclick={handleSort}\n            />\n            <FieldHeader\n              field=\"genre\"\n              label=\"Genre\"\n              width=\"30%\"\n              sort={{\n                sortBy: state.sortFilms,\n                isSortReverse: state.sortReverseFilms,\n              }}\n            />\n            <FieldHeader\n              field=\"franchise\"\n              label=\"Franchise\"\n              width=\"15%\"\n              sort={{\n                sortBy: state.sortFilms,\n                isSortReverse: state.sortReverseFilms,\n              }}\n              onclick={handleSort}\n            />\n          </div>\n        </div>\n        <div className=\"films-body\">\n          {filmsFiltered\n            // .filter((e) => e.id > 500 && e.id < 600)\n            .map((film) => (\n              <FilmListItem\n                key={film.id}\n                film={film}\n                setSearchField={setSearchField}\n              />\n            ))}\n        </div>\n      </div>\n    </>\n  );\n}\n"],"sourceRoot":""}